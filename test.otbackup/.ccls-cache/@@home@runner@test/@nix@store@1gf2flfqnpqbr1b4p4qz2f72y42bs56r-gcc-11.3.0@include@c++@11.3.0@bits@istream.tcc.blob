[{"ops":[{"insert":"*\u0000\u0002\u0002\u0001\u0001\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/istream.tcc\u0000/home/runner/test/main.cpp\u0000\u0016clang\u0000/home/runner/test/main.cpp\u0000-idirafter\u0000/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu\u0000-frandom-seed=xj94mglrnw\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-working-directory=/home/runner/test/\u0000ï¿½/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ostream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/initializer_list\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdlib\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/cpu_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/type_traits\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/ctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream_insert.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clock_t.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdarg.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timespec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/mbstate_t.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno-base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct___jmp_buf_tag.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/locale.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthread_stack_min-dynamic.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/char_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/debug.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stddef.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__mbstate_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/single_threaded.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stringfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ios\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iostream\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clockid_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes-arch.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/numeric_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timeval.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwctype\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++config.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/new\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cpp_type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++locale.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdint.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-intn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdc-predef.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/byteswap.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/long-double.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/predefined_ops.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cerrno\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/std_abs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitflags.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features-time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_construct.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwchar\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/os_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_forced.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iosfwd\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/locale.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/concept_check.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdio\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/system_error\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/postypes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/charconv.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-uintn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/new_allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_defines.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/uintn-identity.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timesize.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/memoryfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/wint_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/alloc_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/localefwd.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_algobase.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/thread-shared-types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_init_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sched.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitstatus.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_itimerspec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_tm.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ptr_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdio.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_ptr.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/string\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/atomic_word.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ios_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/cookie_io_functions_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/clocale\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr-default.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdio_lim.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn-common.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/typeinfo\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/sched.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/range_access.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/alloc_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wordsize.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/string_conversions.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/typesizes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/pthread.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/setjmp.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functexcept.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/streambuf\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/timer_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cctype\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endianness.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdlib-float.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/exception\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/cdefs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functional_hash.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_inline.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/backward/binders.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/assertions.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/istream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/alloca.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_pair.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_mutex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_rwlock.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/atomic_wide_counter.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_funcs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/move.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/time_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/error_constants.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs-64.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/libc-header-start.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_function.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdint.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf_iterator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/FILE.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wctype-wchar.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/stdexcept\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/nested_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdint\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_sched_param.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/atomicity.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos64_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/error_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/cpu-set.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/hash_bytes.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/linux/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdlib.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/__stddef_max_align_t.h\u0000\u0002\u0001L/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_forced.h\u0000\u00008ï¿½>uï¿½'std::basic_istream::__istream_type &std::basic_istream::seekg(std::basic_istream::off_type, ios_base::seekdir)\u0000Hp\n\u0001ï¿½\u0003\bï¿½\u0003\u0012ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\n\u0000 @brief  Changing the current read position.\n @param  __off  A file offset object.\n @param  __dir  The direction in which to seek.\n @return  *this\n\n If @c fail() is not true, calls @c rdbuf()->pubseekoff(__off,__dir).\n If that function fails, sets failbit.\n\n @note  This function first clears eofbit.  It does not count the\n        number of characters extracted, if any, and therefore does\n        not affect the next call to @c gcount().\u0000\u0000\u0005ï¿½4\u0012\u0010+ï¿½8\u0013ï¿½*ï¿½#ï¿½Æï¿½?ï¿½Pï¿½Yï¿½^ï¿½M\u0010ï¿½\u0012ï¿½L\t\u0015ï¿½\u0003Dï¿½\u0003Fï¿½C]Gg3\u001b\u0003ï¿½$@ï¿½\u0003Dï¿½\u0003Fï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@ï¿½\u0003Dï¿½\u0003Fï¿½{1HÅRE\u0003ï¿½$@ï¿½\u0003Hï¿½\u0003Jï¿½GLï¿½Iï¿½\u0015ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½vgï¿½[1\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½Rï¿½-ï¿½}ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½fDtï¿½\u00189ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½,L,ï¿½\u0000ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½55ï¿½Tbï¿½S}\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u001bï¿½Í¯ï¿½\u0014nï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u001e\"2Cï¿½@+C\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½)ï¿½Zï¿½MØ\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u0006\u0010Sï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½@\u0013Ò\u0010\tï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½/ï¿½\t_ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u0007$ï¿½Uï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½rï¿½Zï¿½SFï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½Þ¤9\bï¿½.\u0003ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½;ï¿½\u001fï¿½\u001c\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u0007ï¿½\u0007|ï¿½{\u0015y\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½;ï¿½\u001fï¿½\u001cinline bool std::operator==(const std::error_condition &__lhs, const std::error_code &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½Þ¤9\bï¿½.\u0003ï¿½inline bool std::operator==(const std::error_condition &__lhs, const std::error_condition &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½rï¿½Zï¿½SFï¿½inline bool std::operator==(const std::error_code &__lhs, const std::error_condition &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½zï¿½Pï¿½jï¿½const _Facet &std::use_facet(const std::locale &)\u0000\u001c&\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0002ï¿½\u0003Dï¿½\u0003Vï¿½$@\u0001ï¿½#\u0004Bï¿½#\u0004Tï¿½$@\u0001ï¿½\u0007$ï¿½Uï¿½inline bool std::operator==(const std::error_code &__lhs, const std::error_code &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½)ï¿½Zï¿½MØinline bool std::operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½55ï¿½Tbï¿½S}inline bool std::operator==(const move_iterator<_IteratorL> &__x, const move_iterator<_IteratorR> &__y)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0007ï¿½\u0007|ï¿½{\u0015yinline bool std::operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½@\u0013Ò\u0010\tï¿½inline bool std::operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½3R\u0017ï¿½Fint std::basic_istream::sync()\u0000\b0\b\u0001ï¿½/\u0003\bï¿½/\u0003\u0010ï¿½\u0002\u0004\u0001ï¿½,\u0003\u0004ï¿½N\u0003\n\u0000 @brief  Synchronizing the stream buffer.\n @return  0 on success, -1 on failure\n\n If @c rdbuf() is a null pointer, returns -1.\n\n Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,\n sets badbit and returns -1.\n\n Otherwise, returns 0.\n\n @note  This function does not count the number of characters\n        extracted, if any, and therefore does not affect the next\n        call to @c gcount().\u0000\u0000\u0004ï¿½vï¿½î¡ï¿½w$ï¿½8ï¿½\u0016e?ï¿½\u001fï¿½Ý­ï¿½2ï¿½bï¿½ {mnï¿½\u0011ï¿½=\u00030ï¿½=\u00034ï¿½vgï¿½[1\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½Rï¿½-ï¿½}ï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½fDtï¿½\u00189ï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½,L,ï¿½\u0000ï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½55ï¿½Tbï¿½S}\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½\u001bï¿½Í¯ï¿½\u0014nï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½\u001e\"2Cï¿½@+C\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½)ï¿½Zï¿½MØ\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½\u0006\u0010Sï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½@\u0013Ò\u0010\tï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½/ï¿½\t_ï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½\u0007$ï¿½Uï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½rï¿½Zï¿½SFï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½Þ¤9\bï¿½.\u0003ï¿½\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½;ï¿½\u001fï¿½\u001c\u0003ï¿½$@ï¿½=\u00030ï¿½=\u00034ï¿½\u0007ï¿½\u0007|ï¿½{\u0015y\u0003ï¿½$@ï¿½>\u0003\u0018ï¿½>\u0003\u001cï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½dï¿½X,ï¿½/Cstd::basic_istream::__istream_type &std::basic_istream::unget()\u0000Hp\n\u0001ï¿½\f\u0003\bï¿½\f\u0003\u0012ï¿½\u0002\u0004\u0001ï¿½\t\u0003\u0004ï¿½*\u0003\n\u0000 @brief  Unextracting the previous character.\n @return  *this\n\n If @c rdbuf() is not null, calls @c rdbuf()->sungetc(c).\n\n If @c rdbuf() is null or if @c sungetc() fails, sets badbit in\n the error state.\n\n @note  This function first clears eofbit.  Since no characters\n        are extracted, the next call to @c gcount() will return 0,\n        as required by DR 60.\u0000\u0000\u0004ï¿½Rï¿½Èï¿½\u001a\nUpï¿½s$ï¿½9\u001e=ï¿½E\u0000]ï¿½eB{\u0005ï¿½\u0012\u0003Dï¿½\u0012\u0003Fï¿½C]Gg3\u001b\u0003ï¿½$@ï¿½\u0012\u0003Dï¿½\u0012\u0003Fï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@ï¿½\u0012\u0003Dï¿½\u0012\u0003Fï¿½{1HÅRE\u0003ï¿½$@ï¿½\u0012\u0003Hï¿½\u0012\u0003Jï¿½GLï¿½Iï¿½\u0015ï¿½\u0003ï¿½$@ï¿½\u001d\u0003\u0010ï¿½\u001d\u0003\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½,L,ï¿½\u0000ï¿½inline bool std::operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½Rï¿½-ï¿½}ï¿½inline constexpr bool std::operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y)\u0000,6\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½GLï¿½Iï¿½\u0015ï¿½inline constexpr std::_Ios_Iostate std::operator~(std::_Ios_Iostate __a)\u0000FP\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0004ï¿½\u0002Hï¿½\u0002Jï¿½$@\u0001ï¿½\u0012\u0003Hï¿½\u0012\u0003Jï¿½$@\u0001ï¿½t\u0003Hï¿½t\u0003Jï¿½$@\u0001ï¿½\u0003Hï¿½\u0003Jï¿½$@\u0001ï¿½\u0005ï¿½\u0010\u001a\t~ï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(short &__n)\u0000Hp\u0014\u0001y\by\u001cï¿½\u0002\u0004\u0001v\u0004ï¿½\n\u0000\u0000\u0000\u0005ï¿½yï¿½\u001eï¿½-ï¿½Æ¶ï¿½f\u0012\u0003ï¿½%ï¿½t8ï¿½8}^ï¿½Cï¿½Eï¿½6~\u0002ï¿½\u0010ï¿½\u0004ï¿½Hï¿½bï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@ï¿½Hï¿½bï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@ï¿½\u0014ï¿½\u0018ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u0014ï¿½\u0018ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u001e\"2Cï¿½@+Cinline bool std::operator==(const allocator<_T1> &, const allocator<_T2> &) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½Zuï¿½nï¿½D/std::streamsize std::__copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &)\u0000 **\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½\u0018ï¿½Bï¿½$@\u0001ï¿½gï¿½\u000eQz7std::basic_istream::__istream_type &std::basic_istream::_M_extract(_ValueT &__v)\u0000Hp\u0014\u0001^\f^ ï¿½\u0002\u0004\u0001Z\u0004t\u000e\u0000\u0000\u0000\u0004ï¿½2ï¿½Dï¿½l\\$ï¿½Yï¿½U{\u0005ï¿½[ï¿½\u001fÝF/ï¿½\u001fï¿½ ï¿½qB^/]\r\u0002f>fXï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@f>fXï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0013Bï¿½/\u001eï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(std::basic_istream::__streambuf_type *__sb)\u0000Hp\u0014\u0001ï¿½\bï¿½\u001cï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0000 @brief  Extracting into another streambuf.\n @param  __sb  A pointer to a streambuf\n\n This function behaves like one of the basic arithmetic extractors,\n in that it also constructs a sentry object and has the same error\n handling behavior.\n\n If @p __sb is NULL, the stream will set failbit in its error state.\n\n Characters are extracted from this stream and inserted into the\n @p __sb streambuf until one of the following occurs:\n\n - the input stream reaches end-of-file,\n - insertion into the output buffer fails (in this case, the\n   character that would have been inserted is not extracted), or\n - an exception occurs (and in this case is caught)\n\n If the function inserts no characters, failbit is set.\u0000\u0000\u0004ï¿½Q\u0010ï¿½6aï¿½-ï¿½yZï¿½\u0007ï¿½Tï¿½Om\u0007ï¿½Z\nï¿½`ï¿½^\u0004ï¿½\u0018ï¿½Bï¿½Zuï¿½nï¿½D/\u0003ï¿½$@ï¿½\u0010ï¿½\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u0010ï¿½\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u000eï¿½\u0012ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½\u0017Wz\u0011ï¿½std::basic_istream::__istream_type &std::basic_istream::seekg(std::basic_istream::pos_type)\u0000Hp\n\u0001ï¿½o\u0003\bï¿½o\u0003\u0012ï¿½\u0002\u0004\u0001ï¿½l\u0003\u0004ï¿½\u0003\n\u0000 @brief  Changing the current read position.\n @param  __pos  A file position object.\n @return  *this\n\n If @c fail() is not true, calls @c rdbuf()->pubseekpos(__pos).  If\n that function fails, sets failbit.\n\n @note  This function first clears eofbit.  It does not count the\n        number of characters extracted, if any, and therefore does\n        not affect the next call to @c gcount().\u0000\u0000\u0004ï¿½%$rï¿½^ï¿½&vï¿½\bNbG\u0005ï¿½HIï¿½\u0005Nphï¿½-zï¿½8ï¿½\u0015ï¿½t\u0003Dï¿½t\u0003Fï¿½C]Gg3\u001b\u0003ï¿½$@ï¿½t\u0003Dï¿½t\u0003Fï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@ï¿½t\u0003Dï¿½t\u0003Fï¿½{1HÅRE\u0003ï¿½$@ï¿½t\u0003Hï¿½t\u0003Jï¿½GLï¿½Iï¿½\u0015ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½vgï¿½[1\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½Rï¿½-ï¿½}ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½fDtï¿½\u00189ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½,L,ï¿½\u0000ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½55ï¿½Tbï¿½S}\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u001bï¿½Í¯ï¿½\u0014nï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u001e\"2Cï¿½@+C\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½)ï¿½Zï¿½MØ\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u0006\u0010Sï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½@\u0013Ò\u0010\tï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½/ï¿½\t_ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u0007$ï¿½Uï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½rï¿½Zï¿½SFï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½Þ¤9\bï¿½.\u0003ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½;ï¿½\u001fï¿½\u001c\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½\u0007ï¿½\u0007|ï¿½{\u0015y\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½vgï¿½[1inline bool std::operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½{1HÅREinline constexpr std::_Ios_Iostate std::operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b)\u0000FP\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u00056P6Rï¿½$@\u0001ï¿½\u0002Dï¿½\u0002Fï¿½$@\u0001ï¿½\u0012\u0003Dï¿½\u0012\u0003Fï¿½$@\u0001ï¿½t\u0003Dï¿½t\u0003Fï¿½$@\u0001ï¿½\u0003Dï¿½\u0003Fï¿½$@\u0001ï¿½std::locale std::ios_base::getloc() const\u0000\u00186\f\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0002ï¿½\u0003~ï¿½\u0003ï¿½$@\u0001ï¿½#\u0004|ï¿½#\u0004ï¿½$@\u0001ï¿½\u0006\u0010Sï¿½inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type std::operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) noexcept\u0000ï¿½\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½;ï¿½\u0002&ï¿½Gvoid std::basic_ios::setstate(std::ios_base::iostate __state)\u0000\n*\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0004V\u0010V ï¿½$@\u0001ï¿½\u0003\u0014ï¿½\u0003$ï¿½$@\u0001ï¿½\u0016\u0004\fï¿½\u0016\u0004\u001cï¿½$@\u0001ï¿½-\u0004\u000eï¿½-\u0004\u001eï¿½$@\u0001ï¿½Dï¿½\u0007ï¿½Tï¿½basic_istream<_CharT, _Traits> &std::ws(basic_istream<_CharT, _Traits> &__is)\u0000@J\u0004\u0001ï¿½\u001c\u0004\bï¿½\u001c\u0004\fï¿½\u0002\u0004\u0001ï¿½\u001b\u0004\bï¿½/\u0004\n\u0000 @brief  Quick and easy way to eat whitespace\n\n This manipulator extracts whitespace characters, stopping when the\n next character is non-whitespace, or when the input sequence is empty.\n If the sequence is empty, @c eofbit is set in the stream, but not\n @c failbit.\n\n The current locale is used to distinguish whitespace characters.\n\n Example:\n @code\n    MyClass   mc;\n\n    std::cin >> std::ws >> mc;\n @endcode\n will skip leading whitespace before calling operator>> on cin and your\n object.  Note that the same effect can be achieved by creating a\n std::basic_istream::sentry inside your definition of operator>>.\u0000\u0000\u0005ï¿½W×¶ï¿½]xï¿½/h\u0010ï¿½]ï¿½0ï¿½Gwï¿½Dï¿½/p\u0003RJcï¿½w\rï¿½e\u0012jn \u0005ï¿½#\u0004Bï¿½#\u0004Tï¿½zï¿½Pï¿½jï¿½\u0003ï¿½$@ï¿½#\u0004|ï¿½#\u0004ï¿½\u0003ï¿½$@ï¿½#\u0004Bï¿½#\u0004Tï¿½zï¿½Pï¿½jï¿½\u0003ï¿½$@ï¿½#\u0004|ï¿½#\u0004ï¿½\u0003ï¿½$@ï¿½-\u0004\u000eï¿½-\u0004\u001eï¿½;ï¿½\u0002&ï¿½G\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\u001bï¿½Í¯ï¿½\u0014nï¿½inline bool std::operator==(const move_iterator<_Iterator> &__x, const move_iterator<_Iterator> &__y)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½c\nS-\u000b\u0002ï¿½bool std::basic_ios::good() const\u0000\n*\b\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u00021\u001e1&ï¿½$@\u0001Q\u001eQ&ï¿½$@\u0001ï¿½gDUï¿½<b!void std::basic_ios::_M_setstate(std::ios_base::iostate __state)\u0000\n*\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0006K\u0014K*ï¿½$@\u0001O\u0014O*ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003.ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003.ï¿½$@\u0001ï¿½\r\u0004\u0018ï¿½\r\u0004.ï¿½$@\u0001ï¿½\u0011\u0004\u0018ï¿½\u0011\u0004.ï¿½$@\u0001ï¿½9ï¿½3ï¿½explicit std::basic_istream::sentry::sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws)\u0000\u0012J\f\u0001.\b.\u0014ï¿½\u0002\u0004\u0001,\u0004X\n\u0000 @brief  The constructor performs all the work.\n @param  __is  The input stream to guard.\n @param  __noskipws  Whether to consume whitespace or not.\n\n If the stream state is good (@a __is.good() is true), then the\n following actions are performed, otherwise the sentry state\n is false (<em>not okay</em>) and failbit is set in the\n stream state.\n\n The sentry's preparatory actions are:\n\n -# if the stream is tied to an output stream, @c is.tie()->flush()\n    is called to synchronize the output sequence\n -# if @a __noskipws is false, and @c ios_base::skipws is set in\n    @c is.flags(), the sentry extracts and discards whitespace\n    characters from the stream.  The currently imbued locale is\n    used to determine whether each character is whitespace.\n\n If the stream state is still good, then the sentry state becomes\n true (@a okay).\u0000\u0000\u0007ï¿½3\"Wi\u000eï¿½\u000ehT\u0000ï¿½\u001eï¿½hï¿½Ü¨ï¿½h3&z]*ï¿½2|ï¿½\u001bZtï¿½GUH\u001d]ï¿½\u0012ï¿½Z\u0005f|ï¿½\u001cï¿½\u001b\f1\u001e1&ï¿½c\nS-\u000b\u0002ï¿½\u0003ï¿½$@6P6Rï¿½C]Gg3\u001b\u0003ï¿½$@6P6Rï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@6P6Rï¿½{1HÅRE\u0003ï¿½$@<:<Tï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@<:<Tï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@F\u0014F\u0018ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@K\u0014K*ï¿½gDUï¿½<b!\u0003ï¿½$@O\u0014O*ï¿½gDUï¿½<b!\u0003ï¿½$@Q\u001eQ&ï¿½c\nS-\u000b\u0002ï¿½\u0003ï¿½$@U\u0012U\u0016ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@V\u0010V ï¿½;ï¿½\u0002&ï¿½G\u0003ï¿½$@\t\u0005\u0000\u0000\u0000\u0000ï¿½fDtï¿½\u00189ï¿½inline bool std::operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½yï¿½\u0012:ï¿½inline const std::_Ios_Iostate &std::operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)\u0000@J\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000$F\u0014F\u0018ï¿½$@\u0001U\u0012U\u0016ï¿½$@\u0001ï¿½\u0014ï¿½\u0018ï¿½$@\u0001ï¿½\u0014ï¿½\u0018ï¿½$@\u0001ï¿½\u0014ï¿½\u0018ï¿½$@\u0001ï¿½\u0014ï¿½\u0018ï¿½$@\u0001ï¿½\u0010ï¿½\u0014ï¿½$@\u0001ï¿½\u0010ï¿½\u0014ï¿½$@\u0001ï¿½\u000eï¿½\u0012ï¿½$@\u0001ï¿½\u0003\u0001\u0010ï¿½\u0003\u0001\u0014ï¿½$@\u0001ï¿½\u000e\u0001\u000eï¿½\u000e\u0001\u0012ï¿½$@\u0001ï¿½(\u0001\u0010ï¿½(\u0001\u0014ï¿½$@\u0001ï¿½3\u0001\u000eï¿½3\u0001\u0012ï¿½$@\u0001ï¿½S\u0001\u0010ï¿½S\u0001\u0014ï¿½$@\u0001ï¿½b\u0001\u000eï¿½b\u0001\u0012ï¿½$@\u0001ï¿½\u0001\u0010ï¿½\u0001\u0014ï¿½$@\u0001ï¿½\u0001\u000eï¿½\u0001\u0012ï¿½$@\u0001ï¿½\u0001,ï¿½\u00010ï¿½$@\u0001ï¿½\u00014ï¿½\u00018ï¿½$@\u0001ï¿½\u0001\u001cï¿½\u0001 ï¿½$@\u0001ï¿½\u0001\u0010ï¿½\u0001\u0014ï¿½$@\u0001ï¿½)\u0002\u0018ï¿½)\u0002\u001cï¿½$@\u0001ï¿½.\u0002\u0018ï¿½.\u0002\u001cï¿½$@\u0001ï¿½k\u0002\u0018ï¿½k\u0002\u001cï¿½$@\u0001ï¿½v\u0002\u0018ï¿½v\u0002\u001cï¿½$@\u0001ï¿½\u0002\u0010ï¿½\u0002\u0014ï¿½$@\u0001ï¿½\u0002\u0010ï¿½\u0002\u0014ï¿½$@\u0001ï¿½\u0002\u0010ï¿½\u0002\u0014ï¿½$@\u0001ï¿½\u0002\u0010ï¿½\u0002\u0014ï¿½$@\u0001ï¿½\u001d\u0003\u0010ï¿½\u001d\u0003\u0014ï¿½$@\u0001ï¿½>\u0003\u0018ï¿½>\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0010ï¿½\u0003\u0014ï¿½$@\u0001ï¿½\u0004\u0004\u0010ï¿½\u0004\u0004\u0014ï¿½$@\u0001ï¿½\u0014\u0004\u000eï¿½\u0014\u0004\u0012ï¿½$@\u0001ï¿½~e\u000bZ\u0013-:ï¿½inline constexpr const _Tp &std::min(const _Tp &__a, const _Tp &__b)\u00008B\u0006\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½\u0002Zï¿½\u0002`ï¿½$@\u0001ï¿½Co]ï¿½|ï¿½std::basic_istream::int_type std::basic_istream::get()\u0000:b\u0006\u0001ï¿½\bï¿½\u000eï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\u0012\u0001\n\u0000 @brief  Simple extraction.\n @return  A character, or eof().\n\n Tries to extract a character.  If none are available, sets failbit\n and returns traits::eof().\u0000\u0000\u0004ï¿½|G\nï¿½\u0003_yï¿½\\ ï¿½\u0012faï¿½B2ï¿½yï¿½'ï¿½mï¿½#ï¿½4ï¿½\u001c\u0002ï¿½\u0003\u0001\u0010ï¿½\u0003\u0001\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u000eï¿½\u000e\u0001\u0012ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Cï¿½\u0016\\ï¿½\u0014std::basic_istream::__istream_type &std::basic_istream::operator>>(int &__n)\u0000Hp\u0014\u0001ï¿½\bï¿½\u001cï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0000\u0000\u0000\u0005ï¿½_4ï¿½Ç¥Lï¿½$RJaï¿½x[\"ï¿½5ï¿½%+ï¿½\u0010\u001c^\nï¿½O\u0001ï¿½@^E<\u0017[ï¿½\u0004ï¿½Hï¿½bï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@ï¿½Hï¿½bï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@ï¿½\u0014ï¿½\u0018ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u0014ï¿½\u0018ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0018ï¿½æOï¿½std::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::char_type &__c)\u0000Hp\u0006\u0001ï¿½\u0017\u0001\bï¿½\u0017\u0001\u000eï¿½\u0002\u0004\u0001ï¿½\u0014\u0001\u0004ï¿½7\u0001\n\u0000 @brief  Simple extraction.\n @param  __c  The character in which to store data.\n @return  *this\n\n Tries to extract a character and store it in @a __c.  If none are\n available, sets failbit and returns traits::eof().\n\n @note  This function is not overloaded on signed char and\n        unsigned char.\u0000\u0000\u0004ï¿½\u0012Hï¿½Xï¿½\u0000ï¿½\u0005iï¿½rï¿½iï¿½z$\u000bS\u000eTMï¿½Hï¿½6/?ï¿½,\u0002ï¿½(\u0001\u0010ï¿½(\u0001\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½3\u0001\u000eï¿½3\u0001\u0012ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½dï¿½:ï¿½\u000fï¿½std::basic_istream::pos_type std::basic_istream::tellg()\u0000:b\n\u0001ï¿½S\u0003\bï¿½S\u0003\u0012ï¿½\u0002\u0004\u0001ï¿½P\u0003\u0004ï¿½j\u0003\n\u0000 @brief  Getting the current read position.\n @return  A file position object.\n\n If @c fail() is not false, returns @c pos_type(-1) to indicate\n failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,in).\n\n @note  This function does not count the number of characters\n        extracted, if any, and therefore does not affect the next\n        call to @c gcount().  At variance with putback, unget and\n        seekg, eofbit is not cleared first.\u0000\u0000\u0002ï¿½eMvÝ¸ï¿½\u0005ï¿½\u001aQ1ï¿½\u001dï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½!Ubï¿½#;std::basic_istream::__istream_type &std::basic_istream::ignore(std::streamsize __n, std::basic_istream::int_type __delim)\u0000Hp\f\u0001ï¿½A\u0002\bï¿½A\u0002\u0014ï¿½\u0002\u0004\u0001ï¿½>\u0002\u0004ï¿½\u0002\n\u0000 @brief  Discarding characters\n @param  __n  Number of characters to discard.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Extracts characters and throws them away until one of the\n following happens:\n - if @a __n @c != @c std::numeric_limits<int>::max(), @a __n\n   characters are extracted\n - the input sequence reaches end-of-file\n - the next character equals @a __delim (in this case, the character\n   is extracted); note that this condition will never occur if\n   @a __delim equals @c traits::eof().\n\n NB: Provide three overloads, instead of the single function\n (with defaults) mandated by the Standard: this leads to a\n better performing implementation, while still conforming to\n the Standard.\u0000\u0000\bï¿½\u0012ï¿½-e\nï¿½\nï¿½?wxï¿½$\u0015ï¿½h\u0014ï¿½\rï¿½qï¿½iï¿½^\u0011ï¿½|Yï¿½|ï¿½D\u0006Qï¿½Mï¿½\u001dï¿½rÑºï¿½Mï¿½\u0013ï¿½\u0002ï¿½k\u0002\u0018ï¿½k\u0002\u001cï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½v\u0002\u0018ï¿½v\u0002\u001cï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0014,ï¿½Xï¿½Qï¿½\u001astd::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::char_type *__s, std::streamsize __n, std::basic_istream::char_type __delim)\u0000Hp\u0006\u0001ï¿½<\u0001\bï¿½<\u0001\u000eï¿½\u0002\u0004\u0001ï¿½9\u0001\u0004ï¿½f\u0001\n\u0000 @brief  Simple multiple-character extraction.\n @param  __s  Pointer to an array.\n @param  __n  Maximum number of characters to store in @a __s.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Characters are extracted and stored into @a __s until one of the\n following happens:\n\n - @c __n-1 characters are stored\n - the input sequence reaches EOF\n - the next character equals @a __delim, in which case the character\n   is not extracted\n\nIf no characters are stored, failbit is set in the stream's error\nstate.\n\nIn any case, a null character is stored into the next location in\nthe array.\n\n @note  This function is not overloaded on signed char and\n        unsigned char.\u0000\u0000\tï¿½\u000bì¡ï¿½\u001fcJï¿½<fqï¿½Yï¿½Q3Kmï¿½^\u0003\u0005ï¿½tï¿½Uï¿½Tï¿½#ï¿½\u001da\u0007\\ï¿½Óï¿½02ï¿½Pï¿½/;|ï¿½\u000fï¿½}ï¿½>ï¿½oQï¿½\bï¿½#\u0001\u0002ï¿½S\u0001\u0010ï¿½S\u0001\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½b\u0001\u000eï¿½b\u0001\u0012ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\nï¿½Tt8ï¿½\"inline constexpr std::_Ios_Openmode std::operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b)\u0000HR\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u00056P6Rï¿½$@\u0001ï¿½\u0002Dï¿½\u0002Fï¿½$@\u0001ï¿½\u0012\u0003Dï¿½\u0012\u0003Fï¿½$@\u0001ï¿½t\u0003Dï¿½t\u0003Fï¿½$@\u0001ï¿½\u0003Dï¿½\u0003Fï¿½$@\u0001ï¿½Uï¿½kï¿½{std::basic_istream::__istream_type &std::basic_istream::getline(std::basic_istream::char_type *__s, std::streamsize __n, std::basic_istream::char_type __delim)\u0000Hp\u000e\u0001ï¿½\u0001\bï¿½\u0001\u0016ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\n\u0000 @brief  String extraction.\n @param  __s  A character array in which to store the data.\n @param  __n  Maximum number of characters to extract.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Extracts and stores characters into @a __s until one of the\n following happens.  Note that these criteria are required to be\n tested in the order listed here, to allow an input line to exactly\n fill the @a __s array without setting failbit.\n\n -# the input sequence reaches end-of-file, in which case eofbit\n    is set in the stream error state\n -# the next character equals @c __delim, in which case the character\n    is extracted (and therefore counted in @c gcount()) but not stored\n -# @c __n-1 characters are stored, in which case failbit is set\n    in the stream error state\n\n If no characters are extracted, failbit is set.  (An empty line of\n input should therefore not cause failbit to be set.)\n\n In any case, a null character is stored in the next location in\n the array.\u0000\u0000\tï¿½%<ï¿½\u0014\fQJï¿½Dï¿½xdï¿½\u0019Rï¿½\u0019ï¿½$ï¿½oï¿½0ï¿½\u000bï¿½Jkyï¿½<^ï¿½2ï¿½jï¿½$ï¿½pt\rï¿½gï¿½Eï¿½p_\u001cï¿½*ï¿½P\u0006ï¿½\u0002\u0014ï¿½\u001e\u0003ï¿½\u0001,ï¿½\u00010ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u00014ï¿½\u00018ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u0001\u001cï¿½\u0001 ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½C]Gg3\u001binline constexpr std::_Ios_Fmtflags std::operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)\u0000HR\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u00056P6Rï¿½$@\u0001ï¿½\u0002Dï¿½\u0002Fï¿½$@\u0001ï¿½\u0012\u0003Dï¿½\u0012\u0003Fï¿½$@\u0001ï¿½t\u0003Dï¿½t\u0003Fï¿½$@\u0001ï¿½\u0003Dï¿½\u0003Fï¿½$@\u0001ï¿½Ã±Gy[vstd::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::__streambuf_type &__sb, std::basic_istream::char_type __delim)\u0000Hp\u0006\u0001ï¿½k\u0001\bï¿½k\u0001\u000eï¿½\u0002\u0004\u0001ï¿½h\u0001\u0004ï¿½\u0001\n\u0000 @brief  Extraction into another streambuf.\n @param  __sb  A streambuf in which to store data.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Characters are extracted and inserted into @a __sb until one of the\n following happens:\n\n - the input sequence reaches EOF\n - insertion into the output buffer fails (in this case, the\n   character that would have been inserted is not extracted)\n - the next character equals @a __delim (in this case, the character\n   is not extracted)\n - an exception occurs (and in this case is caught)\n\nIf no characters are stored, failbit is set in the stream's error\nstate.\u0000\u0000\nï¿½Nï¿½ê­ï¿½-\u000bï¿½65ï¿½{ï¿½i*9Xï¿½ä©¯=ï¿½\u001c&\u001eï¿½bï¿½|ï¿½\u0017ï¿½\u000e>ï¿½rï¿½>ï¿½wï¿½\rï¿½WPï¿½\u0011ï¿½/ï¿½Vï¿½eT\u001bï¿½\tÑï¿½bï¿½\u0003ï¿½}\u0001Rï¿½}\u0001\\ï¿½t\u001aï¿½2ï¿½f\u0003ï¿½$@ï¿½\u0001\u0010ï¿½\u0001\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u0001\u000eï¿½\u0001\u0012ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0004ï¿½~ï¿½inline constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b)\u0000FP\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0002ï¿½\u0002:ï¿½\u0002<ï¿½$@\u0001ï¿½\u0003:ï¿½\u0003<ï¿½$@\u0001ï¿½7eoï¿½?ï¿½\u000bvoid std::__istream_extract(basic_istream<_CharT, _Traits> &, _CharT *, std::streamsize)\u0000\n\u0014\"\u0001ï¿½\u0003\bï¿½\u0003*ï¿½\u0002\u0004\u0001ï¿½\u0003\bï¿½\u0017\u0004\n\u0000@}\u0000\u0000\u000bï¿½<ï¿½\u001a\u001eï¿½>0ï¿½%$ï¿½<ï¿½\u0018ï¿½7RFï¿½qï¿½Q\u0019ï¿½\u0005\u0015ï¿½2ï¿½\u0000kï¿½\u0012\u001bï¿½\u0018ï¿½\u0002ï¿½bHï¿½M:ï¿½\u0011zï¿½A\u0015{ï¿½.ï¿½\u0006ï¿½}ï¿½ÖXï¿½yK?Þï¿½,ï¿½\tï¿½\u0003Dï¿½\u0003Vï¿½zï¿½Pï¿½jï¿½\u0003ï¿½$@ï¿½\u0003~ï¿½\u0003ï¿½\u0003ï¿½$@ï¿½\u0003Dï¿½\u0003Vï¿½zï¿½Pï¿½jï¿½\u0003ï¿½$@ï¿½\u0003~ï¿½\u0003ï¿½\u0003ï¿½$@ï¿½\u0004\u0004\u0010ï¿½\u0004\u0004\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\r\u0004\u0018ï¿½\r\u0004.ï¿½gDUï¿½<b!\u0003ï¿½$@ï¿½\u0011\u0004\u0018ï¿½\u0011\u0004.ï¿½gDUï¿½<b!\u0003ï¿½$@ï¿½\u0014\u0004\u000eï¿½\u0014\u0004\u0012ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u0016\u0004\fï¿½\u0016\u0004\u001cï¿½;ï¿½\u0002&ï¿½G\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½Æ·ï¿½\u0015ï¿½\u0010inline const _Facet &std::__check_facet(const _Facet *__f)\u0000*4\u001a\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0004<:<Tï¿½$@\u0001f>fXï¿½$@\u0001ï¿½Hï¿½bï¿½$@\u0001ï¿½Hï¿½bï¿½$@\u0001ï¿½\u0012Y\u0011m7ï¿½\u001bï¿½std::basic_istream::__istream_type &std::basic_istream::ignore(std::streamsize __n)\u0000Hp\f\u0001ï¿½\u0001\bï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½<\u0002\n\u0000\u0000\u0000\u0007ï¿½Yï¿½RXï¿½Dï¿½ßO'\f\tXoï¿½.ï¿½\tï¿½\u0015gï¿½=#Dï¿½aï¿½\u0017ï¿½\bpï¿½Jï¿½{PT<ï¿½x~ï¿½!\u0002ï¿½)\u0002\u0018ï¿½)\u0002\u001cï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½.\u0002\u0018ï¿½.\u0002\u001cï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½t\u001aï¿½2ï¿½fstd::basic_streambuf::int_type std::basic_streambuf::sputc(std::basic_streambuf::char_type __c)\u0000>j\n\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001ï¿½}\u0001Rï¿½}\u0001\\ï¿½$@\u0001ï¿½Jï¿½\u0019)ï¿½std::basic_istream::__istream_type &std::basic_istream::ignore()\u0000Hp\f\u0001ï¿½\u0001\bï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\n\u0000\u0000\u0000\u0004ï¿½\u0007Dp\u0013ï¿½Zï¿½\u001d8ï¿½;ï¿½2[ï¿½Èï¿½Kï¿½ggE\u0001ï¿½\u0001\u0010ï¿½\u0001\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0014ï¿½Llï¿½basic_istream<_CharT, _Traits> &std::operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c)\u0000@J\u0014\u0001ï¿½\u0003\bï¿½\u0003\u001cï¿½\u0002\u0004\u0001ï¿½\u0003\bï¿½\u0003\n\u0000@{\n\n@brief  Character extractors\n@param  __in  An input stream.\n@param  __c  A character reference.\n@return  in\n\nBehaves like one of the formatted arithmetic extractors described in\nstd::basic_istream.  After constructing a sentry object with good\nstatus, this function extracts a character (if one is available) and\nstores it in @a __c.  Otherwise, sets failbit in the input stream.\u0000\u0000\u0005ï¿½\u0016&ï¿½\u001dï¿½sï¿½g\u001fÔ,ï¿½+ï¿½\u0011ï¿½Ð§ï¿½?Dï¿½\\0%ï¿½Xfï¿½\u0015ï¿½\n\"\u0005ï¿½\u0003\u0010ï¿½\u0003\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u0003:ï¿½\u0003<ï¿½\u0004ï¿½~ï¿½\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003.ï¿½gDUï¿½<b!\u0003ï¿½$@ï¿½\u0003\u0018ï¿½\u0003.ï¿½gDUï¿½<b!\u0003ï¿½$@ï¿½\u0003\u0014ï¿½\u0003$ï¿½;ï¿½\u0002&ï¿½G\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½/ï¿½\t_ï¿½inline bool std::operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½=\u00030ï¿½=\u00034ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003\u001cï¿½$@\u0001ï¿½yï¿½9G@std::basic_istream::__istream_type &std::basic_istream::read(std::basic_istream::char_type *__s, std::streamsize __n)\u0000Hp\b\u0001ï¿½\u0002\bï¿½\u0002\u0010ï¿½\u0002\u0004\u0001ï¿½\u0002\u0004ï¿½\u0002\n\u0000 @brief  Extraction without delimiters.\n @param  __s  A character array.\n @param  __n  Maximum number of characters to store.\n @return  *this\n\n If the stream state is @c good(), extracts characters and stores\n them into @a __s until one of the following happens:\n - @a __n characters are stored\n - the input sequence reaches end-of-file, in which case the error\n   state is set to @c failbit|eofbit.\n\n @note  This function is not overloaded on signed char and\n        unsigned char.\u0000\u0000\u0004ï¿½Kï¿½1\u000fIï¿½\u0015ï¿½)ï¿½\u00101ï¿½yKuï¿½\u001cï¿½\bWï¿½s\u0014ï¿½\u0002ï¿½\u0002\u0010ï¿½\u0002\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u0002:ï¿½\u0002<ï¿½\u0004ï¿½~ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½SØ¡ï¿½Pstd::basic_istream::int_type std::basic_istream::peek()\u0000:b\b\u0001ï¿½\u0002\bï¿½\u0002\u0010ï¿½\u0002\u0004\u0001ï¿½\u0002\u0004ï¿½\u0002\n\u0000 @brief  Looking ahead in the stream\n @return  The next character, or eof().\n\n If, after constructing the sentry object, @c good() is false,\n returns @c traits::eof().  Otherwise reads but does not extract\n the next input character.\u0000\u0000\u0003ï¿½Ýï¿½>qï¿½+ï¿½\u001cï¿½\u0010\u0003ï¿½|ï¿½Mï¿½Cyï¿½Cï¿½$\u0001ï¿½\u0002\u0010ï¿½\u0002\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½=ï¿½(std::streamsize std::basic_istream::readsome(std::basic_istream::char_type *__s, std::streamsize __n)\u0000 H\u0010\u0001ï¿½\u0002\bï¿½\u0002\u0018ï¿½\u0002\u0004\u0001ï¿½\u0002\u0004ï¿½\u0002\n\u0000 @brief  Extraction until the buffer is exhausted, but no more.\n @param  __s  A character array.\n @param  __n  Maximum number of characters to store.\n @return  The number of characters extracted.\n\n Extracts characters and stores them into @a __s depending on the\n number of characters remaining in the streambuf's buffer,\n @c rdbuf()->in_avail(), called @c A here:\n - if @c A @c == @c -1, sets eofbit and extracts no characters\n - if @c A @c == @c 0, extracts no characters\n - if @c A @c > @c 0, extracts @c min(A,n)\n\n The goal is to empty the current buffer, and to not request any\n more from the external input sequence controlled by the streambuf.\u0000\u0000\u0005ï¿½Ëï¿½xï¿½\f\u0015ï¿½Jw\u000eï¿½\u0016ihï¿½\u0000(ï¿½\u0006ï¿½;Esï¿½_ï¿½\u0019\"ï¿½4ï¿½)ï¿½\u0002ï¿½\u0002Zï¿½\u0002`ï¿½~e\u000bZ\u0013-:ï¿½\u0003ï¿½$@ï¿½\u0002\u0010ï¿½\u0002\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½'ï¿½+ï¿½m[S\u000bstd::basic_istream::__istream_type &std::basic_istream::putback(std::basic_istream::char_type __c)\u0000Hp\u000e\u0001ï¿½\u0002\bï¿½\u0002\u0016ï¿½\u0002\u0004\u0001ï¿½\u0002\u0004ï¿½\u0007\u0003\n\u0000 @brief  Unextracting a single character.\n @param  __c  The character to push back into the input stream.\n @return  *this\n\n If @c rdbuf() is not null, calls @c rdbuf()->sputbackc(c).\n\n If @c rdbuf() is null or if @c sputbackc() fails, sets badbit in\n the error state.\n\n @note  This function first clears eofbit.  Since no characters\n        are extracted, the next call to @c gcount() will return 0,\n        as required by DR 60.\u0000\u0000\u0005ï¿½WNcF8Þªï¿½8*ï¿½X1ï¿½Jï¿½dï¿½(\u001cOïºªï¿½_ï¿½czÙ¥r\u0013#c\u0005ï¿½\u0002Dï¿½\u0002Fï¿½C]Gg3\u001b\u0003ï¿½$@ï¿½\u0002Dï¿½\u0002Fï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@ï¿½\u0002Dï¿½\u0002Fï¿½{1HÅRE\u0003ï¿½$@ï¿½\u0002Hï¿½\u0002Jï¿½GLï¿½Iï¿½\u0015ï¿½\u0003ï¿½$@ï¿½\u0002\u0010ï¿½\u0002\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000dï¿½qï¿½Mï¿½bï¿½template<> class std::basic_iostream<char> : public basic_istream<char, std::char_traits<char>>, public basic_ostream<char, std::char_traits<char>> {}\u0000\",\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0002ï¿½H\u00040ï¿½H\u0004L\u0004\u0001ï¿½^\u00040ï¿½^\u0004L\u0004\u0001ï¿½\fï¿½Bï¿½\u001d ï¿½\ntypedef basic_istream<_CharT, _Traits> __istream_type\u0000NN\u001c\u0000\u0000\u0001ï¿½\u001e\u0004\\ï¿½\u001e\u0004x\u0002\u0001ï¿½\u001e\u0004\fï¿½\u001e\u0004x\u0000\u0000\u0000\u0000ï¿½1lï¿½Jï¿½\f\u0000\u0000\u0000\u0001ï¿½ \u0004.ï¿½ \u0004J\u0004\u0001ï¿½#/ï¿½\u0000typedef ctype<_CharT> __ctype_type\u0000,,\u0018\u0000\u0000\u0001ï¿½\u0003>ï¿½\u0003V\u0002\u0001ï¿½\u0003\fï¿½\u0003V\u0000\u0000\u0000\u0000ï¿½\u001dï¿½(]^ï¿½_3ï¿½\f\u0000\u0000\u0001ï¿½bHï¿½M:ï¿½\u0011z\u0002ï¿½\u0003\u001aï¿½\u00032\u0004\u0001ï¿½\u0003Xï¿½\u0003p\u0004\u0001ï¿½wv1ï¿½B\u0010ï¿½typedef basic_istream<_CharT, _Traits> __istream_type\u0000NN\u001c\u0000\u0000\u0001ï¿½\u0003\\ï¿½\u0003x\u0002\u0001ï¿½\u0003\fï¿½\u0003x\u0000\u0000\u0000\u0000ï¿½1lï¿½Jï¿½\f\u0000\u0000\u0000\u0001ï¿½\u0003\u001eï¿½\u0003:\u0004\u0001ï¿½\u001dï¿½(]^ï¿½_3template <typename _CharT> class std::ctype : public __ctype_abstract_base<_CharT> {}\u0000BL\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0002ï¿½\u0003\u001cï¿½\u0003&\u0004\u0001ï¿½!\u0004\u001cï¿½!\u0004&\u0004\u0001ï¿½6@ï¿½mï¿½3ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\tï¿½\u0003Xï¿½\u0003f\u0004\u0001ï¿½\u0003Hï¿½\u0003V\u0004\u0001ï¿½\u0003Lï¿½\u0003Z\u0004\u0001ï¿½\u0003.ï¿½\u0003<\u0004\u0001ï¿½\u0003<ï¿½\u0003J\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003$\u0004\u0001ï¿½\u0003\nï¿½\u0003\u0018\u0004\u0001ï¿½\u0003\u001aï¿½\u0003(\u0004\u0001ï¿½\u0003\u0004\u000eï¿½\u0003\u0004\u001c\u0004\u0001ï¿½d\u0004ï¿½e\u001dXwï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0001ï¿½>0ï¿½%$\u0006ï¿½\u0003Hï¿½\u0003T\u0004\u0001ï¿½\u0003xï¿½\u0003ï¿½\u0004\u0001ï¿½\u00038ï¿½\u0003D\u0004\u0001ï¿½\u0003<ï¿½\u0003H\u0004\u0001ï¿½\u0003\u001cï¿½\u0003(\u0004\u0001ï¿½\u0003(ï¿½\u00034\u0004\u0001ï¿½`9ï¿½oï¿½typedef basic_istream<_CharT, _Traits> __istream_type\u0000NN\u001c\u0000\u0000\u0001ï¿½\u0003\\ï¿½\u0003x\u0002\u0001ï¿½\u0003\fï¿½\u0003x\u0000\u0000\u0000\u0000ï¿½1lï¿½Jï¿½\f\u0000\u0000\u0000\u0002ï¿½\u0003.ï¿½\u0003J\u0004\u0001ï¿½\u0003\u001eï¿½\u0003:\u0004\u0001ï¿½Vï¿½@0ï¿½\u0017>\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½8ï¿½U\u0013typedef std::_Ios_Seekdir std::ios_base::seekdir\u00004R\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Vï¿½@0ï¿½\u0017>ï¿½\u0000\u0000\u0000\u0001ï¿½*ï¿½#ï¿½Æï¿½\u0001ï¿½\u0003Hï¿½\u0003V\u0004\u0001ï¿½\b\u001ddï¿½g\u0016\bQ_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u00034ï¿½\u0003B\u0004\u0001ï¿½\u00034ï¿½\u0003B\u0004\u0001ï¿½R$9N:r_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0003$ï¿½\u00030\u0004\u0001ï¿½\u0003$ï¿½\u00030\u0004\u0001ï¿½n\u0014\u0011u*\u0015ï¿½typedef typename _Traits::off_type off_type\u0000\"4\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0001ï¿½4\u0012\u0010+ï¿½8\u0013ï¿½\u0003ï¿½\u00030ï¿½\u0003@\u0004\u0001ï¿½\u0003\u0014ï¿½\u0003$\u0004\u0001ï¿½\u00030ï¿½\u0003@\u0004\u0001ï¿½.e\u0012.\u0004ï¿½:_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½m\u00034ï¿½m\u0003B\u0004\u0001ï¿½n\u00034ï¿½n\u0003B\u0004\u0001ï¿½^gL%ï¿½\bK!_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½m\u0003$ï¿½m\u00030\u0004\u0001ï¿½n\u0003$ï¿½n\u00030\u0004\u0001ï¿½Z\u0003&ï¿½a_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0005ï¿½\u001b\u0004$ï¿½\u001b\u00040\u0004\u0001ï¿½\u001c\u0004*ï¿½\u001c\u00046\u0004\u0001ï¿½\u001e\u00048ï¿½\u001e\u0004D\u0004\u0001ï¿½\u001f\u0004<ï¿½\u001f\u0004H\u0004\u0001ï¿½!\u0004(ï¿½!\u00044\u0004\u0001ï¿½\u0013bH*ï¿½,ï¿½typedef typename _Traits::pos_type pos_type\u0000\"4\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0004ï¿½eMvÝ¸ï¿½\u0005ï¿½%$rï¿½^ï¿½-zï¿½8ï¿½\u0012ï¿½L\t\bï¿½Q\u0003Zï¿½Q\u0003j\u0004\u0001ï¿½W\u0003\fï¿½W\u0003\u001c\u0004\u0001ï¿½W\u0003.ï¿½W\u0003>\u0004\u0001ï¿½o\u0003\u0014ï¿½o\u0003$\u0004\u0001ï¿½~\u0003\u0014ï¿½~\u0003$\u0004\u0001ï¿½\u0003\u001eï¿½\u0003.\u0004\u0001ï¿½\u0003\u0014ï¿½\u0003$\u0004\u0001ï¿½\u0003\u001eï¿½\u0003.\u0004\u0001ï¿½Â'Z\u0003ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½.\u00034ï¿½.\u0003B\u0004\u0001ï¿½iGÞ¤\u0012|H\u0000_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\n\u00034ï¿½\n\u0003B\u0004\u0001ï¿½\u000b\u00034ï¿½\u000b\u0003B\u0004\u0001ï¿½6È¹^ï¿½\u001dW_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u00024ï¿½\u0002B\u0004\u0001ï¿½\u00024ï¿½\u0002B\u0004\u0001ï¿½r\u0004ï¿½b\u0019ï¿½\u0002{_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½\u0002$ï¿½\u00020\u0004\u0001ï¿½ \u001dï¿½4ï¿½=ï¿½n_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0002$ï¿½\u00020\u0004\u0001ï¿½\u0002$ï¿½\u00020\u0004\u0001ï¿½7ï¿½zï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0002Fï¿½\u0002T\u0004\u0001ï¿½\u00024ï¿½\u0002B\u0004\u0001ï¿½\u0018ï¿½\u000bï¿½\u001dEnamespace __gnu_cxx {}\u0000\u0014\u0014\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0012ï¿½\"ï¿½4\u0004\u0001ï¿½\u0014ï¿½&\u0004\u0001ï¿½,ï¿½>\u0004\u0001ï¿½\u0014ï¿½&\u0004\u0001ï¿½\"ï¿½4\u0004\u0001ï¿½\u0014ï¿½&\u0004\u0001ï¿½,ï¿½>\u0004\u0001ï¿½\u0014ï¿½&\u0004\u0001ï¿½\u0001.ï¿½\u0001@\u0004\u0001ï¿½\u0001\u001cï¿½\u0001.\u0004\u0001ï¿½\u0018\u0002\u001eï¿½\u0018\u00020\u0004\u0001ï¿½\u001c\u0002\u0006ï¿½\u001c\u0002\u0018\u0004\u0001ï¿½#\u0002$ï¿½#\u00026\u0004\u0001ï¿½&\u0002$ï¿½&\u00026\u0004\u0001ï¿½Y\u0002\u001eï¿½Y\u00020\u0004\u0001ï¿½^\u0002\u0006ï¿½^\u0002\u0018\u0004\u0001ï¿½e\u0002$ï¿½e\u00026\u0004\u0001ï¿½h\u0002$ï¿½h\u00026\u0004\u0001ï¿½\u0007Õï¿½fxï¿½typedef basic_streambuf<_CharT, _Traits> __streambuf_type\u0000RR \u0000\u0000\u0001ï¿½\u001f\u0004pï¿½\u001f\u0004ï¿½\u0002\u0001ï¿½\u001f\u0004\fï¿½\u001f\u0004ï¿½\u0000\u0000\u0000\u0000ï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\f\u0000\u0000\u0001ï¿½Dï¿½/p\u0003RJc\u0001ï¿½%\u0004\fï¿½%\u0004,\u0004\u0001ï¿½7ï¿½*ÒE\u000fï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u00014ï¿½\u0001B\u0004\u0001ï¿½\u00014ï¿½\u0001B\u0004\u0001ï¿½\\$`aFï¿½\u00125\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½RO9ï¿½WÝ¶typedef typename _Traits::int_type std::basic_istream::sentry::__int_type\u0000F~\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0002ï¿½h3&z]*ï¿½GUH\u001d]ï¿½\u0012\u00028\u00108$\u0004\u0001:\u0004:\u0018\u0004\u0001ï¿½\u001bï¿½UÑ³~\u0005ï¿½typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits>> std::basic_istream::__num_get_type\u0000|ï¿½\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\\$`aFï¿½\u00125ï¿½\u0000\u0000\u0000\u0003ï¿½ ï¿½qB^/]\rï¿½6~\u0002ï¿½\u0010ï¿½@^E<\u0017[ï¿½\u0003f\u0010f,\u0004\u0001ï¿½\u001aï¿½6\u0004\u0001ï¿½\u001aï¿½6\u0004\u0001ï¿½\u001cQxï¿½\u000e%-_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002\\8\\F\u0004\u0001]8]F\u0004\u0001ï¿½L\u00019ï¿½class __cxxabiv1::__forced_unwind {}\u0000\f$\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u00000I*IH\u0004\u0001I*IH@\u0000i2iP\u0004\u0001i2iP@\u0000ï¿½.ï¿½L\u0004\u0001ï¿½.ï¿½L@\u0000ï¿½.ï¿½L\u0004\u0001ï¿½.ï¿½L@\u0000ï¿½.ï¿½L\u0004\u0001ï¿½.ï¿½L@\u0000ï¿½\u0005\u0001.ï¿½\u0005\u0001L\u0004\u0001ï¿½\u0005\u0001.ï¿½\u0005\u0001L@\u0000ï¿½*\u0001.ï¿½*\u0001L\u0004\u0001ï¿½*\u0001.ï¿½*\u0001L@\u0000ï¿½U\u0001.ï¿½U\u0001L\u0004\u0001ï¿½U\u0001.ï¿½U\u0001L@\u0000ï¿½\u0001.ï¿½\u0001L\u0004\u0001ï¿½\u0001.ï¿½\u0001L@\u0000ï¿½\u0001.ï¿½\u0001L\u0004\u0001ï¿½\u0001.ï¿½\u0001L@\u0000ï¿½\u0001.ï¿½\u0001L\u0004\u0001ï¿½\u0001.ï¿½\u0001L@\u0000ï¿½1\u0002.ï¿½1\u0002L\u0004\u0001ï¿½1\u0002.ï¿½1\u0002L@\u0000ï¿½~\u0002.ï¿½~\u0002L\u0004\u0001ï¿½~\u0002.ï¿½~\u0002L@\u0000ï¿½\u0002.ï¿½\u0002L\u0004\u0001ï¿½\u0002.ï¿½\u0002L@\u0000ï¿½\u0002.ï¿½\u0002L\u0004\u0001ï¿½\u0002.ï¿½\u0002L@\u0000ï¿½\u0002.ï¿½\u0002L\u0004\u0001ï¿½\u0002.ï¿½\u0002L@\u0000ï¿½\u0002.ï¿½\u0002L\u0004\u0001ï¿½\u0002.ï¿½\u0002L@\u0000ï¿½\u001f\u0003.ï¿½\u001f\u0003L\u0004\u0001ï¿½\u001f\u0003.ï¿½\u001f\u0003L@\u0000ï¿½C\u0003.ï¿½C\u0003L\u0004\u0001ï¿½C\u0003.ï¿½C\u0003L@\u0000ï¿½a\u0003.ï¿½a\u0003L\u0004\u0001ï¿½a\u0003.ï¿½a\u0003L@\u0000ï¿½\u0003.ï¿½\u0003L\u0004\u0001ï¿½\u0003.ï¿½\u0003L@\u0000ï¿½\u0003.ï¿½\u0003L\u0004\u0001ï¿½\u0003.ï¿½\u0003L@\u0000ï¿½\u0003.ï¿½\u0003L\u0004\u0001ï¿½\u0003.ï¿½\u0003L@\u0000ï¿½\u000b\u0004.ï¿½\u000b\u0004L\u0004\u0001ï¿½\u000b\u0004.ï¿½\u000b\u0004L@\u0000ï¿½!=Å\u000eï¿½\u0007ï¿½typedef typename __istream_type::int_type __int_type\u0000TT\u0014\u0000\u0000\u0001ï¿½ \u0004bï¿½ \u0004v\u0002\u0001ï¿½ \u0004\fï¿½ \u0004v\u0000\u0000\u0000\u0000\u0000ï¿½\f\u0000\u0000\u0002ï¿½0ï¿½Gwï¿½w\rï¿½e\u0012jn \u0002ï¿½$\u0004\u0018ï¿½$\u0004,\u0004\u0001ï¿½&\u0004\fï¿½&\u0004 \u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½vï¿½î¡ï¿½\u0000ï¿½fï¿½\u00154Mï¿½typedef typename _Traits::int_type int_type\u0000\"4\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0015ï¿½|G\nï¿½\u0003_yï¿½\\ ï¿½\u0012faï¿½Hï¿½6/?ï¿½,ï¿½Óï¿½02ï¿½Pï¿½/;|ï¿½\u000fï¿½\bï¿½#\u0001ï¿½\u001c&\u001eï¿½bï¿½|ï¿½\u0017ï¿½\u000e>ï¿½rï¿½WPï¿½\u0011ï¿½/ï¿½2ï¿½jï¿½$ï¿½pt\rï¿½gï¿½P\u0006ï¿½\u0002\u0014ï¿½\u001eï¿½2[ï¿½Èï¿½=#Dï¿½aï¿½{PT<ï¿½?wxï¿½^\u0011ï¿½|Yï¿½|ï¿½\u001dï¿½rÑºï¿½Ýï¿½>qï¿½(\u001cOïºªï¿½_ï¿½s$ï¿½9\u001e=ï¿½\u0019ï¿½Zï¿½j\u0004\u0001ï¿½\u0018ï¿½(\u0004\u0001ï¿½\fï¿½\u001c\u0004\u0001ï¿½ \u0001\u001aï¿½ \u0001*\u0004\u0001ï¿½E\u0001\u001aï¿½E\u0001*\u0004\u0001ï¿½F\u0001\u001aï¿½F\u0001*\u0004\u0001ï¿½H\u0001\u000eï¿½H\u0001\u001e\u0004\u0001ï¿½t\u0001\u001aï¿½t\u0001*\u0004\u0001ï¿½u\u0001\u001aï¿½u\u0001*\u0004\u0001ï¿½w\u0001\u000eï¿½w\u0001\u001e\u0004\u0001ï¿½\u0001(ï¿½\u00018\u0004\u0001ï¿½\u0001(ï¿½\u00018\u0004\u0001ï¿½\u0001\u001cï¿½\u0001,\u0004\u0001ï¿½\u0001\u001aï¿½\u0001*\u0004\u0001ï¿½\u0004\u0002(ï¿½\u0004\u00028\u0004\u0001ï¿½\u0006\u0002\u001cï¿½\u0006\u0002,\u0004\u0001ï¿½A\u00026ï¿½A\u0002F\u0004\u0001ï¿½J\u0002(ï¿½J\u00028\u0004\u0001ï¿½L\u0002\u001cï¿½L\u0002,\u0004\u0001ï¿½\u0002Zï¿½\u0002j\u0004\u0001ï¿½\u0002\fï¿½\u0002\u001c\u0004\u0001ï¿½\u0002\u001aï¿½\u0002*\u0004\u0001ï¿½\u0019\u0003\u001aï¿½\u0019\u0003*\u0004\u0001ï¿½\u0003Nï¿½\u0003^\u0004\u0001ï¿½ \u0004Nï¿½ \u0004^\u0004\u0001ï¿½#ï¿½Sï¿½\u0002\u0013\u0011template <typename _CharT, typename _Traits = char_traits<_CharT>> class std::basic_streambuf {}\u0000ï¿½\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0002ï¿½\u0003\u001cï¿½\u0003:\u0004\u0001ï¿½\u001f\u0004\u001cï¿½\u001f\u0004:\u0004\u0001ï¿½Pï¿½U\u0014ï¿½,ï¿½e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½bï¿½`Bï¿½ç¦_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0002$ï¿½\u00020\u0004\u0001ï¿½\u0002$ï¿½\u00020\u0004\u0001ï¿½fqï¿½\\ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½\u00024ï¿½\u0002B\u0004\u0001ï¿½7ï¿½Kï¿½n\r\rï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½?\u00024ï¿½?\u0002B\u0004\u0001ï¿½@\u00024ï¿½@\u0002B\u0004\u0001ï¿½,kCï¿½Ï¯ï¿½etypedef typename __istream_type::__ctype_type __ctype_type\u0000\"B\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Pï¿½U\u0014ï¿½,ï¿½eï¿½\u0000\u0000\u0000\u0001ï¿½Z\u0005f|ï¿½\u001cï¿½\u001b\u0001<\u0010<(\u0004\u0001ï¿½J~ï¿½+~D.\u000f_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½:\u00014ï¿½:\u0001B\u0004\u0001ï¿½;\u00014ï¿½;\u0001B\u0004\u0001ï¿½Z\bï¿½\u0005ï¿½7ï¿½Jnamespace std {}\u0000\u0014\u0014\u0006\u0000Outline of libstdc++ namespaces.\n\nnamespace std\n{\nnamespace __debug { }\nnamespace __parallel { }\nnamespace __cxx1998 { }\n\nnamespace __detail {\nnamespace __variant { }\t\t\t\t// C++17\n}\n\nnamespace rel_ops { }\n\nnamespace tr1\n{\nnamespace placeholders { }\nnamespace regex_constants { }\nnamespace __detail { }\n}\n\nnamespace tr2 { }\n\nnamespace decimal { }\n\nnamespace chrono { }\t\t\t\t// C++11\nnamespace placeholders { }\t\t\t\t// C++11\nnamespace regex_constants { }\t\t\t// C++11\nnamespace this_thread { }\t\t\t\t// C++11\ninline namespace literals {\t\t\t\t// C++14\ninline namespace chrono_literals { }\t\t// C++14\ninline namespace complex_literals { }\t\t// C++14\ninline namespace string_literals { }\t\t// C++14\ninline namespace string_view_literals { }\t\t// C++17\n}\n}\n\nnamespace abi { }\n\nnamespace __gnu_cxx\n{\nnamespace __detail { }\n}\n\nFor full details see:\nhttp://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html\u0000\u0000\u0000\u0003ï¿½\u0014ï¿½Llï¿½7eoï¿½?ï¿½\u000bï¿½Dï¿½\u0007ï¿½Tï¿½\u0000\u0000\u0000\u0003\u0000\u0001(\u0014(\u001a\u0001\u0001(\u0000ï¿½c\u0004\u0002\u0000\u0000\u0001ï¿½\u0002Pï¿½\u0002V\u0004\u0001ï¿½aï¿½O:C@Kï¿½typedef ctype<_CharT> __ctype_type\u0000,,\u0018\u0000\u0000\u0001ï¿½!\u0004>ï¿½!\u0004V\u0002\u0001ï¿½!\u0004\fï¿½!\u0004V\u0000\u0000\u0000\u0000ï¿½\u001dï¿½(]^ï¿½_3ï¿½\f\u0000\u0000\u0001ï¿½/h\u0010ï¿½]ï¿½\u0002ï¿½#\u0004\u0018ï¿½#\u00040\u0004\u0001ï¿½#\u0004Vï¿½#\u0004n\u0004\u0001ï¿½q\">ï¿½98ï¿½typedef typename _Traits::int_type int_type\u0000\"4\u0010\u0000\u0000\u0001ï¿½\u0003Tï¿½\u0003d\u0002\u0001ï¿½\u0003\fï¿½\u0003d\u0000\u0000\u0000\u0000\u0000ï¿½\f\u0000\u0000\u0002ï¿½A\u0015{ï¿½.ï¿½yK?Þï¿½,ï¿½\u0002ï¿½\u0003\u001aï¿½\u0003*\u0004\u0001ï¿½\u0003\u000eï¿½\u0003\u001e\u0004\u0001ï¿½1\u0011ï¿½%ï¿½/ï¿½_ValueT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0001ï¿½2ï¿½Dï¿½l\\$\u0001^\"^0\u0004\u0001ï¿½5ï¿½_class std::basic_istream::sentry {}\u0000\f4\f\u0000\u0000\u0000\u0000\u0001ï¿½9ï¿½3ï¿½\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0015ï¿½Yï¿½U{\u0005ï¿½[ï¿½Æ¶ï¿½f\u0012\u0003ï¿½$RJaï¿½x[\"ï¿½\u0007ï¿½Tï¿½Om\u0007ï¿½mï¿½#ï¿½4ï¿½\u001cï¿½z$\u000bS\u000eTMï¿½Tï¿½#ï¿½\u001da\u0007\\ï¿½ä©¯=ï¿½Jkyï¿½<^ï¿½\u0007Dp\u0013ï¿½Zï¿½ßO'\f\tXoï¿½$\u0015ï¿½h\u0014ï¿½+ï¿½\u001cï¿½\u0010\u0003ï¿½|ï¿½\u00101ï¿½yKuï¿½\u001cï¿½\u0000(ï¿½\u0006ï¿½8*ï¿½X1ï¿½Rï¿½Èï¿½w$ï¿½8ï¿½\u0016e?ï¿½\u001aQ1ï¿½\u001dï¿½&vï¿½\bNbG\u0005ï¿½?ï¿½Pï¿½Y\u0019-H-T\u0004\u0001.\b.\u0014\u0004\u0001`\u0002`\u000e\u0004\u0001}\f}\u0018\u0004\u0001ï¿½\fï¿½\u0018\u0004\u0001ï¿½\fï¿½\u0018\u0004\u0001ï¿½\fï¿½\u0018\u0004\u0001ï¿½\u001b\u0001\fï¿½\u001b\u0001\u0018\u0004\u0001ï¿½@\u0001\fï¿½@\u0001\u0018\u0004\u0001ï¿½o\u0001\fï¿½o\u0001\u0018\u0004\u0001ï¿½\u0001\fï¿½\u0001\u0018\u0004\u0001ï¿½\u0001\fï¿½\u0001\u0018\u0004\u0001ï¿½\u0001\fï¿½\u0001\u0018\u0004\u0001ï¿½D\u0002\fï¿½D\u0002\u0018\u0004\u0001ï¿½\u0002\fï¿½\u0002\u0018\u0004\u0001ï¿½\u0002\fï¿½\u0002\u0018\u0004\u0001ï¿½\u0002\fï¿½\u0002\u0018\u0004\u0001ï¿½\u0002\fï¿½\u0002\u0018\u0004\u0001ï¿½\u0013\u0003\fï¿½\u0013\u0003\u0018\u0004\u0001ï¿½4\u0003\fï¿½4\u0003\u0018\u0004\u0001ï¿½X\u0003\fï¿½X\u0003\u0018\u0004\u0001ï¿½u\u0003\fï¿½u\u0003\u0018\u0004\u0001ï¿½\u0003\fï¿½\u0003\u0018\u0004\u0001ï¿½\u0003>ï¿½\u0003J\u0004\u0001ï¿½\u0003>ï¿½\u0003J\u0004\u0001ï¿½4\u0002ï¿½Èªï¿½@_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½.\u0003$ï¿½.\u00030\u0004\u0001ï¿½'ï¿½Aï¿½]f _Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½4ï¿½B\u0004\u0001ï¿½4ï¿½B\u0004\u0001ï¿½U}ï¿½\u0002\u001bï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002.2.>\u0004\u0001-$-0\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004ï¿½\u000ehT\u0000ï¿½Z\nï¿½`ï¿½^ï¿½x~ï¿½!ï¿½Mï¿½\u0013ï¿½\u0000ï¿½Cï¿½*7ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½Q\u0003Fï¿½Q\u0003T\u0004\u0001ï¿½R\u00034ï¿½R\u0003B\u0004\u0001ï¿½1lï¿½Jï¿½class std::basic_istream : virtual public basic_ios<_CharT, _Traits> {}\u0000\f\u0016\u001a\u0000\u0000\u0000\u0000\u0015ï¿½gï¿½\u000eQz7ï¿½\u0005ï¿½\u0010\u001a\t~ï¿½Cï¿½\u0016\\ï¿½\u0014ï¿½\u0013Bï¿½/\u001eï¿½Co]ï¿½|ï¿½\u0018ï¿½æOï¿½\u0014,ï¿½Xï¿½Qï¿½\u001aï¿½Ã±Gy[vï¿½Uï¿½kï¿½{ï¿½Jï¿½\u0019)ï¿½\u0012Y\u0011m7ï¿½\u001bï¿½!Ubï¿½#;ï¿½SØ¡ï¿½Pï¿½yï¿½9G@ï¿½=ï¿½(ï¿½'ï¿½+ï¿½m[S\u000bï¿½dï¿½X,ï¿½/Cï¿½3R\u0017ï¿½Fï¿½dï¿½:ï¿½\u000fï¿½\u0017ï¿½\u0017Wz\u0011ï¿½>uï¿½'\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004ï¿½3\"Wi\u000eï¿½\u0016&ï¿½\u001dï¿½sï¿½<ï¿½\u001a\u001eï¿½W×¶ï¿½]x4.\u0016.0\u0004\u0001-\b-\"\u0004\u0001\\\f\\&\u0004\u0001]\f]&\u0004\u0001w\bw\"\u0004\u0001x\bx\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\u001aï¿½4\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\u0015\u0001\bï¿½\u0015\u0001\"\u0004\u0001ï¿½\u0016\u0001\bï¿½\u0016\u0001\"\u0004\u0001ï¿½:\u0001\bï¿½:\u0001\"\u0004\u0001ï¿½;\u0001\bï¿½;\u0001\"\u0004\u0001ï¿½i\u0001\bï¿½i\u0001\"\u0004\u0001ï¿½j\u0001\bï¿½j\u0001\"\u0004\u0001ï¿½\u0001\bï¿½\u0001\"\u0004\u0001ï¿½\u0001\bï¿½\u0001\"\u0004\u0001ï¿½\u0001\bï¿½\u0001\"\u0004\u0001ï¿½\u0001\bï¿½\u0001\"\u0004\u0001ï¿½\u0001\bï¿½\u0001\"\u0004\u0001ï¿½\u0001\bï¿½\u0001\"\u0004\u0001ï¿½?\u0002\bï¿½?\u0002\"\u0004\u0001ï¿½@\u0002\bï¿½@\u0002\"\u0004\u0001ï¿½\u0002\u001aï¿½\u00024\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\n\u0003\bï¿½\n\u0003\"\u0004\u0001ï¿½\u000b\u0003\bï¿½\u000b\u0003\"\u0004\u0001ï¿½.\u0003\bï¿½.\u0003\"\u0004\u0001ï¿½Q\u0003\u001aï¿½Q\u00034\u0004\u0001ï¿½R\u0003\bï¿½R\u0003\"\u0004\u0001ï¿½m\u0003\bï¿½m\u0003\"\u0004\u0001ï¿½n\u0003\bï¿½n\u0003\"\u0004\u0001ï¿½\u0003\bï¿½\u0003\"\u0004\u0001ï¿½\u0003\bï¿½\u0003\"\u0004\u0001ï¿½\u0003\bï¿½\u0003\"\u0004\u0001ï¿½\u0003\u001eï¿½\u00038\u0004\u0001ï¿½\u0003\u001cï¿½\u00036\u0004\u0001ï¿½\u0003,ï¿½\u0003F\u0004\u0001ï¿½\u0003\u001cï¿½\u00036\u0004\u0001ï¿½\u001b\u0004\bï¿½\u001b\u0004\"\u0004\u0001ï¿½\u001c\u0004\u000eï¿½\u001c\u0004(\u0004\u0001ï¿½\u001e\u0004\u001cï¿½\u001e\u00046\u0004\u0001ï¿½4\u00040ï¿½4\u0004J\u0004\u0001ï¿½K\u00040ï¿½K\u0004J\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\fï¿½8}^ï¿½Cï¿½Eï¿½\u0010\u001c^\nï¿½O\u0001ï¿½<fqï¿½Dï¿½xdï¿½Yï¿½RXï¿½Dï¿½\u0012ï¿½-e\nï¿½\nï¿½\u0015ï¿½)ï¿½Jw\u000eï¿½\u0016ihï¿½\u0019\"ï¿½4ï¿½)ï¿½<ï¿½\u0018ï¿½7RFï¿½qï¿½\u0018ï¿½\u0002ï¿½\u0000ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002w4wB\u0004\u0001x4xB\u0004\u0001ï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0011\fBï¿½%typedef std::_Ios_Iostate std::ios_base::iostate\u00004R\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\u0000\u0000\u0000\u0017ï¿½\u001eï¿½hï¿½Ü¨ï¿½\u001fÝF/ï¿½\u001fï¿½%ï¿½t8ï¿½5ï¿½%+ï¿½-ï¿½yZï¿½B2ï¿½yï¿½'ï¿½\u0005iï¿½rï¿½iï¿½^\u0003\u0005ï¿½tï¿½Uï¿½{ï¿½i*9Xï¿½oï¿½0ï¿½\u000bï¿½\u001d8ï¿½;ï¿½.ï¿½\tï¿½\u0015gï¿½\rï¿½qï¿½iï¿½Mï¿½Cyï¿½Cï¿½$ï¿½\bWï¿½s\u0014ï¿½;Esï¿½_ï¿½Jï¿½dï¿½\u001a\nUpï¿½\u001fï¿½Ý­ï¿½2ï¿½HIï¿½\u0005Nphï¿½^ï¿½M\u0010ï¿½\\0%ï¿½Xfï¿½Q\u0019ï¿½\u0005\u0015ï¿½2ï¿½\u00170 0.\u0004\u0001c\u001ec,\u0004\u0001ï¿½\u001aï¿½(\u0004\u0001ï¿½\u001aï¿½(\u0004\u0001ï¿½ ï¿½.\u0004\u0001ï¿½ ï¿½.\u0004\u0001ï¿½\u001a\u0001 ï¿½\u001a\u0001.\u0004\u0001ï¿½?\u0001 ï¿½?\u0001.\u0004\u0001ï¿½n\u0001 ï¿½n\u0001.\u0004\u0001ï¿½\u0001 ï¿½\u0001.\u0004\u0001ï¿½\u0001\u001aï¿½\u0001(\u0004\u0001ï¿½\u0001\u0002(ï¿½\u0001\u00026\u0004\u0001ï¿½G\u0002(ï¿½G\u00026\u0004\u0001ï¿½\u0002\u001aï¿½\u0002(\u0004\u0001ï¿½\u0002\u001aï¿½\u0002(\u0004\u0001ï¿½\u0002\u001aï¿½\u0002(\u0004\u0001ï¿½\u0002\u001aï¿½\u0002(\u0004\u0001ï¿½\u0016\u0003\u001aï¿½\u0016\u0003(\u0004\u0001ï¿½7\u0003\u001aï¿½7\u0003(\u0004\u0001ï¿½x\u0003\u001aï¿½x\u0003(\u0004\u0001ï¿½\u0003\u001aï¿½\u0003(\u0004\u0001ï¿½\u0003\u001aï¿½\u0003(\u0004\u0001ï¿½\u0003 ï¿½\u0003.\u0004\u0001ï¿½[ï¿½N\u001eï¿½\u001aï¿½struct std::ctype_base {}\u0000\u000e\u0018\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0003>(><\u0004\u0001ï¿½\u0003&ï¿½\u0003:\u0004\u0001ï¿½)\u0004\"ï¿½)\u00046\u0004\u0001ï¿½\\ï¿½\u001a\u0016ï¿½Bx_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002.B.P\u0004\u0001-4-B\u0004\u0001ï¿½-Kï¿½Viï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Ò³[CÒ­ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0015\u00014ï¿½\u0015\u0001B\u0004\u0001ï¿½\u0016\u00014ï¿½\u0016\u0001B\u0004\u0001ï¿½(oï¿½\u0004bï¿½template<> struct __gnu_cxx::__numeric_traits<short> : public __numeric_traits_integer<short> {}\u0000$: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0012ï¿½8ï¿½X\u0004\u0001ï¿½*ï¿½J\u0004\u0001ï¿½Bï¿½b\u0004\u0001ï¿½*ï¿½J\u0004\u0001ï¿½8ï¿½X\u0004\u0001ï¿½*ï¿½J\u0004\u0001ï¿½Bï¿½b\u0004\u0001ï¿½*ï¿½J\u0004\u0001ï¿½\u0001Dï¿½\u0001d\u0004\u0001ï¿½\u00012ï¿½\u0001R\u0004\u0001ï¿½\u0018\u00024ï¿½\u0018\u0002T\u0004\u0001ï¿½\u001c\u0002\u001cï¿½\u001c\u0002<\u0004\u0001ï¿½#\u0002:ï¿½#\u0002Z\u0004\u0001ï¿½&\u0002:ï¿½&\u0002Z\u0004\u0001ï¿½Y\u00024ï¿½Y\u0002T\u0004\u0001ï¿½^\u0002\u001cï¿½^\u0002<\u0004\u0001ï¿½e\u0002:ï¿½e\u0002Z\u0004\u0001ï¿½h\u0002:ï¿½h\u0002Z\u0004\u0001ï¿½]ï¿½\bï¿½rï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\fï¿½Zbï¿½class std::ios_base {}\u0000\f\u0016\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000ï¿½0\f0\u001c\u0004\u00010@0P\u0004\u00016T6d\u0004\u0001F\u001aF*\u0004\u0001K,K<\u0004\u0001O,O<\u0004\u0001QDQT\u0004\u0001U\u0018U(\u0004\u0001c\nc\u001a\u0004\u0001c>cN\u0004\u0001k(k8\u0004\u0001o6oF\u0004\u0001ï¿½\u0006ï¿½\u0016\u0004\u0001ï¿½:ï¿½J\u0004\u0001ï¿½\u001aï¿½*\u0004\u0001ï¿½\u001aï¿½*\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½\u0006ï¿½\u0016\u0004\u0001ï¿½:ï¿½J\u0004\u0001ï¿½\u001aï¿½*\u0004\u0001ï¿½\u001aï¿½*\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½\fï¿½\u001c\u0004\u0001ï¿½@ï¿½P\u0004\u0001ï¿½\u0016ï¿½&\u0004\u0001ï¿½\u0016ï¿½&\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½\u0014ï¿½$\u0004\u0001ï¿½\fï¿½\u001c\u0004\u0001ï¿½@ï¿½P\u0004\u0001ï¿½\u0003\u0001\u0016ï¿½\u0003\u0001&\u0004\u0001ï¿½\u0007\u00012ï¿½\u0007\u0001B\u0004\u0001ï¿½\u000b\u00012ï¿½\u000b\u0001B\u0004\u0001ï¿½\u000e\u0001\u0014ï¿½\u000e\u0001$\u0004\u0001ï¿½\u001a\u0001\fï¿½\u001a\u0001\u001c\u0004\u0001ï¿½\u001a\u0001@ï¿½\u001a\u0001P\u0004\u0001ï¿½(\u0001\u0016ï¿½(\u0001&\u0004\u0001ï¿½,\u00012ï¿½,\u0001B\u0004\u0001ï¿½0\u00012ï¿½0\u0001B\u0004\u0001ï¿½3\u0001\u0014ï¿½3\u0001$\u0004\u0001ï¿½?\u0001\fï¿½?\u0001\u001c\u0004\u0001ï¿½?\u0001@ï¿½?\u0001P\u0004\u0001ï¿½S\u0001\u0016ï¿½S\u0001&\u0004\u0001ï¿½W\u00012ï¿½W\u0001B\u0004\u0001ï¿½[\u00012ï¿½[\u0001B\u0004\u0001ï¿½b\u0001\u0014ï¿½b\u0001$\u0004\u0001ï¿½n\u0001\fï¿½n\u0001\u001c\u0004\u0001ï¿½n\u0001@ï¿½n\u0001P\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001&\u0004\u0001ï¿½\u00012ï¿½\u0001B\u0004\u0001ï¿½\u00012ï¿½\u0001B\u0004\u0001ï¿½\u0001\u0014ï¿½\u0001$\u0004\u0001ï¿½\u0001\fï¿½\u0001\u001c\u0004\u0001ï¿½\u0001@ï¿½\u0001P\u0004\u0001ï¿½\u00012ï¿½\u0001B\u0004\u0001ï¿½\u0001:ï¿½\u0001J\u0004\u0001ï¿½\u00012ï¿½\u0001B\u0004\u0001ï¿½\u0001@ï¿½\u0001P\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\u0006ï¿½\u0001\u0016\u0004\u0001ï¿½\u0001:ï¿½\u0001J\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001&\u0004\u0001ï¿½\u00012ï¿½\u0001B\u0004\u0001ï¿½\u00012ï¿½\u0001B\u0004\u0001ï¿½\u0001\u0002\u0014ï¿½\u0001\u0002$\u0004\u0001ï¿½\u0001\u0002Hï¿½\u0001\u0002X\u0004\u0001ï¿½)\u0002\u001eï¿½)\u0002.\u0004\u0001ï¿½.\u0002\u001eï¿½.\u0002.\u0004\u0001ï¿½3\u00022ï¿½3\u0002B\u0004\u0001ï¿½7\u0002@ï¿½7\u0002P\u0004\u0001ï¿½G\u0002\u0014ï¿½G\u0002$\u0004\u0001ï¿½G\u0002Hï¿½G\u0002X\u0004\u0001ï¿½k\u0002\u001eï¿½k\u0002.\u0004\u0001ï¿½v\u0002\u001eï¿½v\u0002.\u0004\u0001ï¿½\u00022ï¿½\u0002B\u0004\u0001ï¿½\u0002@ï¿½\u0002P\u0004\u0001ï¿½\u0002\u0006ï¿½\u0002\u0016\u0004\u0001ï¿½\u0002:ï¿½\u0002J\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002&\u0004\u0001ï¿½\u00022ï¿½\u0002B\u0004\u0001ï¿½\u00022ï¿½\u0002B\u0004\u0001ï¿½\u0002\u0006ï¿½\u0002\u0016\u0004\u0001ï¿½\u0002:ï¿½\u0002J\u0004\u0001ï¿½\u0002\u0018ï¿½\u0002(\u0004\u0001ï¿½\u0002>ï¿½\u0002N\u0004\u0001ï¿½\u00022ï¿½\u0002B\u0004\u0001ï¿½\u00022ï¿½\u0002B\u0004\u0001ï¿½\u0002\u0006ï¿½\u0002\u0016\u0004\u0001ï¿½\u0002:ï¿½\u0002J\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002&\u0004\u0001ï¿½\u00022ï¿½\u0002B\u0004\u0001ï¿½\u00022ï¿½\u0002B\u0004\u0001ï¿½\u0002Jï¿½\u0002Z\u0004\u0001ï¿½\u0002\u0006ï¿½\u0002\u0016\u0004\u0001ï¿½\u0002:ï¿½\u0002J\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002&\u0004\u0001ï¿½\u00022ï¿½\u0002B\u0004\u0001ï¿½\u0002\u00032ï¿½\u0002\u0003B\u0004\u0001ï¿½\u0012\u0003Jï¿½\u0012\u0003Z\u0004\u0001ï¿½\u0016\u0003\u0006ï¿½\u0016\u0003\u0016\u0004\u0001ï¿½\u0016\u0003:ï¿½\u0016\u0003J\u0004\u0001ï¿½\u001d\u0003\u0016ï¿½\u001d\u0003&\u0004\u0001ï¿½!\u00032ï¿½!\u0003B\u0004\u0001ï¿½%\u00032ï¿½%\u0003B\u0004\u0001ï¿½7\u0003\u0006ï¿½7\u0003\u0016\u0004\u0001ï¿½7\u0003:ï¿½7\u0003J\u0004\u0001ï¿½>\u0003\u001eï¿½>\u0003.\u0004\u0001ï¿½E\u00032ï¿½E\u0003B\u0004\u0001ï¿½I\u00032ï¿½I\u0003B\u0004\u0001ï¿½^\u0003Nï¿½^\u0003^\u0004\u0001ï¿½_\u0003\u0010ï¿½_\u0003 \u0004\u0001ï¿½c\u00032ï¿½c\u0003B\u0004\u0001ï¿½g\u00032ï¿½g\u0003B\u0004\u0001ï¿½t\u0003Jï¿½t\u0003Z\u0004\u0001ï¿½x\u0003\u0006ï¿½x\u0003\u0016\u0004\u0001ï¿½x\u0003:ï¿½x\u0003J\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u001eï¿½\u0003.\u0004\u0001ï¿½\u00032ï¿½\u0003B\u0004\u0001ï¿½\u00032ï¿½\u0003B\u0004\u0001ï¿½\u00034ï¿½\u0003D\u0004\u0001ï¿½\u0003Jï¿½\u0003Z\u0004\u0001ï¿½\u0003\u0006ï¿½\u0003\u0016\u0004\u0001ï¿½\u0003:ï¿½\u0003J\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u001eï¿½\u0003.\u0004\u0001ï¿½\u00032ï¿½\u0003B\u0004\u0001ï¿½\u00032ï¿½\u0003B\u0004\u0001ï¿½\u0003\u0006ï¿½\u0003\u0016\u0004\u0001ï¿½\u0003:ï¿½\u0003J\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003(\u0004\u0001ï¿½\u0003>ï¿½\u0003N\u0004\u0001ï¿½\u00030ï¿½\u0003@\u0004\u0001ï¿½\u00030ï¿½\u0003@\u0004\u0001ï¿½\u0003\fï¿½\u0003\u001c\u0004\u0001ï¿½\u0003@ï¿½\u0003P\u0004\u0001ï¿½\u0004\u0004\u0016ï¿½\u0004\u0004&\u0004\u0001ï¿½\r\u00040ï¿½\r\u0004@\u0004\u0001ï¿½\u0011\u00040ï¿½\u0011\u0004@\u0004\u0001ï¿½\u0014\u0004\u0014ï¿½\u0014\u0004$\u0004\u0001ï¿½-\u0004 ï¿½-\u00040\u0004\u0001ï¿½4\u0014ï¿½Hï¿½y/Btypedef _Traits std::basic_istream::sentry::traits_type\u0000 X\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Yï¿½\u001b\u0012,ï¿½.ï¿½\u0000\u0000\u0000\u0000\u0004868L\u0004\u0001=\u0014=*\u0004\u0001?\f?\"\u0004\u0001E\fE\"\u0004\u0001ï¿½<ï¿½\fï¿½Tï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002w$w0\u0004\u0001x$x0\u0004\u0001ï¿½Yï¿½\u001b\u0012,ï¿½.\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Tï¿½)A\"y\u001etypedef basic_streambuf<_CharT, _Traits> std::basic_istream::sentry::__streambuf_type\u0000Rï¿½ \u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\u0000\u0000\u0000\u0001ï¿½2|ï¿½\u001bZtï¿½\u00019\u00049$\u0004\u0001ï¿½\u0000\u0006ï¿½\u001dd_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\bï¿½\u001b\u00044ï¿½\u001b\u0004B\u0004\u0001ï¿½\u001c\u0004:ï¿½\u001c\u0004H\u0004\u0001ï¿½\u001e\u0004Hï¿½\u001e\u0004V\u0004\u0001ï¿½\u001f\u0004Lï¿½\u001f\u0004Z\u0004\u0001ï¿½$\u0004>ï¿½$\u0004L\u0004\u0001ï¿½(\u0004\u001cï¿½(\u0004*\u0004\u0001ï¿½)\u0004Hï¿½)\u0004V\u0004\u0001ï¿½,\u0004\u0016ï¿½,\u0004$\u0004\u0001ï¿½+~ï¿½kï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002\\(\\4\u0004\u0001](]4\u0004\u0001ï¿½/ï¿½ÙN_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u00026ï¿½\u0002B\u0004\u0001ï¿½\u0002$ï¿½\u00020\u0004\u0001ï¿½)\u0011ztJï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½$ï¿½0\u0004\u0001ï¿½$ï¿½0\u0004\u0001ï¿½b8MuR$_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½$ï¿½0\u0004\u0001ï¿½$ï¿½0\u0004\u0001ï¿½Nï¿½G/Ètypedef basic_streambuf<_CharT, _Traits> std::basic_istream::__streambuf_type\u0000Rz \u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\u0000\u0000\u0000\u000bï¿½Q\u0010ï¿½6aï¿½}ï¿½>ï¿½oQï¿½Nï¿½ê­ï¿½>ï¿½wï¿½\rï¿½Eï¿½p_\u001cï¿½*ï¿½Kï¿½ggEï¿½\u0017ï¿½\bpï¿½Jï¿½D\u0006Qï¿½Mï¿½czÙ¥r\u0013#cï¿½E\u0000]ï¿½eB{ï¿½bï¿½ {mnï¿½\u000bï¿½\u001eï¿½>\u0004\u0001ï¿½G\u0001\u000eï¿½G\u0001.\u0004\u0001ï¿½k\u0001\u0010ï¿½k\u00010\u0004\u0001ï¿½v\u0001\u000eï¿½v\u0001.\u0004\u0001ï¿½\u0001\u001cï¿½\u0001<\u0004\u0001ï¿½\u0001\u000eï¿½\u0001.\u0004\u0001ï¿½\u0005\u0002\u001cï¿½\u0005\u0002<\u0004\u0001ï¿½K\u0002\u001cï¿½K\u0002<\u0004\u0001ï¿½\u0002\u000eï¿½\u0002.\u0004\u0001ï¿½\u001a\u0003\u000eï¿½\u001a\u0003.\u0004\u0001ï¿½:\u0003\u000eï¿½:\u0003.\u0004\u0001ï¿½\u001cï¿½6cï¿½=~\u0004_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\n\u0003$ï¿½\n\u00030\u0004\u0001ï¿½\u000b\u0003$ï¿½\u000b\u00030\u0004\u0001ï¿½8ï¿½awGï¿½kï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½Fï¿½T\u0004\u0001ï¿½4ï¿½B\u0004\u0001ï¿½w\u0005ï¿½Y*)ï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0001ï¿½g\u001fÔ,ï¿½+ï¿½\u0004ï¿½\u0003$ï¿½\u00030\u0004\u0001ï¿½\u0003:ï¿½\u0003F\u0004\u0001ï¿½\u0003jï¿½\u0003v\u0004\u0001ï¿½\u00038ï¿½\u0003D\u0004\u0001ï¿½å£eï¿½\u0010typedef _Traits std::basic_istream::traits_type\u0000 H\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½`ï¿½\u0010ï¿½Pï¿½\u0000\u0000\u0000\u0000/ï¿½:ï¿½P\u0004\u0001ï¿½\u0000\u0001\u0018ï¿½\u0000\u0001.\u0004\u0001ï¿½\"\u0001\u0018ï¿½\"\u0001.\u0004\u0001ï¿½\"\u0001Vï¿½\"\u0001l\u0004\u0001ï¿½%\u0001\u0014ï¿½%\u0001*\u0004\u0001ï¿½E\u0001Bï¿½E\u0001X\u0004\u0001ï¿½F\u0001<ï¿½F\u0001R\u0004\u0001ï¿½K\u0001\u0016ï¿½K\u0001,\u0004\u0001ï¿½L\u0001\u0016ï¿½L\u0001,\u0004\u0001ï¿½N\u0001\u001aï¿½N\u00010\u0004\u0001ï¿½R\u0001\u0016ï¿½R\u0001,\u0004\u0001ï¿½t\u0001Bï¿½t\u0001X\u0004\u0001ï¿½u\u0001<ï¿½u\u0001R\u0004\u0001ï¿½x\u00010ï¿½x\u0001F\u0004\u0001ï¿½{\u0001\u001eï¿½{\u00014\u0004\u0001ï¿½|\u0001\u0016ï¿½|\u0001,\u0004\u0001ï¿½}\u0001\u0016ï¿½}\u0001,\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001,\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001,\u0004\u0001ï¿½\u0001Pï¿½\u0001f\u0004\u0001ï¿½\u0001Jï¿½\u0001`\u0004\u0001ï¿½\u00012ï¿½\u0001H\u0004\u0001ï¿½\u00012ï¿½\u0001H\u0004\u0001ï¿½\u00016ï¿½\u0001L\u0004\u0001ï¿½\u0001$ï¿½\u0001:\u0004\u0001ï¿½\u0001,ï¿½\u0001B\u0004\u0001ï¿½\u0001<ï¿½\u0001R\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001,\u0004\u0001ï¿½\u0004\u0002Jï¿½\u0004\u0002`\u0004\u0001ï¿½\u0013\u0002\u0010ï¿½\u0013\u0002&\u0004\u0001ï¿½\u0019\u0002\u0018ï¿½\u0019\u0002.\u0004\u0001ï¿½(\u0002\u0010ï¿½(\u0002&\u0004\u0001ï¿½-\u0002\u0010ï¿½-\u0002&\u0004\u0001ï¿½J\u0002Jï¿½J\u0002`\u0004\u0001ï¿½S\u0002\u0010ï¿½S\u0002&\u0004\u0001ï¿½T\u0002\u0010ï¿½T\u0002&\u0004\u0001ï¿½Z\u0002\u0018ï¿½Z\u0002.\u0004\u0001ï¿½[\u0002\u0018ï¿½[\u0002.\u0004\u0001ï¿½j\u0002\u0010ï¿½j\u0002&\u0004\u0001ï¿½u\u0002\u0010ï¿½u\u0002&\u0004\u0001ï¿½\u0002*ï¿½\u0002@\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002,\u0004\u0001ï¿½\u0002Rï¿½\u0002h\u0004\u0001ï¿½\u0002<ï¿½\u0002R\u0004\u0001ï¿½\u0002\u000eï¿½\u0002$\u0004\u0001ï¿½\u0019\u0003<ï¿½\u0019\u0003R\u0004\u0001ï¿½\u001c\u0003\u000eï¿½\u001c\u0003$\u0004\u0001ï¿½`ï¿½\u0010ï¿½Pï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u000bï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½Q\u00036ï¿½Q\u0003B\u0004\u0001ï¿½R\u0003$ï¿½R\u00030\u0004\u0001ï¿½46ï¿½Âï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0015\u0001$ï¿½\u0015\u00010\u0004\u0001ï¿½\u0016\u0001$ï¿½\u0016\u00010\u0004\u0001ï¿½Rï¿½8ï¿½ ï¿½typedef _CharT std::basic_istream::char_type\u0000\u001eF\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½-Kï¿½Viï¿½\u0000\u0000\u0000\nï¿½\u0012Hï¿½Xï¿½\u0000ï¿½\u000bì¡ï¿½\u001fcJï¿½Yï¿½Q3Kmï¿½-\u000bï¿½65ï¿½Vï¿½eT\u001bï¿½%<ï¿½\u0014\fQJï¿½\u0019Rï¿½\u0019ï¿½$ï¿½Kï¿½1\u000fIï¿½Ëï¿½xï¿½\f\u0015ï¿½WNcF8Þª\fï¿½\u0017\u0001\u0010ï¿½\u0017\u0001\"\u0004\u0001ï¿½<\u0001\u0010ï¿½<\u0001\"\u0004\u0001ï¿½<\u0001Pï¿½<\u0001b\u0004\u0001ï¿½`\u0001\u0010ï¿½`\u0001\"\u0004\u0001ï¿½k\u0001@ï¿½k\u0001R\u0004\u0001ï¿½x\u0001\u000eï¿½x\u0001 \u0004\u0001ï¿½\u0001\u0018ï¿½\u0001*\u0004\u0001ï¿½\u0001Xï¿½\u0001j\u0004\u0001ï¿½\u0001\u0010ï¿½\u0001\"\u0004\u0001ï¿½\u0002\u0012ï¿½\u0002$\u0004\u0001ï¿½\u0002\u001aï¿½\u0002,\u0004\u0001ï¿½\u0002\u0018ï¿½\u0002*\u0004\u0001ï¿½@~]Þ¶N_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u00024ï¿½\u0002B\u0004\u0001ï¿½\u00024ï¿½\u0002B\u0004\u0001ï¿½Jï¿½eï¿½\u0015Uï¿½namespace __cxxabiv1 {}\u0000\u0014\u0014\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u00000I\u0012I&\u0004\u0001I\u0012I&@\u0000i\u001ai.\u0004\u0001i\u001ai.@\u0000ï¿½\u0016ï¿½*\u0004\u0001ï¿½\u0016ï¿½*@\u0000ï¿½\u0016ï¿½*\u0004\u0001ï¿½\u0016ï¿½*@\u0000ï¿½\u0016ï¿½*\u0004\u0001ï¿½\u0016ï¿½*@\u0000ï¿½\u0005\u0001\u0016ï¿½\u0005\u0001*\u0004\u0001ï¿½\u0005\u0001\u0016ï¿½\u0005\u0001*@\u0000ï¿½*\u0001\u0016ï¿½*\u0001*\u0004\u0001ï¿½*\u0001\u0016ï¿½*\u0001*@\u0000ï¿½U\u0001\u0016ï¿½U\u0001*\u0004\u0001ï¿½U\u0001\u0016ï¿½U\u0001*@\u0000ï¿½\u0001\u0016ï¿½\u0001*\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001*@\u0000ï¿½\u0001\u0016ï¿½\u0001*\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001*@\u0000ï¿½\u0001\u0016ï¿½\u0001*\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001*@\u0000ï¿½1\u0002\u0016ï¿½1\u0002*\u0004\u0001ï¿½1\u0002\u0016ï¿½1\u0002*@\u0000ï¿½~\u0002\u0016ï¿½~\u0002*\u0004\u0001ï¿½~\u0002\u0016ï¿½~\u0002*@\u0000ï¿½\u0002\u0016ï¿½\u0002*\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002*@\u0000ï¿½\u0002\u0016ï¿½\u0002*\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002*@\u0000ï¿½\u0002\u0016ï¿½\u0002*\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002*@\u0000ï¿½\u0002\u0016ï¿½\u0002*\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002*@\u0000ï¿½\u001f\u0003\u0016ï¿½\u001f\u0003*\u0004\u0001ï¿½\u001f\u0003\u0016ï¿½\u001f\u0003*@\u0000ï¿½C\u0003\u0016ï¿½C\u0003*\u0004\u0001ï¿½C\u0003\u0016ï¿½C\u0003*@\u0000ï¿½a\u0003\u0016ï¿½a\u0003*\u0004\u0001ï¿½a\u0003\u0016ï¿½a\u0003*@\u0000ï¿½\u0003\u0016ï¿½\u0003*\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003*@\u0000ï¿½\u0003\u0016ï¿½\u0003*\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003*@\u0000ï¿½\u0003\u0016ï¿½\u0003*\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003*@\u0000ï¿½\u000b\u0004\u0016ï¿½\u000b\u0004*\u0004\u0001ï¿½\u000b\u0004\u0016ï¿½\u000b\u0004*@\u0000ï¿½Ø¾\u000eï¿½\u0018,ï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½:\u0001$ï¿½:\u00010\u0004\u0001ï¿½;\u0001$ï¿½;\u00010\u0004\u0001ï¿½Úï¿½0}ï¿½typedef typename __istream_type::int_type __int_type\u0000TT\u0014\u0000\u0000\u0001ï¿½\u0003pï¿½\u0003ï¿½\u0002\u0001ï¿½\u0003\fï¿½\u0003ï¿½\u0000\u0000\u0000\u0000\u0000ï¿½\f\u0000\u0000\u0001ï¿½\u0015ï¿½\n\"\u0001ï¿½\u0003\u001aï¿½\u0003.\u0004\u0001ï¿½G\rNZO_&_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u00014ï¿½\u0001B\u0004\u0001ï¿½\u00014ï¿½\u0001B\u0004\u0001ï¿½1.$Æ\u001dP_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0006ï¿½\u00034ï¿½\u0003B\u0004\u0001ï¿½\u0003Jï¿½\u0003X\u0004\u0001ï¿½\u0003Hï¿½\u0003V\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003&\u0004\u0001ï¿½\u0003Nï¿½\u0003\\\u0004\u0001ï¿½\u0003\u0010ï¿½\u0003\u001e\u0004\u0001ï¿½\u0014]ï¿½Zï¿½typedef std::ptrdiff_t std::streamsize\u0000.8\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½]ï¿½\bï¿½rï¿½Vï¿½\u0000\u0000\u0000\u0000\u0015ï¿½<\u00010ï¿½<\u0001D\u0004\u0001ï¿½\u0001fï¿½\u0001z\u0004\u0001ï¿½\u0001Tï¿½\u0001h\u0004\u0001ï¿½\u00018ï¿½\u0001L\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001*\u0004\u0001ï¿½\u0018\u0002Vï¿½\u0018\u0002j\u0004\u0001ï¿½\u001c\u0002>ï¿½\u001c\u0002R\u0004\u0001ï¿½#\u0002\\ï¿½#\u0002p\u0004\u0001ï¿½&\u0002\\ï¿½&\u0002p\u0004\u0001ï¿½A\u0002\u0016ï¿½A\u0002*\u0004\u0001ï¿½Y\u0002Vï¿½Y\u0002j\u0004\u0001ï¿½^\u0002>ï¿½^\u0002R\u0004\u0001ï¿½e\u0002\\ï¿½e\u0002p\u0004\u0001ï¿½h\u0002\\ï¿½h\u0002p\u0004\u0001ï¿½\u00022ï¿½\u0002F\u0004\u0001ï¿½\u0002\bï¿½\u0002\u001c\u0004\u0001ï¿½\u0002:ï¿½\u0002N\u0004\u0001ï¿½\u0002\u001aï¿½\u0002.\u0004\u0001ï¿½\u0003\u0010ï¿½\u0003$\u0004\u0001ï¿½\u0003\fï¿½\u0003 \u0004\u0001ï¿½\u0003\u000eï¿½\u0003\"\u0004\u0001ï¿½#Þyga.ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½i\u00014ï¿½i\u0001B\u0004\u0001ï¿½j\u00014ï¿½j\u0001B\u0004\u0001ï¿½hDsXï¿½\bï¿½~_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½i\u0001$ï¿½i\u00010\u0004\u0001ï¿½j\u0001$ï¿½j\u00010\u0004\u0001ï¿½4ï¿½î¹typedef _CharT char_type\u0000\u001e\u001e\u0012\u0000\u0000\u0001ï¿½\u00032ï¿½\u0003D\u0002\u0001ï¿½\u0003\fï¿½\u0003D\u0000\u0000\u0000\u0000ï¿½d\u0004ï¿½e\u001dXwï¿½\f\u0000\u0000\u0000\u0001ï¿½\b\u0004\u001cï¿½\b\u0004.\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\tÑï¿½bï¿½\u0000ï¿½Z(=ï¿½\u0014ï¿½W_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u00014ï¿½\u0001B\u0004\u0001ï¿½\u00014ï¿½\u0001B\u0004\u0001ï¿½0meï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0001$ï¿½\u00010\u0004\u0001ï¿½\u0001$ï¿½\u00010\u0004\u0001ï¿½4cï¿½T@ï¿½L_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0001$ï¿½\u00010\u0004\u0001ï¿½\u0001$ï¿½\u00010\u0004\u0001ï¿½#ï¿½Fm\u0012\f$ï¿½typedef basic_streambuf<_CharT, _Traits> __streambuf_type\u0000RR \u0000\u0000\u0001ï¿½\u0003pï¿½\u0003ï¿½\u0002\u0001ï¿½\u0003\fï¿½\u0003ï¿½\u0000\u0000\u0000\u0000ï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\f\u0000\u0000\u0001ï¿½\u0006ï¿½}ï¿½ÖX\u0001ï¿½\u0003\u000eï¿½\u0003.\u0004\u0001ï¿½\u0007\u0017ï¿½\u000bï¿½\u000f(_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½4ï¿½B\u0004\u0001ï¿½4ï¿½B\u0004\u0001ï¿½0HX]=ï¿½V_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½6ï¿½B\u0004\u0001ï¿½$ï¿½0\u0004\u0001ï¿½8ï¿½Y\u000elï¿½\u0000_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0001$ï¿½\u00010\u0004\u0001ï¿½\u0001$ï¿½\u00010\u0004\u0001ï¿½fRxNï¿½\f_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½?\u0002$ï¿½?\u00020\u0004\u0001ï¿½@\u0002$ï¿½@\u00020\u0004\u0001ï¿½Dï¿½/p\u0003RJc__streambuf_type *__sb\u0000$$\b__streambuf_type *__sb = __in.rdbuf()\u0000\u0000\u0001ï¿½%\u00040ï¿½%\u00048\u0002\u0001ï¿½%\u0004\fï¿½%\u0004Vï¿½\u0007Õï¿½fxï¿½\r\f\u0000\u0000\u0002ï¿½&\u0004.ï¿½&\u00046\u0004\u0001ï¿½*\u0004\u000eï¿½*\u0004\u0016\u0004\u0001ï¿½w\rï¿½e\u0012jn __int_type __c\u0000\u0016\u0016\u0006__int_type __c = __sb->sgetc()\u0000\u0000\u0001ï¿½&\u0004\"ï¿½&\u0004(\u0002\u0001ï¿½&\u0004\fï¿½&\u0004Hï¿½!=Å\u000eï¿½\u0007ï¿½\r\f\u0000\u0000\u0004ï¿½(\u0004Fï¿½(\u0004L\u0004\u0001ï¿½)\u0004tï¿½)\u0004z\u0004\u0001ï¿½*\u0004\u0002ï¿½*\u0004\b\u0014\u0001ï¿½,\u0004@ï¿½,\u0004F\u0004\u0001ï¿½0ï¿½Gwï¿½const __int_type __eof\u0000\"\"\nconst __int_type __eof = _Traits::eof()\u0000\u0000\u0001ï¿½$\u0004.ï¿½$\u00048\u0002\u0001ï¿½$\u0004\fï¿½$\u0004Zï¿½!=Å\u000eï¿½\u0007ï¿½\r\f\u0000\u0000\u0002ï¿½(\u0004Pï¿½(\u0004Z\u0004\u0001ï¿½,\u0004Jï¿½,\u0004T\u0004\u0001ï¿½A\u0015{ï¿½.ï¿½const int_type __eof\u0000\u001e\u001e\nconst int_type __eof = _Traits::eof()\u0000\u0000\u0001ï¿½\u0003,ï¿½\u00036\u0002\u0001ï¿½\u0003\u000eï¿½\u0003Xï¿½q\">ï¿½98ï¿½\r\f\u0000\u0000\u0002ï¿½\u0003Jï¿½\u0003T\u0004\u0001ï¿½\u0003\u0004Bï¿½\u0003\u0004L\u0004\u0001ï¿½\u0018ï¿½\u0002ï¿½std::streamsize __width\u0000  \u000estd::streamsize __width = __in.width()\u0000Figure out how many characters to extract.\u0000\u0001ï¿½\u0003$ï¿½\u00032\u0002\u0001ï¿½\u0003\u000eï¿½\u0003Pï¿½\r\f\u0000\u0000\u0003ï¿½\u0003\u001eï¿½\u0003,\f\u0001ï¿½\u00034ï¿½\u0003B\f\u0001ï¿½\u0003\u0014ï¿½\u0003\"\f\u0001ï¿½Q\u0019ï¿½\u0005\u0015ï¿½2ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u00030ï¿½\u0003:\u0002\u0001ï¿½\u0003\fï¿½\u0003bï¿½\u0011\fBï¿½%\r\f\u0000\u0000\u0004ï¿½\u0004\u0004\u0004ï¿½\u0004\u0004\u000e\u001c\u0001ï¿½\u0014\u0004\u0002ï¿½\u0014\u0004\f\u001c\u0001ï¿½\u0015\u0004\u0014ï¿½\u0015\u0004\u001e\f\u0001ï¿½\u0016\u0004\u001eï¿½\u0016\u0004(\u0004\u0001ï¿½<ï¿½\u0018ï¿½7RFstd::streamsize __num\u0000  \n\u0000\u0000\u0001ï¿½\u0003&ï¿½\u00030ï¿½\u0002\u0004\u0001ï¿½\u0003\u0010ï¿½\u00030ï¿½\f\u0000\u0000\u0004ï¿½\u0003Hï¿½\u0003R\f\u0001ï¿½\u0003\u0004ï¿½\u0003\u000e\u0014\u0001ï¿½\u00038ï¿½\u0003B\f\u0001ï¿½\u0002\u00042ï¿½\u0002\u0004<\f\u0001ï¿½<ï¿½\u001a\u001eï¿½basic_istream<_CharT, _Traits> &__in\u0000@@\b\u0000\u0000\u0001ï¿½\u0003lï¿½\u0003tï¿½\u0002\u0004\u0001ï¿½\u0003,ï¿½\u0003tï¿½1lï¿½Jï¿½\f\u0000\u0000\bï¿½\u0003Zï¿½\u0003b\u0004\u0001ï¿½\u00038ï¿½\u0003@\u0004\u0001ï¿½\u0003tï¿½\u0003|\u0004\u0001ï¿½\u0003@ï¿½\u0003H\u0004\u0001ï¿½\t\u0004\u000eï¿½\t\u0004\u0016\u0004\u0001ï¿½\r\u0004\u000eï¿½\r\u0004\u0016\u0004\u0001ï¿½\u0011\u0004\u000eï¿½\u0011\u0004\u0016\u0004\u0001ï¿½\u0016\u0004\u0002ï¿½\u0016\u0004\n\u0004\u0001ï¿½\u0015ï¿½\n\"const __int_type __cb\u0000\"\"\bconst __int_type __cb = __in.rdbuf()->sbumpc()\u0000\u0000\u0001ï¿½\u00030ï¿½\u00038\u0002\u0001ï¿½\u0003\u000eï¿½\u0003jï¿½Úï¿½0}ï¿½\r\f\u0000\u0000\u0002ï¿½\u0003Bï¿½\u0003J\u0004\u0001ï¿½\u0003<ï¿½\u0003D\u0004\u0001ï¿½\\0%ï¿½Xfï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0003*ï¿½\u00034\u0002\u0001ï¿½\u0003\u0006ï¿½\u0003\\ï¿½\u0011\fBï¿½%\r\f\u0000\u0000\u0003ï¿½\u0003\u0004ï¿½\u0003\u000e\u001c\u0001ï¿½\u0003\u000eï¿½\u0003\u0018\f\u0001ï¿½\u0003&ï¿½\u00030\u0004\u0001ï¿½\u0011ï¿½Ð§ï¿½?Dtypename __istream_type::sentry __cerb\u0000@@\ftypename __istream_type::sentry __cerb = (__in, false)\u0000\u0000\u0001ï¿½\u0003Lï¿½\u0003X\u0002\u0001ï¿½\u0003\fï¿½\u0003r\u0000\r\f\u0000\u0000\u0001ï¿½\u0003\u0014ï¿½\u0003 \u0004\u0001ï¿½g\u001fÔ,ï¿½+ï¿½_CharT &__c\u0000\u0010\u0010\u0006\u0000\u0000\u0001ï¿½\u0003zï¿½\u0003ï¿½\u0002\u0004\u0001ï¿½\u0003jï¿½\u0003ï¿½w\u0005ï¿½Y*)ï¿½\f\u0000\u0000\u0001ï¿½\u0003\u0004ï¿½\u0003\n\u0014\u0001ï¿½\u0016&ï¿½\u001dï¿½sï¿½basic_istream<_CharT, _Traits> &__in\u0000@@\b\u0000\u0000\u0001ï¿½\u0003^ï¿½\u0003fï¿½\u0002\u0004\u0001ï¿½\u0003\u001eï¿½\u0003fï¿½1lï¿½Jï¿½\f\u0000\u0000\u0006ï¿½\u0003Zï¿½\u0003b\u0004\u0001ï¿½\u0003>ï¿½\u0003F\u0004\u0001ï¿½\u0003\u000eï¿½\u0003\u0016\u0004\u0001ï¿½\u0003\u000eï¿½\u0003\u0016\u0004\u0001ï¿½\u0003\nï¿½\u0003\u0012\u0004\u0001ï¿½\u0003\u001aï¿½\u0003\"\u0004\u0001ï¿½^ï¿½M\u0010ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0003*ï¿½\u00034\u0002\u0001ï¿½\u0003\u0006ï¿½\u0003\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u0003\fï¿½\u0003\u0016\u001c\u0001ï¿½\u0003\u000eï¿½\u0003\u0018\f\u0001ï¿½\u0003(ï¿½\u00032\u0004\u0001ï¿½?ï¿½Pï¿½Ystd::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0003\u001aï¿½\u0003&\u0002\u0001ï¿½\u0003\fï¿½\u0003@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0003\u0014ï¿½\u0003 \u0004\u0001ï¿½*ï¿½#ï¿½Æï¿½ios_base::seekdir __dir\u0000$$\n\u0000\u0000\u0001ï¿½\u0003Xï¿½\u0003bï¿½\u0002\u0004\u0001ï¿½\u00034ï¿½\u0003bï¿½8ï¿½U\u0013ï¿½\u0006\u0000\u0000\u0001ï¿½\u0003tï¿½\u0003~\u0004\u0001ï¿½4\u0012\u0010+ï¿½8\u0013ï¿½std::basic_istream::off_type __off\u0000::\n\u0000\u0000\u0001ï¿½\u0003&ï¿½\u00030ï¿½\u0002\u0004\u0001ï¿½\u0003\u0014ï¿½\u00030ï¿½n\u0014\u0011u*\u0015ï¿½\u0006\u0000\u0000\u0001ï¿½\u0003fï¿½\u0003p\u0004\u0001ï¿½-zï¿½8ï¿½const std::basic_istream::pos_type __p\u0000FF\u0006const std::basic_istream::pos_type __p = this->rdbuf()->pubseekpos(__pos,\n\t\t\t\t\t\t\t\t ios_base::in)\u0000136.  seekp, seekg setting wrong streams?\u0000\u0001ï¿½~\u0003&ï¿½~\u0003,\u0002\u0001ï¿½~\u0003\bï¿½\u0003,ï¿½\u0013bH*ï¿½,ï¿½\r\u0006\u0000\u0000\u0001ï¿½\u0003\u0010ï¿½\u0003\u0016\u0004\u0001ï¿½%$rï¿½^ï¿½std::basic_istream::pos_type __pos\u0000::\n\u0000\u0000\u0001ï¿½o\u0003&ï¿½o\u00030ï¿½\u0002\u0004\u0001ï¿½o\u0003\u0014ï¿½o\u00030ï¿½\u0013bH*ï¿½,ï¿½\u0006\u0000\u0000\u0001ï¿½~\u0003fï¿½~\u0003p\u0004\u0001ï¿½,ï¿½gHï¿½VUstatic const std::ios_base::openmode std::ios_base::in\u0000Jh\u0004static const std::ios_base::openmode std::ios_base::in = _S_in\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0003ï¿½_\u0003$ï¿½_\u0003(\u0004\u0001ï¿½\u0003&ï¿½\u0003*\u0004\u0001ï¿½\u0003&ï¿½\u0003*\u0004\u0001ï¿½Óï¿½02ï¿½const std::basic_istream::int_type __idelim\u0000FF\u0010const std::basic_istream::int_type __idelim = traits_type::to_int_type(__delim)\u0000\u0000\u0001ï¿½E\u0001,ï¿½E\u0001<\u0002\u0001ï¿½E\u0001\u000eï¿½E\u0001ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0001ï¿½L\u0001Rï¿½L\u0001b\u0004\u0001ï¿½^\u0003\u0005ï¿½tï¿½Uï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½?\u00010ï¿½?\u0001:\u0002\u0001ï¿½?\u0001\fï¿½?\u0001bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0004ï¿½S\u0001\u0004ï¿½S\u0001\u000e\u001c\u0001ï¿½b\u0001\u0002ï¿½b\u0001\f\u001c\u0001ï¿½c\u0001\u0014ï¿½c\u0001\u001e\f\u0001ï¿½d\u0001 ï¿½d\u0001*\u0004\u0001ï¿½Kï¿½1\u000fIstd::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½\u0002(ï¿½\u0002.ï¿½\u0002\u0004\u0001ï¿½\u0002\u0012ï¿½\u0002.ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½\u0002Pï¿½\u0002V\u0004\u0001ï¿½ ï¿½qB^/]\rconst std::basic_istream::__num_get_type &__ng\u0000TT\bconst std::basic_istream::__num_get_type &__ng = __check_facet(this->_M_num_get)\u0000\u0000\u0001f0f8\u0002\u0001f\u0004f|ï¿½\u001bï¿½UÑ³~\u0005ï¿½\r\u0006\u0000\u0000\u0001g\u0004g\f\u0004\u0001ï¿½\u0005iï¿½rï¿½iï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u001a\u00010ï¿½\u001a\u0001:\u0002\u0001ï¿½\u001a\u0001\fï¿½\u001a\u0001bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0004ï¿½(\u0001\u0004ï¿½(\u0001\u000e\u001c\u0001ï¿½3\u0001\u0002ï¿½3\u0001\f\u001c\u0001ï¿½4\u0001\u0014ï¿½4\u0001\u001e\f\u0001ï¿½5\u0001 ï¿½5\u0001*\u0004\u0001ï¿½hÖ5ï¿½\u001cï¿½~const std::basic_ios::__ctype_type *std::basic_ios::_M_ctype\u0000Hh\u0010\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001<`<p\u0004\u0001ï¿½z$\u000bS\u000eTMï¿½std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u001b\u0001\u001aï¿½\u001b\u0001&\u0002\u0001ï¿½\u001b\u0001\fï¿½\u001b\u0001@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u001c\u0001\u0014ï¿½\u001c\u0001 \u0004\u0001ï¿½&vï¿½\bNbG\u0005std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½u\u0003\u001aï¿½u\u0003&\u0002\u0001ï¿½u\u0003\fï¿½u\u0003@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½v\u0003\u0014ï¿½v\u0003 \u0004\u0001ï¿½B2ï¿½yï¿½'ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½0ï¿½:\u0002\u0001ï¿½\fï¿½bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0004ï¿½\u0003\u0001\u0004ï¿½\u0003\u0001\u000e\u001c\u0001ï¿½\u000e\u0001\u0002ï¿½\u000e\u0001\f\u001c\u0001ï¿½\u000f\u0001\u0014ï¿½\u000f\u0001\u001e\f\u0001ï¿½\u0010\u0001 ï¿½\u0010\u0001*\u0004\u0001ï¿½\u0007ï¿½Tï¿½Om\u0007std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, false)\u0000\u0000\u0001ï¿½\u001aï¿½&\u0002\u0001ï¿½\fï¿½Bï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0014ï¿½ \u0004\u0001ï¿½Yï¿½U{\u0005ï¿½[std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, false)\u0000\u0000\u0001`\u0010`\u001c\u0002\u0001`\u0002`8ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001a\na\u0016\u0004\u0001ï¿½\u001dï¿½rÑºstd::basic_istream::int_type __c\u0000::\u0006std::basic_istream::int_type __c = __sb->sgetc()\u0000\u0000\u0001ï¿½L\u0002.ï¿½L\u00024\u0002\u0001ï¿½L\u0002\u001cï¿½L\u0002Tï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0007ï¿½S\u0002Bï¿½S\u0002H\u0004\u0001ï¿½T\u0002Bï¿½T\u0002H\u0004\u0001ï¿½W\u0002\u0010ï¿½W\u0002\u0016\u0014\u0001ï¿½Z\u0002Jï¿½Z\u0002P\u0004\u0001ï¿½[\u0002Jï¿½[\u0002P\u0004\u0001ï¿½j\u0002Bï¿½j\u0002H\u0004\u0001ï¿½u\u0002Bï¿½u\u0002H\u0004\u0001ï¿½Nï¿½ê­ï¿½std::basic_istream::__streambuf_type &__sb\u0000LL\b\u0000\u0000\u0001ï¿½k\u00014ï¿½k\u0001<ï¿½\u0002\u0004\u0001ï¿½k\u0001\u0010ï¿½k\u0001<ï¿½Nï¿½G/Èï¿½\u0006\u0000\u0000\u0001ï¿½}\u0001Hï¿½}\u0001P\u0004\u0001ï¿½D\u0006Qï¿½Mï¿½std::basic_istream::__streambuf_type *__sb\u0000LL\bstd::basic_istream::__streambuf_type *__sb = this->rdbuf()\u0000\u0000\u0001ï¿½K\u0002@ï¿½K\u0002H\u0002\u0001ï¿½K\u0002\u001cï¿½K\u0002hï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0004ï¿½L\u0002:ï¿½L\u0002B\u0004\u0001ï¿½W\u0002\u001cï¿½W\u0002$\u0004\u0001ï¿½p\u0002\u0010ï¿½p\u0002\u0018\u0004\u0001ï¿½z\u0002\u0010ï¿½z\u0002\u0018\u0004\u0001ï¿½Q\u0010ï¿½6astd::basic_istream::__streambuf_type *__sbout\u0000LL\u000e\u0000\u0000\u0001ï¿½Bï¿½Pï¿½\u0002\u0004\u0001ï¿½\u001eï¿½Pï¿½Nï¿½G/Èï¿½\u0006\u0000\u0000\u0003ï¿½(ï¿½6\u0004\u0001ï¿½bï¿½p\u0004\u0001ï¿½ ï¿½.\u0004\u0001ï¿½$RJaï¿½x[\"std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, false)\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\n118. basic_istream uses nonexistent num_get member functions.\u0000\u0001ï¿½\u001aï¿½&\u0002\u0001ï¿½\fï¿½Bï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0014ï¿½ \u0004\u0001ï¿½@^E<\u0017[ï¿½const std::basic_istream::__num_get_type &__ng\u0000TT\bconst std::basic_istream::__num_get_type &__ng = __check_facet(this->_M_num_get)\u0000\u0000\u0001ï¿½:ï¿½B\u0002\u0001ï¿½\u000eï¿½\u001bï¿½UÑ³~\u0005ï¿½\r\u0006\u0000\u0000\u0001ï¿½\u000eï¿½\u0016\u0004\u0001ï¿½\u0019\"ï¿½4ï¿½)ï¿½const std::streamsize __num\u0000,,\nconst std::streamsize __num = this->rdbuf()->in_avail()\u0000Cannot compare int_type with streamsize generically.\u0000\u0001ï¿½\u00020ï¿½\u0002:\u0002\u0001ï¿½\u0002\u000eï¿½\u0002rï¿½\r\u0006\u0000\u0000\u0003ï¿½\u0002\u0016ï¿½\u0002 \f\u0001ï¿½\u0002bï¿½\u0002l\u0004\u0001ï¿½\u0002 ï¿½\u0002*\f\u0001ï¿½_4ï¿½Ç¥Lint &__n\u0000\n\n\u0006\u0000\u0000\u0001ï¿½(ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u001eï¿½.\u0000ï¿½\u0006\u0000\u0000\u0003ï¿½\bï¿½\u000e\u0014\u0001ï¿½\bï¿½\u000e\u0014\u0001ï¿½\u0004ï¿½\n\u0014\u0001ï¿½oï¿½0ï¿½\u000bï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u00010ï¿½\u0001:\u0002\u0001ï¿½\u0001\fï¿½\u0001bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0005ï¿½\u0001 ï¿½\u0001*\u001c\u0001ï¿½\u0001(ï¿½\u00012\u001c\u0001ï¿½\u0001\u0010ï¿½\u0001\u001a\u001c\u0001ï¿½\u0001\u0014ï¿½\u0001\u001e\f\u0001ï¿½\u0001.ï¿½\u00018\u0004\u0001ï¿½\u0010D\t3ï¿½.static const _Value __gnu_cxx::__numeric_traits_integer::__max\u0000(r\nstatic const _Value __gnu_cxx::__numeric_traits_integer::__max = __is_signed\n\t? (((((_Value)1 << (__digits - 1)) - 1) << 1) + 1)\n\t: ~(_Value)0\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\fï¿½tï¿½~\f\u0001ï¿½\\ï¿½f\f\u0001ï¿½pï¿½z\f\u0001ï¿½Xï¿½b\f\u0001ï¿½\u0001ï¿½\u0001ï¿½\f\u0001ï¿½\u0001nï¿½\u0001x\f\u0001ï¿½\u0018\u0002pï¿½\u0018\u0002z\f\u0001ï¿½#\u0002vï¿½#\u0002ï¿½\f\u0001ï¿½&\u0002vï¿½&\u0002ï¿½\f\u0001ï¿½Y\u0002pï¿½Y\u0002z\f\u0001ï¿½e\u0002vï¿½e\u0002ï¿½\f\u0001ï¿½h\u0002vï¿½h\u0002ï¿½\f\u0001ï¿½HIï¿½\u0005Nphios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½x\u0003*ï¿½x\u00034\u0002\u0001ï¿½x\u0003\u0006ï¿½x\u0003\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u0003\fï¿½\u0003\u0016\u001c\u0001ï¿½\u0003\u000eï¿½\u0003\u0018\f\u0001ï¿½\u0003(ï¿½\u00032\u0004\u0001ï¿½6~\u0002ï¿½\u0010ï¿½const std::basic_istream::__num_get_type &__ng\u0000TT\bconst std::basic_istream::__num_get_type &__ng = __check_facet(this->_M_num_get)\u0000\u0000\u0001ï¿½:ï¿½B\u0002\u0001ï¿½\u000eï¿½\u001bï¿½UÑ³~\u0005ï¿½\r\u0006\u0000\u0000\u0001ï¿½\u000eï¿½\u0016\u0004\u0001ï¿½W×¶ï¿½]xbasic_istream<_CharT, _Traits> &__in\u0000@@\b\u0000\u0000\u0001ï¿½\u001c\u0004Nï¿½\u001c\u0004Vï¿½\u0002\u0004\u0001ï¿½\u001c\u0004\u000eï¿½\u001c\u0004Vï¿½1lï¿½Jï¿½\f\u0000\u0000\u0004ï¿½#\u0004rï¿½#\u0004z\u0004\u0001ï¿½%\u0004>ï¿½%\u0004F\u0004\u0001ï¿½-\u0004\u0004ï¿½-\u0004\f\u0004\u0001ï¿½.\u0004\u001aï¿½.\u0004\"\u0004\u0001ï¿½%ï¿½t8ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½*ï¿½4\u0002\u0001ï¿½\u0006ï¿½\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0005ï¿½Bï¿½L\u0004\u0001ï¿½\bï¿½\u0012\u001c\u0001ï¿½\bï¿½\u0012\u001c\u0001ï¿½\u000eï¿½\u0018\f\u0001ï¿½(ï¿½2\u0004\u0001ï¿½2ï¿½Dï¿½l\\$_ValueT &__v\u0000\u0012\u0012\u0006\u0000\u0000\u0001^4^:ï¿½\u0002\u0004\u0001^\"^:ï¿½1\u0011ï¿½%ï¿½/ï¿½\u0006\u0000\u0000\u0001gFgL\u0004\u0001ï¿½8}^ï¿½Cï¿½Elong __l\u0000\n\n\u0006\u0000\u0000\u0001ï¿½\u0018ï¿½\u001e\u0002\u0001ï¿½\u000eï¿½\u001eï¿½\r\u0006\u0000\u0000\u0004ï¿½Pï¿½V\u0004\u0001ï¿½\u0016ï¿½\u001c\f\u0001ï¿½ ï¿½&\f\u0001ï¿½\u001cï¿½\"\f\u0001ï¿½\tÑï¿½bï¿½unsigned long long __gcount\u0000&&\u0010unsigned long long __gcount = 0\u0000\u0000\u0001ï¿½y\u00014ï¿½y\u0001D\u0002\u0001ï¿½y\u0001\u000eï¿½y\u0001Lï¿½\r\u0006\u0000\u0000\u0003ï¿½\u0001\fï¿½\u0001\u001c\u001c\u0001ï¿½\u0001\u0016ï¿½\u0001&\f\u0001ï¿½\u0001\u001cï¿½\u0001,\f\u0001ï¿½E\u0000]ï¿½eB{std::basic_istream::__streambuf_type *__sb\u0000LL\bstd::basic_istream::__streambuf_type *__sb = this->rdbuf()\u0000\u0000\u0001ï¿½\u001a\u00032ï¿½\u001a\u0003:\u0002\u0001ï¿½\u001a\u0003\u000eï¿½\u001a\u0003Zï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0002ï¿½\u001b\u0003\u0018ï¿½\u001b\u0003 \u0004\u0001ï¿½\u001c\u0003@ï¿½\u001c\u0003H\u0004\u0001ï¿½Hï¿½6/?ï¿½,const std::basic_istream::int_type __cb\u0000FF\bconst std::basic_istream::int_type __cb = this->rdbuf()->sbumpc()\u0000\u0000\u0001ï¿½ \u0001,ï¿½ \u00014\u0002\u0001ï¿½ \u0001\u000eï¿½ \u0001hï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0002ï¿½\"\u0001Jï¿½\"\u0001R\u0004\u0001ï¿½%\u0001Hï¿½%\u0001P\u0004\u0001ï¿½\u0012Hï¿½Xï¿½\u0000ï¿½std::basic_istream::char_type &__c\u0000>>\u0006\u0000\u0000\u0001ï¿½\u0017\u0001&ï¿½\u0017\u0001,ï¿½\u0002\u0004\u0001ï¿½\u0017\u0001\u0010ï¿½\u0017\u0001,ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½%\u0001\bï¿½%\u0001\u000e\u0014\u0001ï¿½|G\nï¿½\u0003_yconst std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½*ï¿½4\u0002\u0001ï¿½\fï¿½^ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0002ï¿½*ï¿½4\u0004\u0001ï¿½\u0000\u0001Tï¿½\u0000\u0001^\u0004\u0001ï¿½\u0018ï¿½)Wstatic const _Value __gnu_cxx::__numeric_traits_integer::__min\u0000(r\nstatic const _Value __gnu_cxx::__numeric_traits_integer::__min = __is_signed ? -__max - 1 : (_Value)0\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0006ï¿½jï¿½t\f\u0001ï¿½\\ï¿½f\f\u0001ï¿½fï¿½p\f\u0001ï¿½Xï¿½b\f\u0001ï¿½\u001c\u0002Xï¿½\u001c\u0002b\f\u0001ï¿½^\u0002Xï¿½^\u0002b\f\u0001ï¿½\u0010\u001c^\nï¿½O\u0001ï¿½long __l\u0000\n\n\u0006\u0000\u0000\u0001ï¿½\u0018ï¿½\u001e\u0002\u0001ï¿½\u000eï¿½\u001eï¿½\r\u0006\u0000\u0000\u0004ï¿½Pï¿½V\u0004\u0001ï¿½\u0016ï¿½\u001c\f\u0001ï¿½ ï¿½&\f\u0001ï¿½\u0018ï¿½\u001e\f\u0001ï¿½+ï¿½[vÉ·ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001*\u0000*@@\u0001ï¿½3\"Wi\u000eï¿½basic_istream<_CharT, _Traits> &__in\u0000@@\b\u0000\u0000\u0001.V.^ï¿½\u0002\u0004\u0001.\u0016.^ï¿½1lï¿½Jï¿½\t\u0000\u0000\n1\u00141\u001c\u0004\u00014\u00124\u001a\u0004\u00015\u000e5\u0016\u0004\u0001666>\u0004\u0001969>\u0004\u0001<V<^\u0004\u0001K\nK\u0012\u0004\u0001O\nO\u0012\u0004\u0001Q\u0014Q\u001c\u0004\u0001V\u0006V\u000e\u0004\u0001ï¿½\u0013ï¿½;Pï¿½+ï¿½static const std::ios_base::iostate std::ios_base::failbit\u0000Hf\u000estatic const std::ios_base::iostate std::ios_base::failbit = _S_failbit\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0014U,U:\f\u0001ï¿½.ï¿½<\f\u0001ï¿½.ï¿½<\f\u0001ï¿½.ï¿½<\f\u0001ï¿½.ï¿½<\f\u0001ï¿½*ï¿½8\f\u0001ï¿½Fï¿½T\u0004\u0001ï¿½Fï¿½T\u0004\u0001ï¿½(ï¿½6\f\u0001ï¿½\u000e\u0001(ï¿½\u000e\u00016\f\u0001ï¿½3\u0001(ï¿½3\u00016\f\u0001ï¿½b\u0001(ï¿½b\u00016\f\u0001ï¿½\u0001(ï¿½\u00016\f\u0001ï¿½\u0001Nï¿½\u0001\\\f\u0001ï¿½\u00016ï¿½\u0001D\f\u0001ï¿½\u0002Rï¿½\u0002`\f\u0001ï¿½\u00032ï¿½\u0003@\f\u0001ï¿½\u00032ï¿½\u0003@\f\u0001ï¿½\u0003Rï¿½\u0003`\f\u0001ï¿½\u0014\u0004(ï¿½\u0014\u00046\f\u0001ï¿½-ï¿½yZios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½0ï¿½:\u0002\u0001ï¿½\fï¿½bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0005ï¿½\u0004ï¿½\u000e\u001c\u0001ï¿½\u0004ï¿½\u000e\u001c\u0001ï¿½\u0002ï¿½\f\u001c\u0001ï¿½\u0014ï¿½\u001e\f\u0001ï¿½ ï¿½*\u0004\u0001ï¿½ï¿½ ï¿½\u0014ï¿½q_ISTREAM_TCC\u0000\u0000\u0000\u0018#define _ISTREAM_TCC 1\u0000\u0000\u0001\"\u0010\"(\u0002\u0001\"\u0010\",\u0000ï¿½\u0001\u0000\u0000\u0000ï¿½Pï¿½/;|ï¿½\u000fconst std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½F\u0001,ï¿½F\u00016\u0002\u0001ï¿½F\u0001\u000eï¿½F\u0001`ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0002ï¿½K\u0001Rï¿½K\u0001\\\u0004\u0001ï¿½R\u0001Rï¿½R\u0001\\\u0004\u0001ï¿½\bWï¿½s\u0014ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00024\u0002\u0001ï¿½\u0002\u0006ï¿½\u0002\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u0002\u0004ï¿½\u0002\u000e\u001c\u0001ï¿½\u0002\u000eï¿½\u0002\u0018\f\u0001ï¿½\u0002(ï¿½\u00022\u0004\u0001ï¿½\u001fï¿½\u0014ï¿½%7:ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018L\nL8@\u0001l\u0004l2@\u0001ï¿½\u000eï¿½<@\u0001ï¿½\u000eï¿½<@\u0001ï¿½\u000eï¿½<@\u0001ï¿½\b\u0001\u000eï¿½\b\u0001<@\u0001ï¿½-\u0001\u000eï¿½-\u0001<@\u0001ï¿½X\u0001\u000eï¿½X\u0001<@\u0001ï¿½\u0001\u000eï¿½\u0001<@\u0001ï¿½\u0001\u000eï¿½\u0001<@\u0001ï¿½\u0001\u000eï¿½\u0001<@\u0001ï¿½4\u0002\u000eï¿½4\u0002<@\u0001ï¿½\u0002\u000eï¿½\u0002<@\u0001ï¿½\u0002\u000eï¿½\u0002<@\u0001ï¿½\u0002\u000eï¿½\u0002<@\u0001ï¿½\u0002\u000eï¿½\u0002<@\u0001ï¿½\u0002\u000eï¿½\u0002<@\u0001ï¿½\"\u0003\u000eï¿½\"\u0003<@\u0001ï¿½F\u0003\u000eï¿½F\u0003<@\u0001ï¿½d\u0003\u000eï¿½d\u0003<@\u0001ï¿½\u0003\u000eï¿½\u0003<@\u0001ï¿½\u0003\u000eï¿½\u0003<@\u0001ï¿½\u0003\u000eï¿½\u0003<@\u0001ï¿½\u000e\u0004\u000eï¿½\u000e\u0004<@\u0001ï¿½>ï¿½wï¿½\rï¿½std::basic_istream::__streambuf_type *__this_sb\u0000LL\u0012std::basic_istream::__streambuf_type *__this_sb = this->rdbuf()\u0000\u0000\u0001ï¿½v\u00012ï¿½v\u0001D\u0002\u0001ï¿½v\u0001\u000eï¿½v\u0001dï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0002ï¿½w\u0001,ï¿½w\u0001>\u0004\u0001ï¿½\u0001\u0014ï¿½\u0001&\u0004\u0001ï¿½ä©¯=ï¿½std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½o\u0001\u001aï¿½o\u0001&\u0002\u0001ï¿½o\u0001\fï¿½o\u0001@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½p\u0001\u0014ï¿½p\u0001 \u0004\u0001ï¿½\u000ehT\u0000ï¿½bool __noskip\u0000\n\n\u0010\u0000\u0000\u0001.l.|ï¿½\u0002\u0004\u0001.b.|ï¿½\t\u0000\u0000\u00016\u00146$\f\u0001ï¿½Ëï¿½xï¿½\f\u0015ï¿½std::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½\u00020ï¿½\u00026ï¿½\u0002\u0004\u0001ï¿½\u0002\u001aï¿½\u00026ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½\u0002Fï¿½\u0002L\u0004\u0001ï¿½GUH\u001d]ï¿½\u0012std::basic_istream::sentry::__int_type __c\u0000NN\u0006std::basic_istream::sentry::__int_type __c = __sb->sgetc()\u0000\u0000\u0001:\u001a: \u0002\u0001:\u0004:@ï¿½RO9ï¿½WÝ¶\r\t\u0000\u0000\u0004=F=L\u0004\u0001?@?F\u0004\u0001@\b@\u000e\u0014\u0001E>ED\u0004\u0001ï¿½Txï¿½é¯ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00182\u00022\f@\u0001d\nd\u0014@\u0001ï¿½\u0006ï¿½\u0010@\u0001ï¿½\u0006ï¿½\u0010@\u0001ï¿½\u0006ï¿½\u0010@\u0001ï¿½\u0006ï¿½\u0010@\u0001ï¿½\u001e\u0001\u0006ï¿½\u001e\u0001\u0010@\u0001ï¿½C\u0001\u0006ï¿½C\u0001\u0010@\u0001ï¿½r\u0001\u0006ï¿½r\u0001\u0010@\u0001ï¿½\u0001\u0014ï¿½\u0001\u001e@\u0001ï¿½\u0001\u0006ï¿½\u0001\u0010@\u0001ï¿½\u0002\u0002\u0014ï¿½\u0002\u0002\u001e@\u0001ï¿½H\u0002\u0014ï¿½H\u0002\u001e@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0010@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0010@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0010@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0010@\u0001ï¿½\u0017\u0003\u0006ï¿½\u0017\u0003\u0010@\u0001ï¿½8\u0003\u0006ï¿½8\u0003\u0010@\u0001ï¿½[\u0003\u0006ï¿½[\u0003\u0010@\u0001ï¿½y\u0003\u0006ï¿½y\u0003\u0010@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0010@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0010@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0010@\u0001ï¿½\u0012J=Eî¼static const std::ios_base::fmtflags std::ios_base::skipws\u0000Jh\fstatic const std::ios_base::fmtflags std::ios_base::skipws = _S_skipws\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u00016h6t\u0004\u0001ï¿½}ï¿½>ï¿½oQstd::basic_istream::__streambuf_type *__sb\u0000LL\bstd::basic_istream::__streambuf_type *__sb = this->rdbuf()\u0000\u0000\u0001ï¿½G\u00012ï¿½G\u0001:\u0002\u0001ï¿½G\u0001\u000eï¿½G\u0001Zï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0002ï¿½H\u0001,ï¿½H\u00014\u0004\u0001ï¿½P\u0001\u0014ï¿½P\u0001\u001c\u0004\u0001ï¿½2[ï¿½Èconst std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½\u0001,ï¿½\u00016\u0002\u0001ï¿½\u0001\u000eï¿½\u0001`ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0001ï¿½\u0001hï¿½\u0001r\u0004\u0001ï¿½\u0018ï¿½\\ï¿½static const std::ctype_base::mask std::ctype_base::space\u0000Fh\nstatic const std::ctype_base::mask std::ctype_base::space = _ISspace\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0003>@>J\u0004\u0001ï¿½\u0003>ï¿½\u0003H\u0004\u0001ï¿½)\u0004:ï¿½)\u0004D\u0004\u0001ï¿½\bï¿½#\u0001std::basic_istream::int_type __c\u0000::\u0006std::basic_istream::int_type __c = __sb->sgetc()\u0000\u0000\u0001ï¿½H\u0001 ï¿½H\u0001&\u0002\u0001ï¿½H\u0001\u000eï¿½H\u0001Fï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0005ï¿½K\u0001Hï¿½K\u0001N\u0004\u0001ï¿½L\u0001Hï¿½L\u0001N\u0004\u0001ï¿½N\u0001Nï¿½N\u0001T\u0004\u0001ï¿½P\u0001\bï¿½P\u0001\u000e\u0014\u0001ï¿½R\u0001Hï¿½R\u0001N\u0004\u0001ï¿½Jï¿½dios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00024\u0002\u0001ï¿½\u0002\u0006ï¿½\u0002\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u0002\u0004ï¿½\u0002\u000e\u001c\u0001ï¿½\u0003\u0003\u000eï¿½\u0003\u0003\u0018\f\u0001ï¿½\u0004\u0003(ï¿½\u0004\u00032\u0004\u0001ï¿½\u001dï¿½n{\rï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000I\u0002I\u0010@\u0001N\u0002N\u0010@\u0001i\ni\u0018@\u0001n\nn\u0018@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0005\u0001\u0006ï¿½\u0005\u0001\u0014@\u0001ï¿½\n\u0001\u0006ï¿½\n\u0001\u0014@\u0001ï¿½*\u0001\u0006ï¿½*\u0001\u0014@\u0001ï¿½/\u0001\u0006ï¿½/\u0001\u0014@\u0001ï¿½U\u0001\u0006ï¿½U\u0001\u0014@\u0001ï¿½Z\u0001\u0006ï¿½Z\u0001\u0014@\u0001ï¿½\u0001\u0006ï¿½\u0001\u0014@\u0001ï¿½\u0001\u0006ï¿½\u0001\u0014@\u0001ï¿½\u0001\u0006ï¿½\u0001\u0014@\u0001ï¿½\u0001\u0014ï¿½\u0001\"@\u0001ï¿½\u0001\u0006ï¿½\u0001\u0014@\u0001ï¿½\u0001\u0006ï¿½\u0001\u0014@\u0001ï¿½1\u0002\u0006ï¿½1\u0002\u0014@\u0001ï¿½6\u0002\u0014ï¿½6\u0002\"@\u0001ï¿½~\u0002\u0006ï¿½~\u0002\u0014@\u0001ï¿½\u0002\u0014ï¿½\u0002\"@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0014@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0014@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0014@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0014@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0014@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0014@\u0001ï¿½\u0002\u0006ï¿½\u0002\u0014@\u0001ï¿½\u0001\u0003\u0006ï¿½\u0001\u0003\u0014@\u0001ï¿½\u001f\u0003\u0006ï¿½\u001f\u0003\u0014@\u0001ï¿½$\u0003\u0006ï¿½$\u0003\u0014@\u0001ï¿½C\u0003\u0006ï¿½C\u0003\u0014@\u0001ï¿½H\u0003\u0006ï¿½H\u0003\u0014@\u0001ï¿½a\u0003\u0006ï¿½a\u0003\u0014@\u0001ï¿½f\u0003\u0006ï¿½f\u0003\u0014@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0014@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0014@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0014@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0014@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0014@\u0001ï¿½\u0003\u0006ï¿½\u0003\u0014@\u0001ï¿½\u000b\u0004\u0006ï¿½\u000b\u0004\u0014@\u0001ï¿½\u0010\u0004\u0006ï¿½\u0010\u0004\u0014@\u0001ï¿½\u001aï¿½rï¿½\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½3\u0004\bï¿½3\u00048@\u0001ï¿½\u0006ï¿½}ï¿½ÖX__streambuf_type *__sb\u0000$$\b__streambuf_type *__sb = __in.rdbuf()\u0000\u0000\u0001ï¿½\u00032ï¿½\u0003:\u0002\u0001ï¿½\u0003\u000eï¿½\u0003Xï¿½#ï¿½Fm\u0012\f$ï¿½\r\f\u0000\u0000\u0002ï¿½\u0003,ï¿½\u00034\u0004\u0001ï¿½\u0003\u0014ï¿½\u0003\u001c\u0004\u0001ï¿½\u0010ï¿½Eï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001(\u001c(B@\u0001ï¿½2|ï¿½\u001bZtï¿½std::basic_istream::sentry::__streambuf_type *__sb\u0000\\\\\bstd::basic_istream::sentry::__streambuf_type *__sb = __in.rdbuf()\u0000\u0000\u00019(90\u0002\u00019\u00049Nï¿½Tï¿½)A\"y\u001e\r\t\u0000\u0000\u0002:&:.\u0004\u0001@\u0014@\u001c\u0004\u0001ï¿½\u001eï¿½hï¿½Ü¨ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001000:\u0002\u00010\f0bï¿½\u0011\fBï¿½%\r\t\u0000\u0000\u0004F\bF\u0012\u001c\u0001Q2Q<\f\u0001U\u0006U\u0010\u001c\u0001V\"V,\u0004\u0001ï¿½Æ¶ï¿½f\u0012\u0003ï¿½std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, false)\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\n118. basic_istream uses nonexistent num_get member functions.\u0000\u0001}\u001a}&\u0002\u0001}\f}Bï¿½5ï¿½_\r\u0006\u0000\u0000\u0001~\u0014~ \u0004\u0001ï¿½Z\u0005f|ï¿½\u001cï¿½\u001bconst std::basic_istream::sentry::__ctype_type &__ct\u0000``\bconst std::basic_istream::sentry::__ctype_type &__ct = __check_facet(__in._M_ctype)\u0000\u0000\u0001<,<4\u0002\u0001<\u0004<rï¿½,kCï¿½Ï¯ï¿½e\r\t\u0000\u0000\u0001>\u0018> \u0004\u0001ï¿½.ï¿½\tï¿½\u0015gï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0001\u00028ï¿½\u0001\u0002B\u0002\u0001ï¿½\u0001\u0002\u0014ï¿½\u0001\u0002jï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0004ï¿½)\u0002\fï¿½)\u0002\u0016\u001c\u0001ï¿½.\u0002\fï¿½.\u0002\u0016\u001c\u0001ï¿½8\u0002\u001cï¿½8\u0002&\f\u0001ï¿½9\u00026ï¿½9\u0002@\u0004\u0001ï¿½yK?Þï¿½,ï¿½int_type __c\u0000\u0012\u0012\u0006int_type __c = __sb->sgetc()\u0000\u0000\u0001ï¿½\u0003 ï¿½\u0003&\u0002\u0001ï¿½\u0003\u000eï¿½\u0003Fï¿½q\">ï¿½98ï¿½\r\f\u0000\u0000\u0005ï¿½\u0003@ï¿½\u0003F\u0004\u0001ï¿½\u00036ï¿½\u0003<\u0004\u0001ï¿½\u0003Fï¿½\u0003L\u0004\u0001ï¿½\u0003\bï¿½\u0003\u000e\u0014\u0001ï¿½\u0003\u00048ï¿½\u0003\u0004>\u0004\u0001ï¿½yï¿½\u001eï¿½-short &__n\u0000\u000e\u000e\u0006\u0000\u0000\u0001y,y2ï¿½\u0002\u0004\u0001y\u001ey2\u0000ï¿½\u0006\u0000\u0000\u0003ï¿½\bï¿½\u000e\u0014\u0001ï¿½\bï¿½\u000e\u0014\u0001ï¿½\u0004ï¿½\n\u0014\u0001ï¿½\f\u0015ï¿½?ï¿½ @ï¿½std::streamsize std::basic_istream::_M_gcount\u0000 H\u0012\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000-ï¿½\fï¿½\u001e\u0014\u0001ï¿½\u0001\u0001\u0004ï¿½\u0001\u0001\u0016\u0014\u0001ï¿½\r\u0001\u0016ï¿½\r\u0001(\f\u0001ï¿½\u0019\u0001\fï¿½\u0019\u0001\u001e\u0014\u0001ï¿½$\u0001\bï¿½$\u0001\u001a\u0014\u0001ï¿½2\u0001\u0016ï¿½2\u0001(\f\u0001ï¿½>\u0001\fï¿½>\u0001\u001e\u0014\u0001ï¿½J\u0001\u001cï¿½J\u0001.\f\u0001ï¿½O\u0001\fï¿½O\u0001\u001e\u001c\u0001ï¿½a\u0001\u0016ï¿½a\u0001(\f\u0001ï¿½m\u0001\fï¿½m\u0001\u001e\u0014\u0001ï¿½\u0001\u0004ï¿½\u0001\u0016\u0014\u0001ï¿½\u0001\u0004ï¿½\u0001\u0016\u0014\u0001ï¿½\u0001\u0016ï¿½\u0001(\f\u0001ï¿½\u0001\fï¿½\u0001\u001e\u0014\u0001ï¿½\u0001*ï¿½\u0001<\f\u0001ï¿½\u0001(ï¿½\u0001:\u001c\u0001ï¿½\u00010ï¿½\u0001B\u001c\u0001ï¿½\u0001\u0016ï¿½\u0001(\f\u0001ï¿½\u0001\fï¿½\u0001\u001e\u0014\u0001ï¿½\u0001\u0004ï¿½\u0001\u0016\u0014\u0001ï¿½\u0001\fï¿½\u0001\u001e\u0014\u0001ï¿½\u0012\u0002\u0016ï¿½\u0012\u0002(\f\u0001ï¿½\u0015\u0002\u0014ï¿½\u0015\u0002&\u001c\u0001ï¿½\u001b\u0002\u0010ï¿½\u001b\u0002\"\u0014\u0001ï¿½&\u0002\fï¿½&\u0002\u001e\u0014\u0001ï¿½+\u0002 ï¿½+\u00022\f\u0001ï¿½C\u0002\fï¿½C\u0002\u001e\u0014\u0001ï¿½R\u0002\u0016ï¿½R\u0002(\f\u0001ï¿½V\u0002\u0014ï¿½V\u0002&\u001c\u0001ï¿½]\u0002\u0010ï¿½]\u0002\"\u0014\u0001ï¿½h\u0002\fï¿½h\u0002\u001e\u0014\u0001ï¿½n\u0002\u0018ï¿½n\u0002*\f\u0001ï¿½o\u0002\nï¿½o\u0002\u001c\u001c\u0001ï¿½s\u0002 ï¿½s\u00022\f\u0001ï¿½y\u0002\u0014ï¿½y\u0002&\u001c\u0001ï¿½\u0002\fï¿½\u0002\u001e\u0014\u0001ï¿½\u0002\fï¿½\u0002\u001e\u0014\u0001ï¿½\u0002\u000eï¿½\u0002 \u0014\u0001ï¿½\u0002\u0016ï¿½\u0002(\f\u0001ï¿½\u0002\fï¿½\u0002\u001e\u0014\u0001ï¿½\u0002\u0004ï¿½\u0002\u0016\u0014\u0001ï¿½\u0002\u001aï¿½\u0002,\f\u0001ï¿½\u0002\fï¿½\u0002\u001e\u0014\u0001ï¿½\u0010\u0003\fï¿½\u0010\u0003\u001e\u0014\u0001ï¿½Yï¿½Q3Kmï¿½std::basic_istream::char_type __delim\u0000<<\u000e\u0000\u0000\u0001ï¿½<\u0001dï¿½<\u0001rï¿½\u0002\u0004\u0001ï¿½<\u0001Pï¿½<\u0001rï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½E\u0001tï¿½E\u0001ï¿½\u0004\u0001ï¿½\u0006ï¿½Jstatic const std::ios_base::seekdir std::ios_base::cur\u0000Hf\u0006static const std::ios_base::seekdir std::ios_base::cur = _S_cur\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0001ï¿½^\u0003bï¿½^\u0003h\u0004\u0001ï¿½\u0012ï¿½-e\nï¿½\nstd::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½A\u0002,ï¿½A\u00022ï¿½\u0002\u0004\u0001ï¿½A\u0002\u0016ï¿½A\u00022ï¿½\u0006\u0000\u0000\u0006ï¿½E\u0002(ï¿½E\u0002.\f\u0001ï¿½R\u0002.ï¿½R\u00024\f\u0001ï¿½Y\u0002\u0010ï¿½Y\u0002\u0016\f\u0001ï¿½e\u0002\u0016ï¿½e\u0002\u001c\f\u0001ï¿½n\u00022ï¿½n\u00028\f\u0001ï¿½s\u00028ï¿½s\u0002>\f\u0001ï¿½\u001fÝF/ï¿½\u001fios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001c.c8\u0002\u0001c\nc`ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003g8gB\u0004\u0001p\u0012p\u001c\f\u0001q,q6\u0004\u0001ï¿½czÙ¥r\u0013#cstd::basic_istream::__streambuf_type *__sb\u0000LL\bstd::basic_istream::__streambuf_type *__sb = this->rdbuf()\u0000\u0000\u0001ï¿½\u00022ï¿½\u0002:\u0002\u0001ï¿½\u0002\u000eï¿½\u0002Zï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0002ï¿½\u0002\u0018ï¿½\u0002 \u0004\u0001ï¿½\u0002@ï¿½\u0002H\u0004\u0001ï¿½5ï¿½%+ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½*ï¿½4\u0002\u0001ï¿½\u0006ï¿½\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0005ï¿½Bï¿½L\u0004\u0001ï¿½\bï¿½\u0012\u001c\u0001ï¿½\bï¿½\u0012\u001c\u0001ï¿½\u000eï¿½\u0018\f\u0001ï¿½(ï¿½2\u0004\u0001ï¿½×£ï¿½\u0005static const std::ios_base::iostate std::ios_base::eofbit\u0000Hf\fstatic const std::ios_base::iostate std::ios_base::eofbit = _S_eofbit\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0016F.F:\f\u0001ï¿½*ï¿½6\f\u0001ï¿½\u0003\u0001*ï¿½\u0003\u00016\f\u0001ï¿½(\u0001*ï¿½(\u00016\f\u0001ï¿½S\u0001*ï¿½S\u00016\f\u0001ï¿½\u0001*ï¿½\u00016\f\u0001ï¿½\u0001Fï¿½\u0001R\f\u0001ï¿½\u0001*ï¿½\u00016\f\u0001ï¿½)\u00022ï¿½)\u0002>\f\u0001ï¿½.\u00022ï¿½.\u0002>\f\u0001ï¿½k\u00022ï¿½k\u0002>\f\u0001ï¿½v\u00022ï¿½v\u0002>\f\u0001ï¿½\u0002*ï¿½\u00026\f\u0001ï¿½\u0002,ï¿½\u00028\f\u0001ï¿½\u0002*ï¿½\u00026\f\u0001ï¿½\u0002^ï¿½\u0002j\f\u0001ï¿½\u0012\u0003^ï¿½\u0012\u0003j\f\u0001ï¿½t\u0003^ï¿½t\u0003j\f\u0001ï¿½\u0003^ï¿½\u0003j\f\u0001ï¿½\u0003,ï¿½\u00038\f\u0001ï¿½\u0004\u0004*ï¿½\u0004\u00046\f\u0001ï¿½-\u00044ï¿½-\u0004@\u0004\u0001ï¿½\u0007Dp\u0013ï¿½Zstd::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001&\u0002\u0001ï¿½\u0001\fï¿½\u0001@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0001\u0014ï¿½\u0001 \u0004\u0001ï¿½8*ï¿½X1ï¿½std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002&\u0002\u0001ï¿½\u0002\fï¿½\u0002@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0002\u0014ï¿½\u0002 \u0004\u0001ï¿½eï¿½\bï¿½static const std::ios_base::iostate std::ios_base::badbit\u0000Hf\fstatic const std::ios_base::iostate std::ios_base::badbit = _S_badbit\u0000\u0000\u0000\u0000\b\u0000\u0002\u00001K@KL\u0004\u0001O@OL\u0004\u0001k<kH\u0004\u0001oJoV\u0004\u0001ï¿½Fï¿½R\u0004\u0001ï¿½Fï¿½R\u0004\u0001ï¿½Fï¿½R\u0004\u0001ï¿½Fï¿½R\u0004\u0001ï¿½\u0007\u0001Fï¿½\u0007\u0001R\u0004\u0001ï¿½\u000b\u0001Fï¿½\u000b\u0001R\u0004\u0001ï¿½,\u0001Fï¿½,\u0001R\u0004\u0001ï¿½0\u0001Fï¿½0\u0001R\u0004\u0001ï¿½W\u0001Fï¿½W\u0001R\u0004\u0001ï¿½[\u0001Fï¿½[\u0001R\u0004\u0001ï¿½\u0001Fï¿½\u0001R\u0004\u0001ï¿½\u0001Fï¿½\u0001R\u0004\u0001ï¿½\u0001Fï¿½\u0001R\u0004\u0001ï¿½\u0001Tï¿½\u0001`\u0004\u0001ï¿½\u0001Fï¿½\u0001R\u0004\u0001ï¿½\u0001Fï¿½\u0001R\u0004\u0001ï¿½3\u0002Fï¿½3\u0002R\u0004\u0001ï¿½7\u0002Tï¿½7\u0002`\u0004\u0001ï¿½\u0002Fï¿½\u0002R\u0004\u0001ï¿½\u0002Tï¿½\u0002`\u0004\u0001ï¿½\u0002Fï¿½\u0002R\u0004\u0001ï¿½\u0002Fï¿½\u0002R\u0004\u0001ï¿½\u0002Fï¿½\u0002R\u0004\u0001ï¿½\u0002Fï¿½\u0002R\u0004\u0001ï¿½\u0002Fï¿½\u0002R\u0004\u0001ï¿½\u0002Fï¿½\u0002R\u0004\u0001ï¿½\u0002*ï¿½\u00026\f\u0001ï¿½\u0002Fï¿½\u0002R\u0004\u0001ï¿½\u0002\u0003Fï¿½\u0002\u0003R\u0004\u0001ï¿½\u001d\u0003*ï¿½\u001d\u00036\f\u0001ï¿½!\u0003Fï¿½!\u0003R\u0004\u0001ï¿½%\u0003Fï¿½%\u0003R\u0004\u0001ï¿½>\u00032ï¿½>\u0003>\f\u0001ï¿½E\u0003Fï¿½E\u0003R\u0004\u0001ï¿½I\u0003Fï¿½I\u0003R\u0004\u0001ï¿½c\u0003Fï¿½c\u0003R\u0004\u0001ï¿½g\u0003Fï¿½g\u0003R\u0004\u0001ï¿½\u0003Fï¿½\u0003R\u0004\u0001ï¿½\u0003Fï¿½\u0003R\u0004\u0001ï¿½\u0003Fï¿½\u0003R\u0004\u0001ï¿½\u0003Fï¿½\u0003R\u0004\u0001ï¿½\u0003Dï¿½\u0003P\u0004\u0001ï¿½\u0003Dï¿½\u0003P\u0004\u0001ï¿½\r\u0004Dï¿½\r\u0004P\u0004\u0001ï¿½\u0011\u0004Dï¿½\u0011\u0004P\u0004\u0001ï¿½h3&z]*const std::basic_istream::sentry::__int_type __eof\u0000ZZ\nconst std::basic_istream::sentry::__int_type __eof = traits_type::eof()\u0000\u0000\u00018&80\u0002\u00018\u00048Zï¿½RO9ï¿½WÝ¶\r\t\u0000\u0000\u0002=P=Z\u0004\u0001EHER\u0004\u0001ï¿½{5ï¿½>\u0000]0tbool std::basic_istream::sentry::_M_ok\u0000\nB\n\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002.ï¿½.ï¿½\u0014\u0001R\u0002R\f\u0014\u0001ï¿½?wxstd::basic_istream::int_type __delim\u0000::\u000e\u0000\u0000\u0001ï¿½A\u0002Hï¿½A\u0002Vï¿½\u0002\u0004\u0001ï¿½A\u00026ï¿½A\u0002Vï¿½fï¿½\u00154Mï¿½\u0006\u0000\u0000\u0002ï¿½T\u0002Lï¿½T\u0002Z\u0004\u0001ï¿½[\u0002Tï¿½[\u0002b\u0004\u0001ï¿½-\u000bï¿½65ï¿½std::basic_istream::char_type __delim\u0000<<\u000e\u0000\u0000\u0001ï¿½k\u0001Tï¿½k\u0001bï¿½\u0002\u0004\u0001ï¿½k\u0001@ï¿½k\u0001bï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½t\u0001tï¿½t\u0001ï¿½\u0004\u0001ï¿½^\u0011ï¿½|Yï¿½|const std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½J\u0002:ï¿½J\u0002D\u0002\u0001ï¿½J\u0002\u001cï¿½J\u0002nï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0004ï¿½S\u0002Lï¿½S\u0002V\u0004\u0001ï¿½Z\u0002Tï¿½Z\u0002^\u0004\u0001ï¿½j\u0002Lï¿½j\u0002V\u0004\u0001ï¿½u\u0002Lï¿½u\u0002V\u0004\u0001ï¿½\u0000kï¿½\u0012\u001bï¿½typename __istream_type::sentry __cerb\u0000@@\ftypename __istream_type::sentry __cerb = (__in, false)\u0000\u0000\u0001ï¿½\u0003Lï¿½\u0003X\u0002\u0001ï¿½\u0003\fï¿½\u0003r\u0000\r\f\u0000\u0000\u0001ï¿½\u0003\u0014ï¿½\u0003 \u0004\u0001ï¿½Mï¿½$ï¿½\u0005~\u0017ï¿½static const std::ios_base::iostate std::ios_base::goodbit\u0000Hf\u000estatic const std::ios_base::iostate std::ios_base::goodbit = _S_goodbit\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u00180T0b\f\u0001QXQf\f\u0001cRc`\f\u0001ï¿½Nï¿½\\\f\u0001ï¿½Nï¿½\\\f\u0001ï¿½Tï¿½b\f\u0001ï¿½Tï¿½b\f\u0001ï¿½\u001a\u0001Tï¿½\u001a\u0001b\f\u0001ï¿½?\u0001Tï¿½?\u0001b\f\u0001ï¿½n\u0001Tï¿½n\u0001b\f\u0001ï¿½\u0001Tï¿½\u0001b\f\u0001ï¿½\u0001Nï¿½\u0001\\\f\u0001ï¿½\u0001\u0002\\ï¿½\u0001\u0002j\f\u0001ï¿½G\u0002\\ï¿½G\u0002j\f\u0001ï¿½\u0002Nï¿½\u0002\\\f\u0001ï¿½\u0002Nï¿½\u0002\\\f\u0001ï¿½\u0002Nï¿½\u0002\\\f\u0001ï¿½\u0002Nï¿½\u0002\\\f\u0001ï¿½\u0016\u0003Nï¿½\u0016\u0003\\\f\u0001ï¿½7\u0003Nï¿½7\u0003\\\f\u0001ï¿½x\u0003Nï¿½x\u0003\\\f\u0001ï¿½\u0003Nï¿½\u0003\\\f\u0001ï¿½\u0003Nï¿½\u0003\\\f\u0001ï¿½\u0003Tï¿½\u0003b\f\u0001ï¿½\u001c&\u001eï¿½bï¿½|const std::basic_istream::int_type __idelim\u0000FF\u0010const std::basic_istream::int_type __idelim = traits_type::to_int_type(__delim)\u0000\u0000\u0001ï¿½t\u0001,ï¿½t\u0001<\u0002\u0001ï¿½t\u0001\u000eï¿½t\u0001ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0001ï¿½|\u0001Rï¿½|\u0001b\u0004\u0001ï¿½WPï¿½\u0011ï¿½/ï¿½std::basic_istream::int_type __c\u0000::\u0006std::basic_istream::int_type __c = __this_sb->sgetc()\u0000\u0000\u0001ï¿½w\u0001 ï¿½w\u0001&\u0002\u0001ï¿½w\u0001\u000eï¿½w\u0001Pï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0006ï¿½x\u0001dï¿½x\u0001j\u0004\u0001ï¿½{\u0001Pï¿½{\u0001V\u0004\u0001ï¿½|\u0001Hï¿½|\u0001N\u0004\u0001ï¿½\u0001\bï¿½\u0001\u000e\u0014\u0001ï¿½\u0001Jï¿½\u0001P\u0004\u0001ï¿½\u0001Hï¿½\u0001N\u0004\u0001ï¿½Vï¿½eT\u001bï¿½std::basic_istream::char_type __c2\u0000<<\bstd::basic_istream::char_type __c2 = traits_type::to_char_type(__c)\u0000\u0000\u0001ï¿½x\u0001\"ï¿½x\u0001*\u0002\u0001ï¿½x\u0001\u000eï¿½x\u0001lï¿½Rï¿½8ï¿½ ï¿½\r\u0006\u0000\u0000\u0002ï¿½}\u0001^ï¿½}\u0001f\u0004\u0001ï¿½\u0001\bï¿½\u0001\u0010\u0014\u0001ï¿½bHï¿½M:ï¿½\u0011zconst __ctype_type &__ct\u0000((\bconst __ctype_type &__ct = use_facet<__ctype_type>(__in.getloc())\u0000\u0000\u0001ï¿½\u00036ï¿½\u0003>\u0002\u0001ï¿½\u0003\u000eï¿½\u0003ï¿½#/ï¿½\u0000\r\f\u0000\u0000\u0001ï¿½\u0003\u0016ï¿½\u0003\u001e\u0004\u0001ï¿½%<ï¿½\u0014\fQJstd::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½\u0001.ï¿½\u00014ï¿½\u0002\u0004\u0001ï¿½\u0001\u0018ï¿½\u00014ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0002ï¿½\u0001&ï¿½\u0001,\u001c\u0001ï¿½\u0001\u0004ï¿½\u0001\n\u0004\u0001ï¿½Dï¿½xdï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Nï¿½\u0001Tï¿½\u0002\u0004\u0001ï¿½\u00018ï¿½\u0001Tï¿½\u0006\u0000\u0000\u0002ï¿½\u0001Jï¿½\u0001P\f\u0001ï¿½\u0001\u0014ï¿½\u0001\u001a\f\u0001ï¿½\u0019Rï¿½\u0019ï¿½$ï¿½std::basic_istream::char_type __delim\u0000<<\u000e\u0000\u0000\u0001ï¿½\u0001lï¿½\u0001zï¿½\u0002\u0004\u0001ï¿½\u0001Xï¿½\u0001zï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½\u0001ï¿½\u0001ï¿½\u0004\u0001ï¿½x~ï¿½!bool __large_ignore\u0000\n\n\u001cbool __large_ignore = false\u0000N.B. On LFS-enabled platforms streamsize is still 32 bits\nwide: if we want to implement the standard mandated behavior\nfor n == max() (see 27.6.1.3/24) we are at risk of signed\ninteger overflow: thus these contortions. Also note that,\nby definition, when more than 2G chars are actually ignored,\n_M_gcount (the return value of gcount, that is) cannot be\nreally correct, being unavoidably too small.\u0000\u0001ï¿½\u000f\u0002\u0018ï¿½\u000f\u00024\u0002\u0001ï¿½\u000f\u0002\u000eï¿½\u000f\u0002Dï¿½\r\u0006\u0000\u0000\u0002ï¿½\u001d\u0002\u0010ï¿½\u001d\u0002,\u0014\u0001ï¿½%\u0002\u0010ï¿½%\u0002,\f\u0001ï¿½\\ ï¿½\u0012faï¿½std::basic_istream::int_type __c\u0000::\u0006std::basic_istream::int_type __c = __eof\u0000\u0000\u0001ï¿½\u001eï¿½$\u0002\u0001ï¿½\fï¿½4ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0003ï¿½\u0000\u000eï¿½\u0000\u0014\u0014\u0001ï¿½\u0000\u0001Jï¿½\u0000\u0001P\u0004\u0001ï¿½\u0011\u0001\u001aï¿½\u0011\u0001 \u0004\u0001ï¿½Uï¿½Hï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½b\u0004\u0000ï¿½b\u0004<@\u0001ï¿½Jkyï¿½<^std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001&\u0002\u0001ï¿½\u0001\fï¿½\u0001@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0001\u0014ï¿½\u0001 \u0004\u0001ï¿½eMvÝ¸ï¿½\u0005ï¿½std::basic_istream::pos_type __ret\u0000::\nstd::basic_istream::pos_type __ret = pos_type(-1)\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\nDR60.  Do not change _M_gcount.\u0000\u0001ï¿½W\u0003\u001eï¿½W\u0003(\u0002\u0001ï¿½W\u0003\fï¿½W\u0003Fï¿½\u0013bH*ï¿½,ï¿½\r\u0006\u0000\u0000\u0002ï¿½^\u0003\u0004ï¿½^\u0003\u000e\u0014\u0001ï¿½i\u0003\u001aï¿½i\u0003$\u0004\u0001ï¿½\u001fï¿½Ý­ï¿½2ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½7\u0003*ï¿½7\u00034\u0002\u0001ï¿½7\u0003\u0006ï¿½7\u0003\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½>\u0003\fï¿½>\u0003\u0016\u001c\u0001ï¿½J\u0003\u000eï¿½J\u0003\u0018\f\u0001ï¿½K\u0003(ï¿½K\u00032\u0004\u0001ï¿½Z\nï¿½`ï¿½^bool __ineof\u0000\n\n\u000e\u0000\u0000\u0001ï¿½\u0018ï¿½&\u0002\u0001ï¿½\u000eï¿½&ï¿½\r\u0006\u0000\u0000\u0002ï¿½tÜ\u0004\u0001ï¿½\u0016ï¿½$\f\u0001ï¿½$ï¿½pt\rï¿½gconst std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½\u0001:ï¿½\u0001D\u0002\u0001ï¿½\u0001\u001cï¿½\u0001nï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0002ï¿½\u0001nï¿½\u0001x\u0004\u0001ï¿½\u0001`ï¿½\u0001j\u0004\u0001ï¿½Eï¿½p_\u001cï¿½*std::basic_istream::__streambuf_type *__sb\u0000LL\bstd::basic_istream::__streambuf_type *__sb = this->rdbuf()\u0000\u0000\u0001ï¿½\u0001@ï¿½\u0001H\u0002\u0001ï¿½\u0001\u001cï¿½\u0001hï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0003ï¿½\u0001:ï¿½\u0001B\u0004\u0001ï¿½\u00010ï¿½\u00018\u0004\u0001ï¿½\u0001,ï¿½\u00014\u0004\u0001ï¿½P\u0006ï¿½\u0002\u0014ï¿½\u001estd::basic_istream::int_type __c\u0000::\u0006std::basic_istream::int_type __c = __sb->sgetc()\u0000\u0000\u0001ï¿½\u0001.ï¿½\u00014\u0002\u0001ï¿½\u0001\u001cï¿½\u0001Tï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0006ï¿½\u0001dï¿½\u0001j\u0004\u0001ï¿½\u0001dï¿½\u0001j\u0004\u0001ï¿½\u0001jï¿½\u0001p\u0004\u0001ï¿½\u0001$ï¿½\u0001*\u0014\u0001ï¿½\u0001Vï¿½\u0001\\\u0004\u0001ï¿½\u0001^ï¿½\u0001d\u0004\u0001ï¿½Mï¿½Cyï¿½Cï¿½$ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00024\u0002\u0001ï¿½\u0002\u0006ï¿½\u0002\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u0002\u0004ï¿½\u0002\u000e\u001c\u0001ï¿½\u0002\u000eï¿½\u0002\u0018\f\u0001ï¿½\u0002(ï¿½\u00022\u0004\u0001ï¿½\u001d8ï¿½;ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0001*ï¿½\u00014\u0002\u0001ï¿½\u0001\u0006ï¿½\u0001\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u0001\u0004ï¿½\u0001\u000e\u001c\u0001ï¿½\u0001\u000eï¿½\u0001\u0018\f\u0001ï¿½\u0001(ï¿½\u00012\u0004\u0001ï¿½>0ï¿½%$_CharT *__s\u0000\u0010\u0010\u0006\u0000\u0000\u0001ï¿½\u0003ï¿½\u0003ï¿½\u0002\u0004\u0001ï¿½\u0003xï¿½\u0003ï¿½d\u0004ï¿½e\u001dXwï¿½\f\u0000\u0000\u0002ï¿½\u0003\nï¿½\u0003\u0010\u001c\u0001ï¿½\b\u0004\u0010ï¿½\b\u0004\u0016\u0004\u0001ï¿½Yï¿½RXï¿½Dstd::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001,ï¿½\u00012ï¿½\u0002\u0004\u0001ï¿½\u0001\u0016ï¿½\u00012ï¿½\u0006\u0000\u0000\u0005ï¿½\u0001(ï¿½\u0001.\f\u0001ï¿½\u0012\u0002.ï¿½\u0012\u00024\f\u0001ï¿½\u0018\u0002\u0010ï¿½\u0018\u0002\u0016\f\u0001ï¿½#\u0002\u0016ï¿½#\u0002\u001c\f\u0001ï¿½+\u00028ï¿½+\u0002>\f\u0001ï¿½{ï¿½i*9Xios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½n\u00010ï¿½n\u0001:\u0002\u0001ï¿½n\u0001\fï¿½n\u0001bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0004ï¿½\u0001\u0004ï¿½\u0001\u000e\u001c\u0001ï¿½\u0001\u0002ï¿½\u0001\f\u001c\u0001ï¿½\u0001\u0014ï¿½\u0001\u001e\f\u0001ï¿½\u0001 ï¿½\u0001*\u0004\u0001ï¿½ßO'\f\tXostd::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001&\u0002\u0001ï¿½\u0001\fï¿½\u0001@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0001\u0014ï¿½\u0001 \u0004\u0001ï¿½\u001a\nUpï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0016\u0003*ï¿½\u0016\u00034\u0002\u0001ï¿½\u0016\u0003\u0006ï¿½\u0016\u0003\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u001d\u0003\u0004ï¿½\u001d\u0003\u000e\u001c\u0001ï¿½&\u0003\u000eï¿½&\u0003\u0018\f\u0001ï¿½'\u0003(ï¿½'\u00032\u0004\u0001ï¿½\u0012ï¿½L\tconst std::basic_istream::pos_type __p\u0000FF\u0006const std::basic_istream::pos_type __p = this->rdbuf()->pubseekoff(__off, __dir,\n\t\t\t\t\t\t\t\t ios_base::in)\u0000136.  seekp, seekg setting wrong streams?\u0000\u0001ï¿½\u0003&ï¿½\u0003,\u0002\u0001ï¿½\u0003\bï¿½\u0003,ï¿½\u0013bH*ï¿½,ï¿½\r\u0006\u0000\u0000\u0001ï¿½\u0003\u0010ï¿½\u0003\u0016\u0004\u0001ï¿½\u000bì¡ï¿½\u001fcJstd::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½<\u0001&ï¿½<\u0001,ï¿½\u0002\u0004\u0001ï¿½<\u0001\u0010ï¿½<\u0001,ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0002ï¿½N\u0001\nï¿½N\u0001\u0010\u001c\u0001ï¿½`\u0001\u0004ï¿½`\u0001\n\u0004\u0001ï¿½=#Dï¿½aï¿½const std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½\u0004\u0002:ï¿½\u0004\u0002D\u0002\u0001ï¿½\u0004\u0002\u001cï¿½\u0004\u0002nï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0004ï¿½\u0013\u0002Lï¿½\u0013\u0002V\u0004\u0001ï¿½\u0019\u0002Tï¿½\u0019\u0002^\u0004\u0001ï¿½(\u0002Lï¿½(\u0002V\u0004\u0001ï¿½-\u0002Lï¿½-\u0002V\u0004\u0001ï¿½\u0017ï¿½\bpï¿½Jï¿½std::basic_istream::__streambuf_type *__sb\u0000LL\bstd::basic_istream::__streambuf_type *__sb = this->rdbuf()\u0000\u0000\u0001ï¿½\u0005\u0002@ï¿½\u0005\u0002H\u0002\u0001ï¿½\u0005\u0002\u001cï¿½\u0005\u0002hï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0002ï¿½\u0006\u0002:ï¿½\u0006\u0002B\u0004\u0001ï¿½\u0016\u0002\u001cï¿½\u0016\u0002$\u0004\u0001ï¿½<fqï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½<\u0001Fï¿½<\u0001Lï¿½\u0002\u0004\u0001ï¿½<\u00010ï¿½<\u0001Lï¿½\u0006\u0000\u0000\u0002ï¿½J\u0001<ï¿½J\u0001B\f\u0001ï¿½_\u0001\u0014ï¿½_\u0001\u001a\f\u0001ï¿½Tï¿½#ï¿½\u001da\u0007\\std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½@\u0001\u001aï¿½@\u0001&\u0002\u0001ï¿½@\u0001\fï¿½@\u0001@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½A\u0001\u0014ï¿½A\u0001 \u0004\u0001ï¿½{PT<ï¿½std::basic_istream::int_type __c\u0000::\u0006std::basic_istream::int_type __c = __sb->sgetc()\u0000\u0000\u0001ï¿½\u0006\u0002.ï¿½\u0006\u00024\u0002\u0001ï¿½\u0006\u0002\u001cï¿½\u0006\u0002Tï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0005ï¿½\u0013\u0002Bï¿½\u0013\u0002H\u0004\u0001ï¿½\u0016\u0002\u0010ï¿½\u0016\u0002\u0016\u0014\u0001ï¿½\u0019\u0002Jï¿½\u0019\u0002P\u0004\u0001ï¿½(\u0002Bï¿½(\u0002H\u0004\u0001ï¿½-\u0002Bï¿½-\u0002H\u0004\u0001ï¿½$\u0015ï¿½h\u0014ï¿½std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½D\u0002\u001aï¿½D\u0002&\u0002\u0001ï¿½D\u0002\fï¿½D\u0002@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½E\u0002\u0014ï¿½E\u0002 \u0004\u0001ï¿½mï¿½#ï¿½4ï¿½\u001cstd::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u001aï¿½&\u0002\u0001ï¿½\fï¿½@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0014ï¿½ \u0004\u0001ï¿½\rï¿½qï¿½iï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½G\u00028ï¿½G\u0002B\u0002\u0001ï¿½G\u0002\u0014ï¿½G\u0002jï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0004ï¿½k\u0002\fï¿½k\u0002\u0016\u001c\u0001ï¿½v\u0002\fï¿½v\u0002\u0016\u001c\u0001ï¿½\u0002\u001cï¿½\u0002&\f\u0001ï¿½\u00026ï¿½\u0002@\u0004\u0001ï¿½Ýï¿½>qï¿½std::basic_istream::int_type __c\u0000::\u0006std::basic_istream::int_type __c = traits_type::eof()\u0000\u0000\u0001ï¿½\u0002\u001eï¿½\u0002$\u0002\u0001ï¿½\u0002\fï¿½\u0002Nï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0003ï¿½\u0002\u000eï¿½\u0002\u0014\u0014\u0001ï¿½\u0002Hï¿½\u0002N\u0004\u0001ï¿½\u0002\u001aï¿½\u0002 \u0004\u0001ï¿½+ï¿½\u001cï¿½\u0010\u0003ï¿½|std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002&\u0002\u0001ï¿½\u0002\fï¿½\u0002@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0002\u0014ï¿½\u0002 \u0004\u0001ï¿½qï¿½std::streamsize __extracted\u0000  \u0016std::streamsize __extracted = 0\u0000\u0000\u0001ï¿½\u0003\"ï¿½\u00038\u0002\u0001ï¿½\u0003\fï¿½\u0003@ï¿½\r\f\u0000\u0000\u0004ï¿½\u0003\u001cï¿½\u00032\f\u0001ï¿½\u0003\fï¿½\u0003\"\u001c\u0001ï¿½\u0002\u0004\u0016ï¿½\u0002\u0004,\f\u0001ï¿½\u0013\u0004\u0016ï¿½\u0013\u0004,\f\u0001ï¿½\u00101ï¿½yKuï¿½\u001cstd::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002&\u0002\u0001ï¿½\u0002\fï¿½\u0002@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0002\u0014ï¿½\u0002 \u0004\u0001ï¿½\u0000(ï¿½\u0006std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002&\u0002\u0001ï¿½\u0002\fï¿½\u0002@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0002\u0014ï¿½\u0002 \u0004\u0001ï¿½\u0015ï¿½)ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0002Hï¿½\u0002Nï¿½\u0002\u0004\u0001ï¿½\u00022ï¿½\u0002Nï¿½\u0006\u0000\u0000\u0002ï¿½\u0002Zï¿½\u0002`\u0004\u0001ï¿½\u00020ï¿½\u00026\f\u0001ï¿½;Esï¿½_ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00024\u0002\u0001ï¿½\u0002\u0006ï¿½\u0002\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u0002\u0004ï¿½\u0002\u000e\u001c\u0001ï¿½\u0002\u000eï¿½\u0002\u0018\f\u0001ï¿½\u0002(ï¿½\u00022\u0004\u0001ï¿½Mï¿½\u0013ï¿½bool __large_ignore\u0000\n\n\u001cbool __large_ignore = false\u0000See comment above.\u0000\u0001ï¿½O\u0002\u0018ï¿½O\u00024\u0002\u0001ï¿½O\u0002\u000eï¿½O\u0002Dï¿½\r\u0006\u0000\u0000\u0002ï¿½_\u0002\u0010ï¿½_\u0002,\u0014\u0001ï¿½g\u0002\u0010ï¿½g\u0002,\f\u0001ï¿½bï¿½ {mnï¿½std::basic_istream::__streambuf_type *__sb\u0000LL\bstd::basic_istream::__streambuf_type *__sb = this->rdbuf()\u0000\u0000\u0001ï¿½:\u00032ï¿½:\u0003:\u0002\u0001ï¿½:\u0003\u000eï¿½:\u0003Zï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0002ï¿½;\u0003\u0016ï¿½;\u0003\u001e\u0004\u0001ï¿½=\u0003\u0010ï¿½=\u0003\u0018\u0004\u0001ï¿½/h\u0010ï¿½]ï¿½const __ctype_type &__ct\u0000((\bconst __ctype_type &__ct = use_facet<__ctype_type>(__in.getloc())\u0000\u0000\u0001ï¿½#\u00044ï¿½#\u0004<\u0002\u0001ï¿½#\u0004\fï¿½#\u0004ï¿½aï¿½O:C@Kï¿½\r\f\u0000\u0000\u0001ï¿½)\u0004\u0012ï¿½)\u0004\u001a\u0004\u0001ï¿½\u0017ï¿½\u000e>ï¿½rconst std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½u\u0001,ï¿½u\u00016\u0002\u0001ï¿½u\u0001\u000eï¿½u\u0001`ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0003ï¿½{\u0001Zï¿½{\u0001d\u0004\u0001ï¿½}\u0001lï¿½}\u0001v\u0004\u0001ï¿½\u0001Rï¿½\u0001\\\u0004\u0001ï¿½2ï¿½jconst std::basic_istream::int_type __idelim\u0000FF\u0010const std::basic_istream::int_type __idelim = traits_type::to_int_type(__delim)\u0000\u0000\u0001ï¿½\u0001:ï¿½\u0001J\u0002\u0001ï¿½\u0001\u001cï¿½\u0001ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0002ï¿½\u0001nï¿½\u0001~\u0004\u0001ï¿½\u0001hï¿½\u0001x\u0004\u0001ï¿½WNcF8Þªstd::basic_istream::char_type __c\u0000<<\u0006\u0000\u0000\u0001ï¿½\u0002,ï¿½\u00022ï¿½\u0002\u0004\u0001ï¿½\u0002\u0018ï¿½\u00022ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½\u0002`ï¿½\u0002f\u0004\u0001ï¿½(\u001cOïºªï¿½_const std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½\u0002,ï¿½\u00026\u0002\u0001ï¿½\u0002\u000eï¿½\u0002`ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0001ï¿½\u0002lï¿½\u0002v\u0004\u0001ï¿½Jw\u000eï¿½\u0016ihstd::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0002Pï¿½\u0002Vï¿½\u0002\u0004\u0001ï¿½\u0002:ï¿½\u0002Vï¿½\u0006\u0000\u0000\u0001ï¿½\u0002pï¿½\u0002v\u0004\u0001ï¿½Rï¿½Èï¿½std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½\u0013\u0003\u001aï¿½\u0013\u0003&\u0002\u0001ï¿½\u0013\u0003\fï¿½\u0013\u0003@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½\u0014\u0003\u0014ï¿½\u0014\u0003 \u0004\u0001ï¿½s$ï¿½9\u001e=ï¿½const std::basic_istream::int_type __eof\u0000FF\nconst std::basic_istream::int_type __eof = traits_type::eof()\u0000\u0000\u0001ï¿½\u0019\u0003,ï¿½\u0019\u00036\u0002\u0001ï¿½\u0019\u0003\u000eï¿½\u0019\u0003`ï¿½fï¿½\u00154Mï¿½\r\u0006\u0000\u0000\u0001ï¿½\u001c\u0003bï¿½\u001c\u0003l\u0004\u0001ï¿½Kï¿½ggEstd::basic_istream::__streambuf_type *__sb\u0000LL\bstd::basic_istream::__streambuf_type *__sb = this->rdbuf()\u0000\u0000\u0001ï¿½\u00012ï¿½\u0001:\u0002\u0001ï¿½\u0001\u000eï¿½\u0001Zï¿½Nï¿½G/È\r\u0006\u0000\u0000\u0001ï¿½\u0001Hï¿½\u0001P\u0004\u0001ï¿½vï¿½î¡ï¿½int __ret\u0000\b\b\nint __ret = -1\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\nDR60.  Do not change _M_gcount.\u0000\u0001ï¿½3\u0003\u0014ï¿½3\u0003\u001e\u0002\u0001ï¿½3\u0003\fï¿½3\u0003(ï¿½\r\u0006\u0000\u0000\u0002ï¿½@\u0003\fï¿½@\u0003\u0016\u0014\u0001ï¿½M\u0003\u001aï¿½M\u0003$\f\u0001ï¿½w$ï¿½8ï¿½\u0016e?std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½4\u0003\u001aï¿½4\u0003&\u0002\u0001ï¿½4\u0003\fï¿½4\u0003@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½5\u0003\u0014ï¿½5\u0003 \u0004\u0001ï¿½\u001aQ1ï¿½\u001dï¿½std::basic_istream::sentry __cerb\u000066\fstd::basic_istream::sentry __cerb = (*this, true)\u0000\u0000\u0001ï¿½X\u0003\u001aï¿½X\u0003&\u0002\u0001ï¿½X\u0003\fï¿½X\u0003@ï¿½5ï¿½_\r\u0006\u0000\u0000\u0001ï¿½Y\u0003\u0014ï¿½Y\u0003 \u0004\u0001"}],"crc32":409211183,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]