[{"ops":[{"insert":"// Base to std::allocator -*- C++ -*-\n\n// Copyright (C) 2004-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file bits/c++allocator.h\n *  This is an internal header file, included by other library headers.\n *  Do not attempt to use it directly. @headername{memory}\n */\n\n#ifndef _GLIBCXX_CXX_ALLOCATOR_H\n#define _GLIBCXX_CXX_ALLOCATOR_H 1\n\n#include <ext/new_allocator.h>\n\n#if __cplusplus >= 201103L\nnamespace std\n{\n  /**\n   *  @brief  An alias to the base class for std::allocator.\n   *\n   *  Used to set the std::allocator base class to\n   *  __gnu_cxx::new_allocator.\n   *\n   *  @ingroup allocators\n   *  @tparam  _Tp  Type of allocated object.\n    */\n  template<typename _Tp>\n    using __allocator_base = __gnu_cxx::new_allocator<_Tp>;\n}\n#else\n// Define new_allocator as the base class to std::allocator.\n# define __allocator_base  __gnu_cxx::new_allocator\n#endif\n\n#ifndef _GLIBCXX_SANITIZE_STD_ALLOCATOR\n# if defined(__SANITIZE_ADDRESS__)\n#  define _GLIBCXX_SANITIZE_STD_ALLOCATOR 1\n# elif defined __has_feature\n#  if __has_feature(address_sanitizer)\n#   define _GLIBCXX_SANITIZE_STD_ALLOCATOR 1\n#  endif\n# endif\n#endif\n\n#endif\n"}],"crc32":1275473360,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]