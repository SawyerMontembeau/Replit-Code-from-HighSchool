[{"ops":[{"insert":"// <cstdint> -*- C++ -*-\n\n// Copyright (C) 2007-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file include/cstdint\n *  This is a Standard C++ Library header.\n */\n\n#ifndef _GLIBCXX_CSTDINT\n#define _GLIBCXX_CSTDINT 1\n\n#pragma GCC system_header\n\n#if __cplusplus < 201103L\n# include <bits/c++0x_warning.h>\n#else\n\n#include <bits/c++config.h>\n\n#if _GLIBCXX_HAVE_STDINT_H\n# include <stdint.h>\n#endif\n\nnamespace std\n{\n#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n  using ::int8_t;\n  using ::int16_t;\n  using ::int32_t;\n  using ::int64_t;\n\n  using ::int_fast8_t;\n  using ::int_fast16_t;\n  using ::int_fast32_t;\n  using ::int_fast64_t;\n\n  using ::int_least8_t;\n  using ::int_least16_t;\n  using ::int_least32_t;\n  using ::int_least64_t;\n\n  using ::intmax_t;\n  using ::intptr_t;\n  \n  using ::uint8_t;\n  using ::uint16_t;\n  using ::uint32_t;\n  using ::uint64_t;\n\n  using ::uint_fast8_t;\n  using ::uint_fast16_t;\n  using ::uint_fast32_t;\n  using ::uint_fast64_t;\n\n  using ::uint_least8_t;\n  using ::uint_least16_t;\n  using ::uint_least32_t;\n  using ::uint_least64_t;\n\n  using ::uintmax_t;\n  using ::uintptr_t;\n#else // !_GLIBCXX_USE_C99_STDINT_TR1\n  // Define the minimum needed for <ratio>, <chrono> etc.\n  using intmax_t = __INTMAX_TYPE__;\n  using uintmax_t = __UINTMAX_TYPE__;\n#endif // _GLIBCXX_USE_C99_STDINT_TR1\n} // namespace std\n\n#endif // C++11\n\n#endif // _GLIBCXX_CSTDINT\n"}],"crc32":3722024705,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]