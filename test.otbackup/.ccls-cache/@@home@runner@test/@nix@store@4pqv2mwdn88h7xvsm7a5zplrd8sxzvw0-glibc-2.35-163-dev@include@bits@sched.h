[{"ops":[{"insert":"/* Definitions of constants and data structure for POSIX 1003.1b-1993\n   scheduling interface.\n   Copyright (C) 1996-2022 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef _BITS_SCHED_H\n#define _BITS_SCHED_H 1\n\n#ifndef _SCHED_H\n# error \"Never include <bits/sched.h> directly; use <sched.h> instead.\"\n#endif\n\n/* Scheduling algorithms.  */\n#define SCHED_OTHER\t\t0\n#define SCHED_FIFO\t\t1\n#define SCHED_RR\t\t2\n#ifdef __USE_GNU\n# define SCHED_BATCH\t\t3\n# define SCHED_ISO\t\t4\n# define SCHED_IDLE\t\t5\n# define SCHED_DEADLINE\t\t6\n\n# define SCHED_RESET_ON_FORK\t0x40000000\n#endif\n\n#ifdef __USE_GNU\n/* Cloning flags.  */\n# define CSIGNAL       0x000000ff /* Signal mask to be sent at exit.  */\n# define CLONE_VM      0x00000100 /* Set if VM shared between processes.  */\n# define CLONE_FS      0x00000200 /* Set if fs info shared between processes.  */\n# define CLONE_FILES   0x00000400 /* Set if open files shared between processes.  */\n# define CLONE_SIGHAND 0x00000800 /* Set if signal handlers shared.  */\n# define CLONE_PIDFD   0x00001000 /* Set if a pidfd should be placed\n\t\t\t\t     in parent.  */\n# define CLONE_PTRACE  0x00002000 /* Set if tracing continues on the child.  */\n# define CLONE_VFORK   0x00004000 /* Set if the parent wants the child to\n\t\t\t\t     wake it up on mm_release.  */\n# define CLONE_PARENT  0x00008000 /* Set if we want to have the same\n\t\t\t\t     parent as the cloner.  */\n# define CLONE_THREAD  0x00010000 /* Set to add to same thread group.  */\n# define CLONE_NEWNS   0x00020000 /* Set to create new namespace.  */\n# define CLONE_SYSVSEM 0x00040000 /* Set to shared SVID SEM_UNDO semantics.  */\n# define CLONE_SETTLS  0x00080000 /* Set TLS info.  */\n# define CLONE_PARENT_SETTID 0x00100000 /* Store TID in userlevel buffer\n\t\t\t\t\t   before MM copy.  */\n# define CLONE_CHILD_CLEARTID 0x00200000 /* Register exit futex and memory\n\t\t\t\t\t    location to clear.  */\n# define CLONE_DETACHED 0x00400000 /* Create clone detached.  */\n# define CLONE_UNTRACED 0x00800000 /* Set if the tracing process can't\n\t\t\t\t      force CLONE_PTRACE on this clone.  */\n# define CLONE_CHILD_SETTID 0x01000000 /* Store TID in userlevel buffer in\n\t\t\t\t\t  the child.  */\n# define CLONE_NEWCGROUP    0x02000000\t/* New cgroup namespace.  */\n# define CLONE_NEWUTS\t0x04000000\t/* New utsname group.  */\n# define CLONE_NEWIPC\t0x08000000\t/* New ipcs.  */\n# define CLONE_NEWUSER\t0x10000000\t/* New user namespace.  */\n# define CLONE_NEWPID\t0x20000000\t/* New pid namespace.  */\n# define CLONE_NEWNET\t0x40000000\t/* New network namespace.  */\n# define CLONE_IO\t0x80000000\t/* Clone I/O context.  */\n#endif\n\n#include <bits/types/struct_sched_param.h>\n\n__BEGIN_DECLS\n\n#ifdef __USE_GNU\n/* Clone current process.  */\nextern int clone (int (*__fn) (void *__arg), void *__child_stack,\n\t\t  int __flags, void *__arg, ...) __THROW;\n\n/* Unshare the specified resources.  */\nextern int unshare (int __flags) __THROW;\n\n/* Get index of currently used CPU.  */\nextern int sched_getcpu (void) __THROW;\n\n/* Get currently used CPU and NUMA node.  */\nextern int getcpu (unsigned int *, unsigned int *) __THROW;\n\n/* Switch process to namespace of type NSTYPE indicated by FD.  */\nextern int setns (int __fd, int __nstype) __THROW;\n#endif\n\n__END_DECLS\n\n#endif /* bits/sched.h */\n"}],"crc32":3680518863,"timestamp":1704214356,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]