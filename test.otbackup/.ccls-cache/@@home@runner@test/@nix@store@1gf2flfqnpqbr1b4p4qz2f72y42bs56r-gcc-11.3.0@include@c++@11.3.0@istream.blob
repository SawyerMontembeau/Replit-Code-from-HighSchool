[{"ops":[{"insert":"*\u0000\u0002\u0002\u0001\u0001\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/istream\u0000/home/runner/test/main.cpp\u0000\u0016clang\u0000/home/runner/test/main.cpp\u0000-idirafter\u0000/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu\u0000-frandom-seed=xj94mglrnw\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-working-directory=/home/runner/test/\u0000ï¿½/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ostream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/initializer_list\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdlib\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/cpu_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/type_traits\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/ctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream_insert.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clock_t.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdarg.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timespec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/mbstate_t.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno-base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct___jmp_buf_tag.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/locale.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthread_stack_min-dynamic.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/char_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/debug.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stddef.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__mbstate_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/single_threaded.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stringfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ios\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iostream\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clockid_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes-arch.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/numeric_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timeval.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwctype\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++config.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/new\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cpp_type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++locale.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdint.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-intn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdc-predef.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/byteswap.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/long-double.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/predefined_ops.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cerrno\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/std_abs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitflags.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features-time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_construct.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwchar\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/os_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_forced.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iosfwd\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/locale.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/concept_check.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdio\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/system_error\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/postypes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/charconv.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-uintn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/new_allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_defines.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/uintn-identity.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timesize.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/memoryfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/wint_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/alloc_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/localefwd.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_algobase.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/thread-shared-types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_init_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sched.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitstatus.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_itimerspec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_tm.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ptr_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdio.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_ptr.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/string\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/istream.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/atomic_word.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ios_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/cookie_io_functions_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/clocale\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr-default.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdio_lim.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn-common.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/typeinfo\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/sched.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/range_access.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/alloc_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wordsize.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/string_conversions.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/typesizes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/pthread.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/setjmp.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functexcept.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/streambuf\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/timer_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cctype\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endianness.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdlib-float.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/exception\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/cdefs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functional_hash.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_inline.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/backward/binders.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/assertions.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/alloca.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_pair.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_mutex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_rwlock.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/atomic_wide_counter.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_sched_param.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_funcs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/move.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/time_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/error_constants.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs-64.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/libc-header-start.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_function.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdint.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf_iterator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/FILE.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wctype-wchar.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/stdexcept\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/nested_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdint\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/atomicity.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos64_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/error_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/cpu-set.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/hash_bytes.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/linux/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdlib.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/__stddef_max_align_t.h\u0000\u0002\u0003J/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ios\u0000L/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ostream\u0000ï¿½\u0007/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/istream.tcc\u0000\u0002ï¿½@\u0003\u0000ï¿½U\u0003\fï¿½\u0003\u0000ï¿½\u0003\nï¿½'ï¿½æ¹ï¿½~\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½t ï¿½\tuï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0016\u0006ï¿½Â©ï¿½6B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Ñ­ï¿½'ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½pzcï¿½wstd::basic_istream<wchar_t>::__istream_type &std::basic_istream<wchar_t>::_M_extract(_ValueT &__v)\u0000Zï¿½\u0014\u0000\u0000\u0000\u0000\u0001ï¿½\u001et;Ì¿ï¿½\u0000\u0006\u0000\u0000\u0001ï¿½\u0002\u0002ï¿½\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½\u0002\u0002ï¿½\u00022\u0000\u0000ï¿½\u0012-ï¿½#I\u000fï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½axk6ï¿½$s\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½{Xï¿½\\ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½#ï¿½\rï¿½b\u0007\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Qï¿½Èï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0007<ï¿½6+ï¿½Z\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u000fï¿½b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½WLï¿½\u0010ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½E\u0016ï¿½\u0015ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½%ï¿½8ï¿½VVï¿½qï¿½Wï¿½\u001eï¿½/ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½>ï¿½\u0006ï¿½Sï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½!XEï¿½i2\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½1ï¿½\u001eï¿½H\u0014\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½\u00013Tï¿½Õ«ï¿½M\u000b\fZï¿½\u0014ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003ï¿½\u0014ï¿½7ï¿½:Cï¿½@Q}ï¿½)V=ï¿½`Ã\u001f Xï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½2\rï¿½}Iï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½kWï¿½\u0004O\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½6iE9\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0007bbï¿½|ï¿½\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½pï¿½5_xwaW\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½cï¿½d:oï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Vï¿½^ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½3ï¿½B\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Òµ5ï¿½v[ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0019~c/qG>\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½J^iÄ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½]u@ï¿½TÒ¯\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u001b6\u0006\u000fï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½#\u0011Kï¿½\u000bï¿½\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½/ï¿½Fï¿½j\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½5ï¿½VB\u0016ï¿½\u001b\u0013\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½j\bï¿½z\u001dï¿½Ûstd::basic_istream<wchar_t>::__istream_type &std::basic_istream<wchar_t>::ignore(std::streamsize __n, std::basic_istream<wchar_t>::int_type __delim)\u0000Zï¿½\f\u0000\u0000\u0000\u0000\u0004ï¿½2\u0011\u001aBï¿½hO5ï¿½j\u0002ï¿½jï¿½\u000b\u001bSQ\u0017ï¿½2ï¿½\u0018ï¿½M6ï¿½\u0000\u0006\u0000\u0000\u0002ï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½\u0002\u0004ï¿½\u0002Xï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001\\\u0000\u0000ï¿½!\u0015ï¿½'ï¿½inline basic_istream<char, _Traits> &std::operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c)\u0000JT\u0014\u0001ï¿½\u0002\bï¿½\u0002\u001cï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u0002l\u0000\u0000\u0000\u0002ï¿½)ï¿½+ï¿½C*`ï¿½r{ï¿½Z'jï¿½M\u0003ï¿½\u0002&ï¿½\u0002*ï¿½!\u0015ï¿½'ï¿½\u0003ï¿½$@ï¿½\u0002&ï¿½\u0002*ï¿½\u0014ï¿½Llï¿½\u0003ï¿½$@ï¿½\u0002&ï¿½\u0002*ï¿½\u0002wï¿½\u0003_\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0006ï¿½\u0002&ï¿½\u0002*ï¿½$@\u0001ï¿½\u0002&ï¿½\u0002*ï¿½$@\u0001ï¿½9\u0003$ï¿½9\u0003(ï¿½$@\u0001ï¿½?\u0003$ï¿½?\u0003(ï¿½$@\u0001ï¿½\u0003Zï¿½\u0003^$\u0001ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½$@\u0001ï¿½zï¿½8&ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Bï¿½vï¿½Y,ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Rï¿½7kï¿½`std::basic_istream<char>::__istream_type &std::basic_istream<char>::ignore(std::streamsize __n, std::basic_istream<char>::int_type __delim)\u0000Tï¿½\f\u0000\u0000\u0000\u0000\u0004ï¿½\u001c\"ï¿½Rï¿½=ï¿½\u0003iï¿½fï¿½^\b\fYï¿½o\u001e\u0010ï¿½P#ï¿½vï¿½95\u0000\u0006\u0000\u0000\u0002ï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½\u0002\u0004ï¿½\u0002Xï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001\\\u0000\u0000ï¿½\u0018ï¿½æOï¿½std::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::char_type &__c)\u0000Hp\u0006\u0000\u0000 @brief  Simple extraction.\n @param  __c  The character in which to store data.\n @return  *this\n\n Tries to extract a character and store it in @a __c.  If none are\n available, sets failbit and returns traits::eof().\n\n @note  This function is not overloaded on signed char and\n        unsigned char.\u0000\u0000\u0001ï¿½Eï¿½zï¿½Q Y\u0000\u0006\u0000\u0000\u0001ï¿½;\u0001\fï¿½;\u0001\u0012ï¿½\u0001\u0004\u0001ï¿½:\u0001\fï¿½;\u00012\u0000\u0000ï¿½yï¿½r\u0001V\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½<ï¿½Èï¿½85\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½gï¿½\u000eQz7std::basic_istream::__istream_type &std::basic_istream::_M_extract(_ValueT &__v)\u0000Hp\u0014\u0000\u0000\u0000\u0000\u0001ï¿½<ï¿½\u000eqï¿½\u0014ï¿½\u0000\u0006\u0000\u0000\u0001ï¿½\u0002\u0002ï¿½\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½\u0002\u0002ï¿½\u00022\u0000\u0000ï¿½\u000fï¿½\rï¿½C2inline __enable_if_t<__is_swappable<_Tp>::value> std::swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) noexcept(__is_nothrow_swappable<_Tp>::value)\u0000bl\b\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½$@\u0001ï¿½×±ï¿½gï¿½,ï¿½void std::basic_istream::swap(basic_istream<_CharT, _Traits> &__rhs)\u0000\n2\b\u0001ï¿½w\u0002\fï¿½w\u0002\u0014ï¿½\u0002\u0004\u0001ï¿½v\u0002\fï¿½{\u0002\u000e\u0000\u0000\u0000\u0001ï¿½Inï¿½@u\u0005ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½\u0007ï¿½\u0017ï¿½\u0003ï¿½$@ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½\u000fï¿½\rï¿½C2\u0003ï¿½$@ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½X4bï¿½sï¿½\u0003ï¿½$@ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½[ï¿½\\u%\u001fï¿½\u0003ï¿½$@ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½\u0018\u0011\u0001ï¿½\fï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0001ï¿½r\u0002\u0002ï¿½r\u0002\nï¿½$@\u0001ï¿½rWï¿½h_ï¿½Òbasic_istream<_CharT, _Traits> &std::basic_istream::operator=(basic_istream<_CharT, _Traits> &&__rhs)\u0000@h\u0012\u0001ï¿½p\u0002\fï¿½p\u0002\u001eï¿½\u0002\u0004\u0001ï¿½o\u0002\fï¿½t\u0002\u000e\u0000\u0000\u0000\u0001ï¿½Tï¿½\fqï¿½\u0001ï¿½r\u0002\u0002ï¿½r\u0002\nï¿½×±ï¿½gï¿½,ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0004Wï¿½/ï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(std::basic_istream::__ios_type &(*__pf)(std::basic_istream::__ios_type &))\u0000Hp\u0014\u0001{\f{ ï¿½\u0002\u0004\u0001z\f\u000e\u0000\u0000\u0000\u0001ï¿½\u0012\u001aFwï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½qï¿½Fï¿½\rï¿½Zï¿½std::streamsize std::basic_istream::gcount() const\u0000 H\f\u0001ï¿½\f\u0001\fï¿½\f\u0001\u0018ï¿½\u0002\u0004\u0001ï¿½\u000b\u0001\fï¿½\r\u00016\u0000[27.6.1.3] unformatted input\n\n@brief  Character counting\n@return  The number of characters extracted by the previous\n         unformatted input function dispatched for this stream.\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½x\u0010\u00050ï¿½+}ybasic_istream<_CharT, _Traits> &std::basic_istream::operator=(const basic_istream<_CharT, _Traits> &) = delete\u0000@h\u0012\u0001ï¿½m\u0002*ï¿½m\u0002<ï¿½\u0002\u0004\u0001ï¿½m\u0002\fï¿½m\u0002z\u000027.7.3.3 Assign/swap\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½%ï¿½\nstd::basic_istream::__istream_type &std::basic_istream::operator>>(unsigned long long &__n)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0001ï¿½\u0019ï¿½H)ï¿½@'\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½<mï¿½cnï¿½\\\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½$xï¿½\u0000rU\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½yÝ®?ï¿½tv-\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½é¾\u0007ï¿½4\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½dR0ï¿½\u0015ï¿½std::basic_istream<char>::__istream_type &std::basic_istream<char>::ignore(std::streamsize __n)\u0000Tï¿½\f\u0000\u0000\u0000\u0000\u0002ï¿½\b\u001aï¿½$Vï¿½\"ï¿½Ï`tï¿½Zï¿½~\u0000\u0006\u0000\u0000\u0002ï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½\u0002\u0004ï¿½\u00024ï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u00018\u0000\u0000ï¿½=ï¿½'ï¿½>ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½?ï¿½Pï¿½\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Elï¿½mRtstd::basic_istream::__istream_type &std::basic_istream::operator>>(float &__f)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000@{\n\n@brief  Floating point arithmetic extractors\n@param  __f A variable of builtin floating point type.\n@return  @c *this if successful\n\nThese functions use the stream's current locale (specifically, the\n@c num_get facet) to parse the input data.\u0000\u0000\u0001ï¿½ ï¿½Jtï¿½h)\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½3R\u0017ï¿½Fint std::basic_istream::sync()\u0000\b0\b\u0000\u0000 @brief  Synchronizing the stream buffer.\n @return  0 on success, -1 on failure\n\n If @c rdbuf() is a null pointer, returns -1.\n\n Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,\n sets badbit and returns -1.\n\n Otherwise, returns 0.\n\n @note  This function does not count the number of characters\n        extracted, if any, and therefore does not affect the next\n        call to @c gcount().\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½+\u0002\fï¿½+\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½*\u0002\fï¿½+\u0002\u0018\u0000\u0000ï¿½=ï¿½(std::streamsize std::basic_istream::readsome(std::basic_istream::char_type *__s, std::streamsize __n)\u0000 H\u0010\u0000\u0000 @brief  Extraction until the buffer is exhausted, but no more.\n @param  __s  A character array.\n @param  __n  Maximum number of characters to store.\n @return  The number of characters extracted.\n\n Extracts characters and stores them into @a __s depending on the\n number of characters remaining in the streambuf's buffer,\n @c rdbuf()->in_avail(), called @c A here:\n - if @c A @c == @c -1, sets eofbit and extracts no characters\n - if @c A @c == @c 0, extracts no characters\n - if @c A @c > @c 0, extracts @c min(A,n)\n\n The goal is to empty the current buffer, and to not request any\n more from the external input sequence controlled by the streambuf.\u0000\u0000\u0002ï¿½Kï¿½5ï¿½,ï¿½\\-ï¿½NÌ\u0016ï¿½\u0000\u0006\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u001cï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001\\\u0000\u0000ï¿½Bï¿½vinline _OI std::move(_II __first, _II __last, _OI __result)\u0000\u0016 \b\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0002ï¿½\u00038ï¿½\u0003@ï¿½$@\u0001ï¿½\u0003$ï¿½\u0003,ï¿½$@\u0001ï¿½#ï¿½\u001f>ï¿½,\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0014\u0003ï¿½Nn\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Î¨aï¿½void std::basic_iostream::swap(basic_iostream<_CharT, _Traits> &__rhs)\u0000\n4\b\u0001ï¿½\u0003\fï¿½\u0003\u0014ï¿½\u0002\u0004\u0001ï¿½\u0003\fï¿½\u0003L\u0000\u0000\u0000\u0001ï¿½09ï¿½3ï¿½5C\u0000\u0006\u0005\u0000\u0000\u0000\u0001ï¿½\u0003\u0002ï¿½\u0003\nï¿½$@\u0001ï¿½SØ¡ï¿½Pstd::basic_istream::int_type std::basic_istream::peek()\u0000:b\b\u0000\u0000 @brief  Looking ahead in the stream\n @return  The next character, or eof().\n\n If, after constructing the sentry object, @c good() is false,\n returns @c traits::eof().  Otherwise reads but does not extract\n the next input character.\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001\u0018\u0000\u0000ï¿½b\u0011\u001bconstexpr _Tp &&std::forward(typename std::remove_reference<_Tp>::type &&__t) noexcept\u0000 *\u000e\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½\u0003&ï¿½\u00034ï¿½$@\u0001ï¿½\u000bÎÈCSï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½\u0006\u0011@\u0001Èï¿½pï¿½Mï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Jï¿½\u0019)ï¿½std::basic_istream::__istream_type &std::basic_istream::ignore()\u0000Hp\f\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0018ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001\u001c\u0000\u0000ï¿½Í·ï¿½std::basic_istream::basic_istream<_CharT, _Traits>(basic_istream<_CharT, _Traits> &&__rhs)\u0000\u0000(<\u0001ï¿½d\u0002\fï¿½d\u0002&ï¿½\u0002\u0004\u0001ï¿½d\u0002\fï¿½i\u0002\u000e\u0000\u0000\u0000\u0001ï¿½\u0005Äï¿½N!\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½Nï¿½\u001aï¿½=ï¿½\bbasic_iostream<_CharT, _Traits> &std::basic_iostream::operator=(const basic_iostream<_CharT, _Traits> &) = delete\u0000Bl\u0012\u0001ï¿½\u0003,ï¿½\u0003>ï¿½\u0002\u0004\u0001ï¿½\u0003\fï¿½\u0003~\u000027.7.3.3 Assign/swap\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½;Mï¿½?=\u001fconstexpr _Tp &&std::forward(typename std::remove_reference<_Tp>::type &__t) noexcept\u0000 *\u000e\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½\u0003&ï¿½\u00034ï¿½$@\u0001ï¿½\u0018\u0011\u0001ï¿½\fï¿½inline void std::swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) noexcept(noexcept(__lhs.swap(__rhs)))\u0000\u0018\"\b\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½$@\u0001ï¿½'ï¿½+ï¿½m[S\u000bstd::basic_istream::__istream_type &std::basic_istream::putback(std::basic_istream::char_type __c)\u0000Hp\u000e\u0000\u0000 @brief  Unextracting a single character.\n @param  __c  The character to push back into the input stream.\n @return  *this\n\n If @c rdbuf() is not null, calls @c rdbuf()->sputbackc(c).\n\n If @c rdbuf() is null or if @c sputbackc() fails, sets badbit in\n the error state.\n\n @note  This function first clears eofbit.  Since no characters\n        are extracted, the next call to @c gcount() will return 0,\n        as required by DR 60.\u0000\u0000\u0001ï¿½Nï¿½5O^ï¿½\u0000\u0006\u0000\u0000\u0001ï¿½\t\u0002\fï¿½\t\u0002\u001aï¿½\u0001\u0004\u0001ï¿½\b\u0002\fï¿½\t\u00028\u0000\u0000ï¿½Pï¿½\bï¿½Gstd::basic_istream::__istream_type &std::basic_istream::operator>>(bool &__n)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000@{\n\n@brief  Integer arithmetic extractors\n@param  __n A variable of builtin integral type.\n@return  @c *this if successful\n\nThese functions use the stream's current locale (specifically, the\n@c num_get facet) to parse the input data.\u0000\u0000\u0001ï¿½nË5#ï¿½|ï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0012Y\u0011m7ï¿½\u001bï¿½std::basic_istream::__istream_type &std::basic_istream::ignore(std::streamsize __n)\u0000Hp\f\u0000\u0000\u0000\u0000\u0001ï¿½#ï¿½t\u0005~ï¿½j\u0000\u0006\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0018ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u00018\u0000\u0000ï¿½)ï¿½-&\rï¿½*std::basic_istream::basic_istream<_CharT, _Traits>(const basic_istream<_CharT, _Traits> &) = delete\u0000\u0000(<\u0001ï¿½b\u0002\fï¿½b\u0002&ï¿½\u0002\u0004\u0001ï¿½b\u0002\fï¿½b\u0002d\u0000\u0000\u0000\u0000\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½\fdï¿½/\u001fZl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Z@[~_Rï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½à°ï¿½$std::basic_istream::__istream_type &std::basic_istream::operator>>(std::ios_base &(*__pf)(std::ios_base &))\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½\u000e\u0000\u0000\u0000\u0001ï¿½Iï¿½`ï¿½vG\u001a\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½x!\b\u001cï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Uï¿½&aï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0012\fï¿½@ï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(long long &__n)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0001ï¿½yï¿½b1ï¿½2bG\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Bï¿½&ï¿½qï¿½hvirtual std::basic_istream::~basic_istream<_CharT, _Traits>()\u0000\u00108>\u0001f\ff(ï¿½B\u0004\u0001e\fgH\u0000 @brief  Base destructor.\n\n This does very little apart from providing a virtual base dtor.\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½yï¿½9G@std::basic_istream::__istream_type &std::basic_istream::read(std::basic_istream::char_type *__s, std::streamsize __n)\u0000Hp\b\u0000\u0000 @brief  Extraction without delimiters.\n @param  __s  A character array.\n @param  __n  Maximum number of characters to store.\n @return  *this\n\n If the stream state is @c good(), extracts characters and stores\n them into @a __s until one of the following happens:\n - @a __n characters are stored\n - the input sequence reaches end-of-file, in which case the error\n   state is set to @c failbit|eofbit.\n\n @note  This function is not overloaded on signed char and\n        unsigned char.\u0000\u0000\u0002ï¿½\u000bï¿½Kï¿½\"ï¿½Y5ï¿½9\u001bï¿½Ð²\u0000\u0006\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001T\u0000\u0000ï¿½Tï¿½xï¿½}std::basic_istream<wchar_t>::__istream_type &std::basic_istream<wchar_t>::ignore(std::streamsize __n)\u0000Zï¿½\f\u0000\u0000\u0000\u0000\u0002ï¿½%\tQ\"ï¿½Jï¿½sï¿½z\u0002ï¿½\u0000\u0006\u0000\u0000\u0002ï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½\u0002\u0004ï¿½\u00024ï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u00018\u0000\u0000ï¿½\u0017b=5\u001bï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½$\u0010ï¿½5ï¿½wï¿½i\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½(\u0001:=\u000f^ï¿½explicit std::basic_istream::sentry::operator bool() const\u0000\u0012J\u001a\u0001ï¿½\u0002\fï¿½\u0002&ï¿½\u0002\u0004\u0001ï¿½\u0002\fï¿½\u0002.\u0000\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½7ï¿½Ù¤ï¿½\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0006ï¿½\u001aï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½=1p`ï¿½dï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½<1ï¿½Lï¿½\u0019ï¿½*8\u000b\u001e\rï¿½6ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½\u0017Wz\u0011ï¿½std::basic_istream::__istream_type &std::basic_istream::seekg(std::basic_istream::pos_type)\u0000Hp\n\u0000\u0000 @brief  Changing the current read position.\n @param  __pos  A file position object.\n @return  *this\n\n If @c fail() is not true, calls @c rdbuf()->pubseekpos(__pos).  If\n that function fails, sets failbit.\n\n @note  This function first clears eofbit.  It does not count the\n        number of characters extracted, if any, and therefore does\n        not affect the next call to @c gcount().\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½I\u0002\fï¿½I\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½H\u0002\fï¿½I\u0002*\u0000\u0000ï¿½\u0005ï¿½\u0010\u001a\t~ï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(short &__n)\u0000Hp\u0014\u0000\u0000\u0000\u0000\u0001ï¿½Aï¿½Yï¿½|ï¿½\u0000\u0006\u0000\u0000\u0001ï¿½\fï¿½\u001cï¿½\u0001\u0004\u0001ï¿½\fï¿½8\u0000\u0000ï¿½\u0017ï¿½G/std::basic_istream::basic_istream<_CharT, _Traits>()\u0000\u0000(<\u0001ï¿½]\u0002\fï¿½]\u0002&ï¿½\u0002\u0004\u0001ï¿½]\u0002\fï¿½_\u00020\u0000@}\u0000\u0000\u0000\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½\u0003ï¿½b\fï¿½Iï¿½std::basic_iostream::basic_iostream<_CharT, _Traits>(const basic_iostream<_CharT, _Traits> &) = delete\u0000\u0000*>\u0001ï¿½\u0003\fï¿½\u0003(ï¿½\u0002\u0004\u0001ï¿½\u0003\fï¿½\u0003h\u0000\u0000\u0000\u0000\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½dï¿½gBï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(std::basic_istream::__istream_type &(*__pf)(std::basic_istream::__istream_type &))\u0000Hp\u0014\u0001w\fw ï¿½\u0002\u0004\u0001v\fx:\u0000@{\n\n@brief  Interface for manipulators.\n\nManipulators such as @c std::ws and @c std::dec use these\nfunctions in constructs like\n<code>std::cin >> std::ws</code>.\nFor more information, see the iomanip header.\u0000\u0000\u0001ï¿½\u0003\u0012Vï¿½\u0010\u001e\u0004\r\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Zï¿½8ï¿½?std::basic_istream<char>::__istream_type &std::basic_istream<char>::getline(std::basic_istream<char>::char_type *__s, std::streamsize __n, std::basic_istream<char>::char_type __delim)\u0000Tï¿½\u000e\u0000\u0000Explicit specialization declarations, defined in src/istream.cc.\u0000\u0000\u0006ï¿½\u0001ï¿½Qï¿½Nï¿½\u0013ï¿½\u001bï¿½Ytï¿½\nï¿½{e\u0019rï¿½Ê£ï¿½Ù ï¿½Ôï¿½\bï¿½-ï¿½\fxï¿½Iï¿½\u0000\u0006\u0000\u0000\u0002ï¿½\u0002\bï¿½\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½\u0002\u0004ï¿½\u0002|ï¿½\u0002\bï¿½\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001ï¿½\u0000\u0000ï¿½rï¿½:ï¿½\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½tï¿½Jï¿½rï¿½\u0011$ï¿½F*ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½dï¿½X,ï¿½/Cstd::basic_istream::__istream_type &std::basic_istream::unget()\u0000Hp\n\u0000\u0000 @brief  Unextracting the previous character.\n @return  *this\n\n If @c rdbuf() is not null, calls @c rdbuf()->sungetc(c).\n\n If @c rdbuf() is null or if @c sungetc() fails, sets badbit in\n the error state.\n\n @note  This function first clears eofbit.  Since no characters\n        are extracted, the next call to @c gcount() will return 0,\n        as required by DR 60.\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½\u0019\u0002\fï¿½\u0019\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½\u0018\u0002\fï¿½\u0019\u0002\u001a\u0000\u0000ï¿½\u00050ï¿½\u000bX_ï¿½n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½[È\u0003ï¿½9_Qï¿½8\u000fh\u0013OTï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½?H\u0017ï¿½std::basic_iostream::basic_iostream<_CharT, _Traits>(basic_iostream<_CharT, _Traits> &&__rhs)\u0000\u0000*>\u0001ï¿½\u0003\fï¿½\u0003(ï¿½\u0002\u0004\u0001ï¿½\u0003\fï¿½\u0003\u0012\u0000\u0000\u0000\u0001ï¿½É¾ï¿½43ï¿½\u0002ï¿½\u00038ï¿½\u0003@ï¿½s@ï¿½1\tï¿½@\u0003ï¿½$@ï¿½\u00038ï¿½\u0003@ï¿½Bï¿½v\u0003ï¿½$@\t\u0005\u0000\u0000\u0000\u0000ï¿½zC>ï¿½\u0012Rï¿½explicit std::basic_istream::basic_istream<_CharT, _Traits>(std::basic_istream::__streambuf_type *__sb)\u0000\u0012:<\u0001\\\f\\&ï¿½\u0002\u0004\u0001[\f^6\u0000 @brief  Base constructor.\n\n This ctor is almost never called by the user directly, rather from\n derived classes' initialization lists, which pass a pointer to\n their own stream buffer.\u0000\u0000\u0001ï¿½<ï¿½5ï¿½Äï¿½\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½Õ·Iï¿½b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½M\rï¿½r27u\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Cï¿½X7ï¿½*ï¿½\fstd::basic_istream::__istream_type &std::basic_istream::operator>>(unsigned long &__n)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0001ï¿½Xx\r/Rd3\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½X4bï¿½sï¿½inline typename enable_if<__and_<__is_swappable<_T1>, __is_swappable<_T2>>::value>::type std::swap(pair<_T1, _T2> &__x, pair<_T1, _T2> &__y) noexcept(noexcept(__x.swap(__y)))\u0000ï¿½\b\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½$@\u0001ï¿½\n\\ï¿½Ù¼\u001f_std::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::__streambuf_type &__sb)\u0000Hp\u0006\u0001ï¿½\u0001\fï¿½\u0001\u0012ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u0001h\u0000 @brief  Extraction into another streambuf.\n @param  __sb  A streambuf in which to store data.\n @return  *this\n\n Returns @c get(__sb,widen(&apos;\\\\n&apos;)).\u0000\u0000\u0001ï¿½Yï¿½\u000e\"ï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Jï¿½,ï¿½tstd::basic_istream::__istream_type &std::basic_istream::operator>>(double &__f)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0001ï¿½1uï¿½5\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½]ï¿½\u000e\u0011(\bï¿½Mstd::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::char_type *__s, std::streamsize __n)\u0000Hp\u0006\u0001ï¿½a\u0001\fï¿½a\u0001\u0012ï¿½\u0002\u0004\u0001ï¿½`\u0001\fï¿½b\u0001p\u0000 @brief  Simple multiple-character extraction.\n @param  __s  Pointer to an array.\n @param  __n  Maximum number of characters to store in @a s.\n @return  *this\n\n Returns @c get(__s,__n,widen(&apos;\\\\n&apos;)).\u0000\u0000\u0002ï¿½E1Mï¿½bGBï¿½Kï¿½2zWï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½~YNï¿½%ï¿½\u000f)std::basic_istream::__istream_type &std::basic_istream::getline(std::basic_istream::char_type *__s, std::streamsize __n)\u0000Hp\u000e\u0001ï¿½\u0001\fï¿½\u0001\u001aï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u0001x\u0000 @brief  String extraction.\n @param  __s  A character array in which to store the data.\n @param  __n  Maximum number of characters to extract.\n @return  *this\n\n Returns @c getline(__s,__n,widen(&apos;\\\\n&apos;)).\u0000\u0000\u0002ï¿½5}a>Ýï¿½Nu8ï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Cï¿½\u0016\\ï¿½\u0014std::basic_istream::__istream_type &std::basic_istream::operator>>(int &__n)\u0000Hp\u0014\u0000\u0000\u0000\u0000\u0001ï¿½O8ï¿½\u0000\u0006\u0000\u0000\u0001ï¿½\fï¿½\u001cï¿½\u0001\u0004\u0001ï¿½\fï¿½4\u0000\u0000ï¿½wÚ¬ï¿½×·ï¿½auto std::declval() noexcept -> decltype(__declval<_Tp>(0))\u0000\n\u0014\u000e\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0002ï¿½\u0003:ï¿½\u0003H$\u0001ï¿½\u0003jï¿½\u0003x$\u0001ï¿½\u000fï¿½W?\u000bï¿½^A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½uï¿½zT\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½dï¿½:ï¿½\u000fï¿½std::basic_istream::pos_type std::basic_istream::tellg()\u0000:b\n\u0000\u0000 @brief  Getting the current read position.\n @return  A file position object.\n\n If @c fail() is not false, returns @c pos_type(-1) to indicate\n failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,in).\n\n @note  This function does not count the number of characters\n        extracted, if any, and therefore does not affect the next\n        call to @c gcount().  At variance with putback, unget and\n        seekg, eofbit is not cleared first.\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½:\u0002\fï¿½:\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½9\u0002\fï¿½:\u0002\u001a\u0000\u0000ï¿½!Ubï¿½#;std::basic_istream::__istream_type &std::basic_istream::ignore(std::streamsize __n, std::basic_istream::int_type __delim)\u0000Hp\f\u0000\u0000 @brief  Discarding characters\n @param  __n  Number of characters to discard.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Extracts characters and throws them away until one of the\n following happens:\n - if @a __n @c != @c std::numeric_limits<int>::max(), @a __n\n   characters are extracted\n - the input sequence reaches end-of-file\n - the next character equals @a __delim (in this case, the character\n   is extracted); note that this condition will never occur if\n   @a __delim equals @c traits::eof().\n\n NB: Provide three overloads, instead of the single function\n (with defaults) mandated by the Standard: this leads to a\n better performing implementation, while still conforming to\n the Standard.\u0000\u0000\u0002ï¿½U\u000fï¿½73Dï¿½sFï¿½Dï¿½8\u0000\u0006\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0018ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001\\\u0000\u0000ï¿½cï¿½\u0007ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½\u0003×ï¿½\u0002ï¿½\u0017ï¿½A8Yï¿½QYï¿½3\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0007ï¿½\u0017ï¿½inline _Require<__not_<__is_tuple_like<_Tp>>, is_move_constructible<_Tp>, is_move_assignable<_Tp>> std::swap(_Tp &, _Tp &) noexcept(__and_<is_nothrow_move_constructible<_Tp>, is_nothrow_move_assignable<_Tp>>::value)\u0000ï¿½\b\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½$@\u0001ï¿½\u0005?\u0007ï¿½basic_iostream<_CharT, _Traits> &std::basic_iostream::operator=(basic_iostream<_CharT, _Traits> &&__rhs)\u0000Bl\u0012\u0001ï¿½\u0003\fï¿½\u0003\u001eï¿½\u0002\u0004\u0001ï¿½\u0003\fï¿½\u0003\u000e\u0000\u0000\u0000\u0001ï¿½Iï¿½xï¿½\bE\u0001ï¿½\u0003\u0002ï¿½\u0003\nï¿½Î¨aï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0014ï¿½2\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Sï¿½_\u000bY\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½[ï¿½\\u%\u001fï¿½typename enable_if<!__and_<__is_swappable<_T1>, __is_swappable<_T2>>::value>::type std::swap(pair<_T1, _T2> &, pair<_T1, _T2> &) = delete\u0000ï¿½\b\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½z\u0002\fï¿½z\u0002\u0014ï¿½$@\u0001ï¿½A\u001eï¿½\"ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½-\u001c6Aï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0011Jï¿½u}\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½(Q:\u001c\u001fï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0013Bï¿½/\u001eï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(std::basic_istream::__streambuf_type *__sb)\u0000Hp\u0014\u0000\u0000 @brief  Extracting into another streambuf.\n @param  __sb  A pointer to a streambuf\n\n This function behaves like one of the basic arithmetic extractors,\n in that it also constructs a sentry object and has the same error\n handling behavior.\n\n If @p __sb is NULL, the stream will set failbit in its error state.\n\n Characters are extracted from this stream and inserted into the\n @p __sb streambuf until one of the following occurs:\n\n - the input stream reaches end-of-file,\n - insertion into the output buffer fails (in this case, the\n   character that would have been inserted is not extracted), or\n - an exception occurs (and in this case is caught)\n\n If the function inserts no characters, failbit is set.\u0000\u0000\u0001ï¿½Ã ï¿½gï¿½\u0012\u0000\u0006\u0000\u0000\u0001ï¿½\u0002\u0001\fï¿½\u0002\u0001\u001cï¿½\u0001\u0004\u0001ï¿½\u0001\u0001\fï¿½\u0002\u0001P\u0000\u0000ï¿½\u0014,ï¿½Xï¿½Qï¿½\u001astd::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::char_type *__s, std::streamsize __n, std::basic_istream::char_type __delim)\u0000Hp\u0006\u0000\u0000 @brief  Simple multiple-character extraction.\n @param  __s  Pointer to an array.\n @param  __n  Maximum number of characters to store in @a __s.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Characters are extracted and stored into @a __s until one of the\n following happens:\n\n - @c __n-1 characters are stored\n - the input sequence reaches EOF\n - the next character equals @a __delim, in which case the character\n   is not extracted\n\nIf no characters are stored, failbit is set in the stream's error\nstate.\n\nIn any case, a null character is stored into the next location in\nthe array.\n\n @note  This function is not overloaded on signed char and\n        unsigned char.\u0000\u0000\u0003ï¿½\"ï¿½Íï¿½)cï¿½Cï¿½^\"\u0011ï¿½S\u001d%<\u00167\u0000\u0006\u0000\u0000\u0001ï¿½V\u0001\fï¿½V\u0001\u0012ï¿½\u0001\u0004\u0001ï¿½U\u0001\fï¿½V\u0001x\u0000\u0000ï¿½Uï¿½kï¿½{std::basic_istream::__istream_type &std::basic_istream::getline(std::basic_istream::char_type *__s, std::streamsize __n, std::basic_istream::char_type __delim)\u0000Hp\u000e\u0000\u0000 @brief  String extraction.\n @param  __s  A character array in which to store the data.\n @param  __n  Maximum number of characters to extract.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Extracts and stores characters into @a __s until one of the\n following happens.  Note that these criteria are required to be\n tested in the order listed here, to allow an input line to exactly\n fill the @a __s array without setting failbit.\n\n -# the input sequence reaches end-of-file, in which case eofbit\n    is set in the stream error state\n -# the next character equals @c __delim, in which case the character\n    is extracted (and therefore counted in @c gcount()) but not stored\n -# @c __n-1 characters are stored, in which case failbit is set\n    in the stream error state\n\n If no characters are extracted, failbit is set.  (An empty line of\n input should therefore not cause failbit to be set.)\n\n In any case, a null character is stored in the next location in\n the array.\u0000\u0000\u0003ï¿½pï¿½:ï¿½t7ï¿½\u001bï¿½aTï¿½^ï¿½\u000eï¿½tï¿½\u0006\u0001ï¿½i\u0000\u0006\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u001aï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001ï¿½\u0000\u0000ï¿½bï¿½cbï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(void *&__p)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000 @brief  Basic arithmetic extractors\n @param  __p A variable of pointer type.\n @return  @c *this if successful\n\n These functions use the stream's current locale (specifically, the\n @c num_get facet) to parse the input data.\u0000\u0000\u0001ï¿½bï¿½\u0015\u0006\u0018Nï¿½=\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0014ï¿½Llï¿½basic_istream<_CharT, _Traits> &std::operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c)\u0000@J\u0014\u0000\u0000@{\n\n@brief  Character extractors\n@param  __in  An input stream.\n@param  __c  A character reference.\n@return  in\n\nBehaves like one of the formatted arithmetic extractors described in\nstd::basic_istream.  After constructing a sentry object with good\nstatus, this function extracts a character (if one is available) and\nstores it in @a __c.  Otherwise, sets failbit in the input stream.\u0000\u0000\u0002ï¿½vï¿½\u001dï¿½&md)ï¿½?uï¿½\u0000\f\u0000\u0000\u0001ï¿½\u0002\bï¿½\u0002\u0018ï¿½\u0001\u0004\u0001ï¿½\u0002\bï¿½\u0002ï¿½\u0000\u0006ï¿½\u0002&ï¿½\u0002*ï¿½$@\u0001ï¿½\u0002&ï¿½\u0002*ï¿½$@\u0001ï¿½9\u0003$ï¿½9\u0003(ï¿½$@\u0001ï¿½?\u0003$ï¿½?\u0003(ï¿½$@\u0001ï¿½\u0003Zï¿½\u0003^$\u0001ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½$@\u0001ï¿½Ù¬ï¿½?ï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(unsigned short &__n)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0001ï¿½5ï¿½\u0007\f[\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½cï¿½\u0013ï¿½Sp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½3&1vPï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Åï¿½aï¿½\u0012ï¿½\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0012~\u001chX679\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½VON?73jï¿½inline basic_istream<char, _Traits> &std::operator>>(basic_istream<char, _Traits> &__in, signed char &__c)\u0000JT\u0014\u0001ï¿½\u0002\bï¿½\u0002\u001cï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u0002l\u0000\u0000\u0000\u0002ï¿½eï¿½oï¿½\u0016$\u0006ï¿½A?ï¿½ \u001eï¿½f\u0004ï¿½\u0002&ï¿½\u0002*ï¿½VON?73jï¿½\u0003ï¿½$@ï¿½\u0002&ï¿½\u0002*ï¿½!\u0015ï¿½'ï¿½\u0003ï¿½$@ï¿½\u0002&ï¿½\u0002*ï¿½\u0014ï¿½Llï¿½\u0003ï¿½$@ï¿½\u0002&ï¿½\u0002*ï¿½\u0002wï¿½\u0003_\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0005ï¿½\u0002&ï¿½\u0002*ï¿½$@\u0001ï¿½9\u0003$ï¿½9\u0003(ï¿½$@\u0001ï¿½?\u0003$ï¿½?\u0003(ï¿½$@\u0001ï¿½\u0003Zï¿½\u0003^$\u0001ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½$@\u0001ï¿½ÊYï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½0ï¿½\u001bï¿½5\u00032\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½ÕTï¿½a\u0005ï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(unsigned int &__n)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0001ï¿½\rï¿½\u0007S>m\u0004`\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½)ï¿½5ï¿½\u0014\u0019ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½=ï¿½\"^eï¿½u\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½]ï¿½\u001cUhï¿½Kï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½j\u0011gï¿½Ôï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Bï¿½qgï¿½Ø\u001fstd::basic_istream<wchar_t>::__istream_type &std::basic_istream<wchar_t>::getline(std::basic_istream<wchar_t>::char_type *__s, std::streamsize __n, std::basic_istream<wchar_t>::char_type __delim)\u0000Zï¿½\u000e\u0000\u0000\u0000\u0000\u0006ï¿½\u0000ï¿½Rï¿½?ï¿½-ï¿½\u001aï¿½yï¿½I)Ïï¿½Ktï¿½PfFï¿½\u0000\u0006\u0000\u0000\u0002ï¿½\u0002\bï¿½\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½\u0002\u0004ï¿½\u0002|ï¿½\u0002\bï¿½\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001ï¿½\u0000\u0000ï¿½7eoï¿½?ï¿½\u000bvoid std::__istream_extract(basic_istream<_CharT, _Traits> &, _CharT *, std::streamsize)\u0000\n\u0014\"\u0000\u0000@}\u0000\u0000\u0000\u0000\f\u0000\u0000\u0001ï¿½\u0002\bï¿½\u0002*ï¿½\u0001\u0004\u0001ï¿½\u0002\bï¿½\u0002ï¿½\u0000\u0001ï¿½0\u0003\u0010ï¿½0\u00032ï¿½$@\u0001ï¿½,ï¿½\u0001`(void std::__istream_extract(std::istream &, char *, std::streamsize)\u0000\n\u0014\"\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0001ï¿½\u0001\u0003\u000eï¿½\u0001\u00030ï¿½\u0001\u0004\u0001ï¿½\u0001\u0003\u0004ï¿½\u0001\u0003j\u0000\u0001ï¿½0\u0003\u0010ï¿½0\u00032ï¿½$@\u0001ï¿½\u0002wï¿½\u0003_basic_istream<_CharT, _Traits> &std::operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str)\u0000@J\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0006ï¿½\u0002&ï¿½\u0002*ï¿½$@\u0001ï¿½\u0002&ï¿½\u0002*ï¿½$@\u0001ï¿½9\u0003$ï¿½9\u0003(ï¿½$@\u0001ï¿½?\u0003$ï¿½?\u0003(ï¿½$@\u0001ï¿½\u0003Zï¿½\u0003^$\u0001ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½$@\u0001ï¿½Bï¿½_Yï¿½+ï¿½(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u000bï¿½=ï¿½ØH\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Pmuï¿½+\"ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½c,ï¿½0!Qï¿½mï¿½3\fKJ\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½lï¿½gï¿½inline basic_istream<_CharT, _Traits> &std::operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s)\u0000NX\u0014\u0001ï¿½\"\u0003\bï¿½\"\u0003\u001cï¿½\u0002\u0004\u0001ï¿½ \u0003\bï¿½3\u0003\n\u0000\u0000\u0000\u0003ï¿½<0B>ï¿½\u001bï¿½\u0015o\u0018ï¿½o4ï¿½.7ï¿½\u0018\u0003ï¿½*\u0003\u0010ï¿½*\u0003 ï¿½;ï¿½\u0002&ï¿½G\u0003ï¿½$@ï¿½0\u0003\u0010ï¿½0\u00032ï¿½,ï¿½\u0001`(\u0003ï¿½$@ï¿½0\u0003\u0010ï¿½0\u00032ï¿½7eoï¿½?ï¿½\u000b\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0004ï¿½9\u0003$ï¿½9\u0003(ï¿½$@\u0001ï¿½?\u0003$ï¿½?\u0003(ï¿½$@\u0001ï¿½\u0003Zï¿½\u0003^$\u0001ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½$@\u0001ï¿½;ï¿½\u0002&ï¿½Gvoid std::basic_ios::setstate(std::ios_base::iostate __state)\u0000\n*\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001ï¿½*\u0003\u0010ï¿½*\u0003 ï¿½$@\u0001ï¿½Dï¿½\u0007ï¿½Tï¿½basic_istream<_CharT, _Traits> &std::ws(basic_istream<_CharT, _Traits> &__is)\u0000@J\u0004\u0000\u0000 @brief  Quick and easy way to eat whitespace\n\n This manipulator extracts whitespace characters, stopping when the\n next character is non-whitespace, or when the input sequence is empty.\n If the sequence is empty, @c eofbit is set in the stream, but not\n @c failbit.\n\n The current locale is used to distinguish whitespace characters.\n\n Example:\n @code\n    MyClass   mc;\n\n    std::cin >> std::ws >> mc;\n @endcode\n will skip leading whitespace before calling operator>> on cin and your\n object.  Note that the same effect can be achieved by creating a\n std::basic_istream::sentry inside your definition of operator>>.\u0000\u0000\u0001ï¿½\u000e9ï¿½<?ï¿½\u0000\f\u0000\u0000\u0001ï¿½\u0003\bï¿½\u0003\fï¿½\u0001\u0004\u0001ï¿½\u0003\bï¿½\u0003X\u0000\u0000ï¿½*ï¿½nï¿½\u0000inline basic_istream<char, _Traits> &std::operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s)\u0000JT\u0014\u0001ï¿½8\u0003\bï¿½8\u0003\u001cï¿½\u0002\u0004\u0001ï¿½6\u0003\bï¿½9\u0003h\u0000\u0000\u0000\u0002ï¿½\u0004\u001bï¿½wï¿½SYï¿½]ï¿½\u0014ï¿½p\f\u0006ï¿½9\u0003$ï¿½9\u0003(ï¿½*ï¿½nï¿½\u0000\u0003ï¿½$@ï¿½9\u0003$ï¿½9\u0003(ï¿½lï¿½gï¿½\u0003ï¿½$@ï¿½9\u0003$ï¿½9\u0003(ï¿½VON?73jï¿½\u0003ï¿½$@ï¿½9\u0003$ï¿½9\u0003(ï¿½!\u0015ï¿½'ï¿½\u0003ï¿½$@ï¿½9\u0003$ï¿½9\u0003(ï¿½\u0014ï¿½Llï¿½\u0003ï¿½$@ï¿½9\u0003$ï¿½9\u0003(ï¿½\u0002wï¿½\u0003_\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0004ï¿½9\u0003$ï¿½9\u0003(ï¿½$@\u0001ï¿½?\u0003$ï¿½?\u0003(ï¿½$@\u0001ï¿½\u0003Zï¿½\u0003^$\u0001ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½$@\u0001ï¿½\u000eï¿½MXã¥©ï¿½inline basic_istream<char, _Traits> &std::operator>>(basic_istream<char, _Traits> &__in, signed char *__s)\u0000JT\u0014\u0001ï¿½>\u0003\bï¿½>\u0003\u001cï¿½\u0002\u0004\u0001ï¿½<\u0003\bï¿½?\u0003h\u0000\u0000\u0000\u0002ï¿½fï¿½]\tï¿½1ï¿½\u0016.|\u0007ï¿½?\u0003$ï¿½?\u0003(ï¿½\u000eï¿½MXã¥©ï¿½\u0003ï¿½$@ï¿½?\u0003$ï¿½?\u0003(ï¿½*ï¿½nï¿½\u0000\u0003ï¿½$@ï¿½?\u0003$ï¿½?\u0003(ï¿½lï¿½gï¿½\u0003ï¿½$@ï¿½?\u0003$ï¿½?\u0003(ï¿½VON?73jï¿½\u0003ï¿½$@ï¿½?\u0003$ï¿½?\u0003(ï¿½!\u0015ï¿½'ï¿½\u0003ï¿½$@ï¿½?\u0003$ï¿½?\u0003(ï¿½\u0014ï¿½Llï¿½\u0003ï¿½$@ï¿½?\u0003$ï¿½?\u0003(ï¿½\u0002wï¿½\u0003_\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0003ï¿½?\u0003$ï¿½?\u0003(ï¿½$@\u0001ï¿½\u0003Zï¿½\u0003^$\u0001ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½$@\u0001ï¿½4ï¿½htï¿½Hexplicit std::basic_iostream::basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb)\u0000\u0012<>\u0001ï¿½}\u0003\fï¿½}\u0003(ï¿½\u0002\u0004\u0001ï¿½|\u0003\fï¿½~\u0003l\u0000 @brief  Constructor does nothing.\n\n Both of the parent classes are initialized with the same\n streambuf pointer passed to this constructor.\u0000\u0000\u0001ï¿½Hcï¿½_ï¿½\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½m=ï¿½;ï¿½Ù±ï¿½virtual std::basic_iostream::~basic_iostream<_CharT, _Traits>()\u0000\u0010:@\u0001ï¿½\u0003\fï¿½\u0003*ï¿½B\u0004\u0001ï¿½\u0003\fï¿½\u00036\u0000 @brief  Destructor does nothing.\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½BKIÕ¦\fï¿½\u0005std::basic_iostream::basic_iostream<_CharT, _Traits>()\u0000\u0000*>\u0001ï¿½\u0003\fï¿½\u0003(ï¿½\u0002\u0004\u0001ï¿½\u0003\fï¿½\u0003\\\u0000\u0000\u0000\u0000\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½s@ï¿½1\tï¿½@constexpr typename std::remove_reference<_Tp>::type &&std::move(_Tp &&__t) noexcept\u0000lv\b\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0002ï¿½\u00038ï¿½\u0003@ï¿½$@\u0001ï¿½\u0003$ï¿½\u0003,ï¿½$@\u0001ï¿½9ï¿½\n\u001aÐÄinline __rvalue_stream_extraction_t<_Istream, _Tp> std::operator>>(_Istream &&__is, _Tp &&__x)\u0000fp\u0014\u0001ï¿½\u0003\bï¿½\u0003\u001cï¿½\u0002\u0004\u0001ï¿½\u0003\bï¿½\u0003\n\u0000 @brief  Generic extractor for rvalue stream\n @param  __is  An input stream.\n @param  __x  A reference to the extraction target.\n @return  __is\n\n This is just a forwarding function to allow extraction from\n rvalue streams since they won't bind to the extractor functions\n that take an lvalue reference.\u0000\u0000\u0002ï¿½\u001b`ï¿½yR:ï¿½m#ï¿½'Y\fï¿½\u0003\u0016ï¿½\u0003\u001aï¿½9ï¿½\n\u001aÐÄ\u0003ï¿½$@ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½\u000eï¿½MXã¥©ï¿½\u0003ï¿½$@ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½*ï¿½nï¿½\u0000\u0003ï¿½$@ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½lï¿½gï¿½\u0003ï¿½$@ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½VON?73jï¿½\u0003ï¿½$@ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½!\u0015ï¿½'ï¿½\u0003ï¿½$@ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½\u0014ï¿½Llï¿½\u0003ï¿½$@ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½\u0002wï¿½\u0003_\u0003ï¿½$@ï¿½\u0003&ï¿½\u00034ï¿½;Mï¿½?=\u001f\u0003ï¿½$@ï¿½\u0003&ï¿½\u00034ï¿½b\u0011\u001b\u0003ï¿½$@ï¿½\u0003$ï¿½\u0003,ï¿½s@ï¿½1\tï¿½@\u0003ï¿½$@ï¿½\u0003$ï¿½\u0003,ï¿½Bï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0001ï¿½\u0003\u0016ï¿½\u0003\u001aï¿½$@\u0001ï¿½Øï¿½ii\u0007ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½%qsï¿½0\u001b\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0015ï¿½\u0015\u001bï¿½5\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½}7ï¿½P(7t\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\r\u000bï¿½m]C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½t\u0015\u0015ï¿½d\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Uï¿½T`) \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Sï¿½\u0015ï¿½\u0013\u0019ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½`ï¿½;pï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0011ï¿½sï¿½Ú¾\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Sï¿½pï¿½4*ï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(long double &__f)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0001ï¿½1ï¿½Äï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\n\u001eï¿½f2ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½î ®85wx\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½3ï¿½ï¿½fï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Û£ï¿½Iï¿½\u0017Z\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u001a7Hiï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½z\u001aP\u0013ï¿½Pï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Vï¿½>)\u0015@ï¿½\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\\ï¿½\u0017ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u001c?ï¿½Hï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0013W\u0010.ï¿½\f\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½>uï¿½'std::basic_istream::__istream_type &std::basic_istream::seekg(std::basic_istream::off_type, ios_base::seekdir)\u0000Hp\n\u0000\u0000 @brief  Changing the current read position.\n @param  __off  A file offset object.\n @param  __dir  The direction in which to seek.\n @return  *this\n\n If @c fail() is not true, calls @c rdbuf()->pubseekoff(__off,__dir).\n If that function fails, sets failbit.\n\n @note  This function first clears eofbit.  It does not count the\n        number of characters extracted, if any, and therefore does\n        not affect the next call to @c gcount().\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½Y\u0002\fï¿½Y\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½X\u0002\fï¿½Y\u0002P\u0000\u0000ï¿½\u001fï¿½Bï¿½\u0001ï¿½7e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0000#Ú°-ï¿½A\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½ynqÖï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½0@iÜ\u0017ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½ ï¿½Z\u000fï¿½std::basic_istream::__istream_type &std::basic_istream::operator>>(long &__n)\u0000Hp\u0014\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0001ï¿½Õ©ï¿½|ï¿½*ï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½9ï¿½\rï¿½#\u0012\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\bï¿½\u0011ï¿½-9U\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½hï¿½\u000b2bï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003ï¿½\u0011ï¿½xï¿½%\u0013\u00187ï¿½\u001cï¿½Cï¿½h>Cï¿½ghk\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½8ï¿½'ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½@ï¿½tÉ¯\"ï¿½ ï¿½0ï¿½\u0006ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½9ï¿½3ï¿½explicit std::basic_istream::sentry::sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws)\u0000\u0012J\f\u0000\u0000 @brief  The constructor performs all the work.\n @param  __is  The input stream to guard.\n @param  __noskipws  Whether to consume whitespace or not.\n\n If the stream state is good (@a __is.good() is true), then the\n following actions are performed, otherwise the sentry state\n is false (<em>not okay</em>) and failbit is set in the\n stream state.\n\n The sentry's preparatory actions are:\n\n -# if the stream is tied to an output stream, @c is.tie()->flush()\n    is called to synchronize the output sequence\n -# if @a __noskipws is false, and @c ios_base::skipws is set in\n    @c is.flags(), the sentry extracts and discards whitespace\n    characters from the stream.  The currently imbued locale is\n    used to determine whether each character is whitespace.\n\n If the stream state is still good, then the sentry state becomes\n true (@a okay).\u0000\u0000\u0002ï¿½%Sï¿½Ì¢$\u0013ï¿½Ç³ï¿½\\ï¿½\u001dï¿½\u0000\t\u0000\u0000\u0001ï¿½\u0002\fï¿½\u0002\u0018ï¿½\u0001\u0004\u0001ï¿½\u0002\fï¿½\u0002ï¿½\u0000\u0000ï¿½Âï¿½Gï¿½@\u0003ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½EK\fï¿½?ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Ã±Gy[vstd::basic_istream::__istream_type &std::basic_istream::get(std::basic_istream::__streambuf_type &__sb, std::basic_istream::char_type __delim)\u0000Hp\u0006\u0000\u0000 @brief  Extraction into another streambuf.\n @param  __sb  A streambuf in which to store data.\n @param  __delim  A \"stop\" character.\n @return  *this\n\n Characters are extracted and inserted into @a __sb until one of the\n following happens:\n\n - the input sequence reaches EOF\n - insertion into the output buffer fails (in this case, the\n   character that would have been inserted is not extracted)\n - the next character equals @a __delim (in this case, the character\n   is not extracted)\n - an exception occurs (and in this case is caught)\n\nIf no characters are stored, failbit is set in the stream's error\nstate.\u0000\u0000\u0002ï¿½2vï¿½Xï¿½&:ï¿½^\nï¿½I6Krï¿½\u0000\u0006\u0000\u0000\u0001ï¿½x\u0001\fï¿½x\u0001\u0012ï¿½\u0001\u0004\u0001ï¿½w\u0001\fï¿½x\u0001h\u0000\u0000ï¿½\u0010ï¿½Gu/F!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½lFiÝªQ\fï¿½W<\u0018r<\u000b\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Qï¿½\u0003ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½62ï¿½)ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0012;ï¿½ÏWÑ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½cï¿½\tï¿½)\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½9xWï¿½\u0005/std::basic_istream<char>::__istream_type &std::basic_istream<char>::_M_extract(_ValueT &__v)\u0000Tï¿½\u0014\u0000\u0000\u0000\u0000\u0001ï¿½'ï¿½3f^!<ï¿½\u0000\u0006\u0000\u0000\u0001ï¿½\u0002\u0002ï¿½\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½\u0002\u0002ï¿½\u00022\u0000\u0000ï¿½\u0015ï¿½?#3ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½3`ï¿½\u000e@\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Lg <ï¿½=ï¿½k\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½,\u001aï¿½\u0012ï¿½)\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\"ï¿½\u0005\\ï¿½S\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½^Q\u001fh+ï¿½{\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Co]ï¿½|ï¿½std::basic_istream::int_type std::basic_istream::get()\u0000:b\u0006\u0000\u0000 @brief  Simple extraction.\n @return  A character, or eof().\n\n Tries to extract a character.  If none are available, sets failbit\n and returns traits::eof().\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½-\u0001\fï¿½-\u0001\u0012ï¿½\u0001\u0004\u0001ï¿½,\u0001\fï¿½-\u0001\u0016\u0000\u0000ï¿½)\u0014ï¿½dï¿½iï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Dï¿½5Hï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000[ï¿½Qï¿½8ï¿½\u0011Ó«typedef std::wstreampos std::char_traits<wchar_t>::pos_type\u00000f\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½ë?ï¿½Pï¿½\u0000\u0000\u0000\u0000\u0002?@?P\u0004\u0001ï¿½n\u0003@ï¿½n\u0003P\u0004\u0001ï¿½LÊï¿½Ó¤typedef wint_t std::char_traits<wchar_t>::int_type\u0000\u001eT\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0002>@>P\u0004\u0001ï¿½m\u0003@ï¿½m\u0003P\u0004\u0001ï¿½l\u000e=nï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004ï¿½%qsï¿½0\u001bï¿½é¾\u0007ï¿½4\u0016ï¿½@ï¿½tÉ¯\"ï¿½EK\fï¿½?ï¿½\u0000ï¿½Ôï¿½\u0018Û\u001cï¿½template<> class std::ctype<char> : public locale::facet, public std::ctype_base {}\u0000\",\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001I\u001cI&\u0004\u0001ï¿½\u000bï¿½\u000bxï¿½typedef std::streampos std::char_traits<char>::pos_type\u0000.^\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½I\rï¿½4{ï¿½\u0000\u0000\u0000\u0000\u0002?@?P\u0004\u0001ï¿½n\u0003@ï¿½n\u0003P\u0004\u0001ï¿½Þ«ï¿½È±typedef int std::char_traits<char>::int_type\u0000\u0018H\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0002>@>P\u0004\u0001ï¿½m\u0003@ï¿½m\u0003P\u0004\u0001ï¿½Ô¸\u00017Sï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0003Nï¿½\u0003T\u0001\u0001ï¿½\u0003<ï¿½\u0003T\u0000\u0001ï¿½m#ï¿½'Y\u0003ï¿½\u0003dï¿½\u0003j\u0004\u0001ï¿½\u0003@ï¿½\u0003F\u0004\u0001ï¿½\u00036ï¿½\u0003<\u0004\u0001ï¿½HE\u0003ï¿½!ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004ï¿½Bï¿½vï¿½Y,ï¿½(Q:\u001c\u001fï¿½\u00013Tï¿½Õ«ï¿½!XEï¿½i2\u0000ï¿½^ï¿½\u0019ï¿½using std::__rvalue_stream_extraction_t = _Is &&\u0000\f\u00168\u0000\u0000\u0001ï¿½\u0003\u0014ï¿½\u0003Lï¿½\u0002\u0004\u0001ï¿½\u0003\bï¿½\u0003\\\u0000\u0000\u0000\u0000ï¿½rï¿½Íªp3ï¿½\u0003\u0000\u0000\u0000\u0001ï¿½\u0003\u0016ï¿½\u0003N\u0004\u0001ï¿½H(jï¿½\u001fï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0017-ï¿½?ï¿½R\u001atemplate <typename _Tp> using std::_Require_derived_from_ios_base = _Require<is_class<_Tp>, __not_<is_same<_Tp, std::ios_base>>, is_convertible<typename add_pointer<_Tp>::type, std::ios_base *>>\u0000<F<\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½H(jï¿½\u001fï¿½\u0000\u0000\u0000\u0000\u0001ï¿½\u0003\u001eï¿½\u0003Z\u0004\u0001ï¿½\u001aï¿½IÍKQ_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0003Dï¿½\u0003Jï¿½\u0001\u0004\u0001ï¿½\u00032ï¿½\u0003J\u0000\u0000\u0001ï¿½\u0003zï¿½\u0003ï¿½\u0004\u0001ï¿½rï¿½Íªp3_Is\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0003(ï¿½\u0003.ï¿½\u0001\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003.\u0000\u0000\u0003ï¿½\u0003\\ï¿½\u0003b\u0004\u0001ï¿½\u0003Jï¿½\u0003P\u0004\u0001ï¿½\u0003Rï¿½\u0003X\u0004\u0001ï¿½+!>ï¿½fï¿½D\u0006template<> class std::ctype<wchar_t> : public __ctype_abstract_base<wchar_t> {}\u0000\",\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001I\u001cI&\u0004\u0001ï¿½C]ï¿½\u0002Íªr%_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0003Jï¿½\u0003X\u0001\u0001ï¿½\u00038ï¿½\u0003X\u0000\u0000\u0002ï¿½\u00034ï¿½\u0003B\u0004\u0001ï¿½\u0003:ï¿½\u0003H\u0004\u0001ï¿½Sï¿½T\u000bï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0003(ï¿½\u00034\u0001\u0001ï¿½\u0003\u0016ï¿½\u00034\u0000\u0000\u0002ï¿½\u0003$ï¿½\u00030\u0004\u0001ï¿½\u0003*ï¿½\u00036\u0004\u0001ï¿½\u0002ï¿½4ï¿½typedef _Traits std::basic_iostream::traits_type\u0000 J\u0016\u0000\u0000\u0001ï¿½p\u00036ï¿½p\u0003Lï¿½\u0002\u0004\u0001ï¿½p\u0003\fï¿½p\u0003L\u0000\u0000\u0000\u0000ï¿½=ï¿½Ïï¿½;ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½,L\u001eï¿½\u0010\u001aotypedef typename _Traits::off_type off_type\u0000\"4\u0010\u0000\u0000\u0001ï¿½o\u0003Vï¿½o\u0003fï¿½\u0002\u0004\u0001ï¿½o\u0003\fï¿½o\u0003f\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½Kï¿½\nEQï¿½\u0006\u0019typedef typename _Traits::pos_type pos_type\u0000\"4\u0010\u0000\u0000\u0001ï¿½n\u0003Vï¿½n\u0003fï¿½\u0002\u0004\u0001ï¿½n\u0003\fï¿½n\u0003f\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½Zï¿½-ï¿½Uï¿½typedef _CharT std::basic_iostream::char_type\u0000\u001eH\u0012\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\n271. basic_iostream missing typedefs\nTypes (inherited):\u0000\u0001ï¿½l\u00034ï¿½l\u0003Fï¿½\u0002\u0004\u0001ï¿½l\u0003\fï¿½l\u0003F\u0000\u0000\u0000\u0000ï¿½gï¿½xï¿½Qï¿½\u0005\u0000\u0000\u0000\u0000ï¿½G<ï¿½=Xï¿½|\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bï¿½\u0001ï¿½Qï¿½Nï¿½=ï¿½\"^eï¿½uï¿½\u0011ï¿½xï¿½%\u0013\u00187ï¿½c,ï¿½0!Qï¿½Ê£ï¿½Ù ï¿½Ôï¿½lFiÝªQ\fï¿½\u0006\u0011@\u0001Èï¿½<1ï¿½Lï¿½\u0019ï¿½\u0000ï¿½kï¿½sï¿½<ï¿½W\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004ï¿½Zï¿½8ï¿½?ï¿½dR0ï¿½\u0015ï¿½Rï¿½7kï¿½`ï¿½9xWï¿½\u0005/\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½I\rï¿½4{ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½8ï¿½U\u0013typedef std::_Ios_Seekdir std::ios_base::seekdir\u00004R\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Vï¿½@0ï¿½\u0017>ï¿½\u0000\u0000\u0000\u0000\u0001ï¿½Y\u0002@ï¿½Y\u0002N\u0004\u0001ï¿½]ï¿½\bï¿½rï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½(oï¿½\u0004bï¿½template<> struct __gnu_cxx::__numeric_traits<long> : public __numeric_traits_integer<long> {}\u0000$: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0001ï¿½/\u0003,ï¿½/\u0003L\u0004\u0001ï¿½jï¿½\u0010u91template <typename _CharT, typename _Traits = char_traits<_CharT>> class std::basic_ostream : virtual public basic_ios<_CharT, _Traits> {}\u0000ï¿½\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0001ï¿½qï¿½Mï¿½bï¿½\u0000\u0002ï¿½f\u0003\u001aï¿½f\u00034ï¿½\u0004\b\u0001ï¿½t\u0003\u001cï¿½t\u00036\u0004\u0001ï¿½\u0014]ï¿½Zï¿½typedef std::ptrdiff_t std::streamsize\u0000.8\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½]ï¿½\bï¿½rï¿½Vï¿½\u0000\u0000\u0000\u0000\u0017Q\fQ \u0004\u0001]$]8\u0004\u0001g(g<\u0004\u0001ï¿½\u000b\u0001\fï¿½\u000b\u0001 \u0004\u0001ï¿½V\u00014ï¿½V\u0001H\u0004\u0001ï¿½a\u00014ï¿½a\u0001H\u0004\u0001ï¿½\u0001<ï¿½\u0001P\u0004\u0001ï¿½\u0001<ï¿½\u0001P\u0004\u0001ï¿½\u0001\u001aï¿½\u0001.\u0004\u0001ï¿½\u0001\u001aï¿½\u0001.\u0004\u0001ï¿½\u00016ï¿½\u0001J\u0004\u0001ï¿½\u0001\fï¿½\u0001 \u0004\u0001ï¿½\u0001>ï¿½\u0001R\u0004\u0001ï¿½^\u0002$ï¿½^\u00028\u0004\u0001ï¿½\u00028ï¿½\u0002L\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002*\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002*\u0004\u0001ï¿½\u00028ï¿½\u0002L\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002*\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002*\u0004\u0001ï¿½\u0002ï¿½\u0002ï¿½\u0004\u0001ï¿½\u0001\u0003Tï¿½\u0001\u0003h\u0004\u0001ï¿½/\u0003Nï¿½/\u0003b\u0004\u0001ï¿½Pï¿½U\u0014ï¿½,ï¿½etypedef ctype<_CharT> std::basic_istream::__ctype_type\u0000,T\u0018\u0000\u0000\u0001IJIbï¿½\u0002\u0004\u0001I\fIb\u0000\u0000\u0000\u0000ï¿½\u001dï¿½(]^ï¿½_3ï¿½\u0005\u0000\u0000\u0000\u0001ï¿½\u0002Nï¿½\u0002f\u0004\u0001ï¿½Vï¿½@0ï¿½\u0017>\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½hO5ï¿½j\u0002ï¿½2ï¿½\u0018ï¿½M6ï¿½\u0000ï¿½X\u0006Dï¿½typedef basic_istream<_CharT, _Traits> std::basic_iostream::__istream_type\u0000Nx\u001c\u0000Non-standard Types:\u0000\u0001ï¿½s\u0003\\ï¿½s\u0003xï¿½\u0002\u0004\u0001ï¿½s\u0003\fï¿½s\u0003x\u0000\u0000\u0000\u0000ï¿½1lï¿½Jï¿½\u0005\u0000\u0000\u0000\u0004ï¿½~\u0003\u0010ï¿½~\u0003,\u0004\u0001ï¿½\u0003\u0010ï¿½\u0003,\u0004\u0001ï¿½\u0003\u0010ï¿½\u0003,\u0004\u0001ï¿½\u0003\u0010ï¿½\u0003,\u0004\u0001ï¿½5ï¿½_class std::basic_istream::sentry {}\u0000\f4\f\u0000Safe prefix/suffix operations.\u0000\u0001ï¿½\u0002Tï¿½\u0002`ï¿½\u0002\u0004\u0001ï¿½\u0002\u0004ï¿½\u0002\n\u0000\u0002ï¿½9ï¿½3ï¿½(\u0001:=\u000f^ï¿½\u0005ï¿½4\u0014ï¿½Hï¿½y/Bï¿½Tï¿½)A\"y\u001eï¿½Bï¿½kWï¿½\"ï¿½\u0018ï¿½,kCï¿½Ï¯ï¿½eï¿½RO9ï¿½WÝ¶\u0001ï¿½{5ï¿½>\u0000]0t\u0001\u0000\u0005\u0005\u0001j\u0018j$ï¿½\u0001\u0004\u0001j\fj$\u0000\u0000\u0002k&k2\u0004\u0001ï¿½\u0002\fï¿½\u0002\u0018\u0004\u0001ï¿½wN&ï¿½\u001dï¿½+\\_ValueT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0003ï¿½~\u00020ï¿½~\u0002>\u0001\u0001ï¿½~\u0002\u001eï¿½~\u0002>ï¿½~\u00020ï¿½~\u0002>\u0001\u0001ï¿½~\u0002\u001eï¿½~\u0002>ï¿½~\u00020ï¿½~\u0002>\u0001\u0001ï¿½~\u0002\u001eï¿½~\u0002>\u0000\u0003ï¿½<ï¿½\u000eqï¿½\u0014ï¿½'ï¿½3f^!<ï¿½\u001et;Ì¿ï¿½\u0001ï¿½\u0002\u0018ï¿½\u0002&\u0004\u0001ï¿½. 1ï¿½8ï¿½\u001b\u001ctemplate <typename _CharT, typename _Traits = char_traits<_CharT>> class std::istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT> {}\u0000ï¿½&\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001G<Gb\u0004\u0001ï¿½1lï¿½Jï¿½class std::basic_istream : virtual public basic_ios<_CharT, _Traits> {}\u0000\f\u0016\u001a\u0000\u0000\u00019\u00149.ï¿½\u0002\u0004\u00019\bï¿½\u0002\n\u0001ï¿½g\nGSï¿½9ï¿½j/ï¿½zC>ï¿½\u0012Rï¿½Bï¿½&ï¿½qï¿½hï¿½dï¿½gBï¿½\u0004Wï¿½/ï¿½à°ï¿½$ï¿½Pï¿½\bï¿½Gï¿½\u0005ï¿½\u0010\u001a\t~ï¿½Ù¬ï¿½?ï¿½Cï¿½\u0016\\ï¿½\u0014ï¿½ÕTï¿½a\u0005ï¿½ ï¿½Z\u000fï¿½Cï¿½X7ï¿½*ï¿½\fï¿½\u0012\fï¿½@ï¿½%ï¿½\nï¿½Elï¿½mRtï¿½Jï¿½,ï¿½tï¿½Sï¿½pï¿½4*ï¿½bï¿½cbï¿½\u0013Bï¿½/\u001eï¿½qï¿½Fï¿½\rï¿½Zï¿½Co]ï¿½|ï¿½\u0018ï¿½æOï¿½\u0014,ï¿½Xï¿½Qï¿½\u001aï¿½]ï¿½\u000e\u0011(\bï¿½Mï¿½Ã±Gy[vï¿½\n\\ï¿½Ù¼\u001f_ï¿½Uï¿½kï¿½{ï¿½~YNï¿½%ï¿½\u000f)ï¿½!Ubï¿½#;ï¿½\u0012Y\u0011m7ï¿½\u001bï¿½Jï¿½\u0019)ï¿½SØ¡ï¿½Pï¿½yï¿½9G@ï¿½=ï¿½(ï¿½'ï¿½+ï¿½m[S\u000bï¿½dï¿½X,ï¿½/Cï¿½3R\u0017ï¿½Fï¿½dï¿½:ï¿½\u000fï¿½\u0017ï¿½\u0017Wz\u0011ï¿½>uï¿½'ï¿½\u0017ï¿½G/ï¿½)ï¿½-&\rï¿½*ï¿½Í·ï¿½x\u0010\u00050ï¿½+}yï¿½rWï¿½h_ï¿½Òï¿½×±ï¿½gï¿½,ï¿½gï¿½\u000eQz7\fï¿½Rï¿½8ï¿½ ï¿½fï¿½\u00154Mï¿½\u0013bH*ï¿½,ï¿½n\u0014\u0011u*\u0015ï¿½å£eï¿½\u0010ï¿½Nï¿½G/Èï¿½_QÊ½ï¿½wï¿½\u0017ï¿½aï¿½Ç\r|ï¿½\u001bï¿½UÑ³~\u0005ï¿½Pï¿½U\u0014ï¿½,ï¿½eï¿½5ï¿½_ï¿½5ï¿½_\u0001ï¿½\f\u0015ï¿½?ï¿½ @ï¿½\u0001\u0000\u0005\u0003\u0000\u0001ï¿½qï¿½Mï¿½bï¿½\u0011ï¿½\u0005Äï¿½N!ï¿½Tï¿½\fqï¿½Inï¿½@uï¿½%Sï¿½Ì¢$\u0013ï¿½vï¿½\u001dï¿½&md)ï¿½)ï¿½+ï¿½C*`ï¿½eï¿½oï¿½\u0016$\u0006ï¿½<0B>ï¿½\u001bï¿½\u0004\u001bï¿½wï¿½SYï¿½fï¿½]\tï¿½1ï¿½\u000e9ï¿½<?ï¿½62ï¿½)ï¿½cï¿½\tï¿½)ï¿½<ï¿½Èï¿½85ï¿½\u0007<ï¿½6+ï¿½Zï¿½#ï¿½\rï¿½b\u0007\"ï¿½axk6ï¿½$s-F\u001cF6\u0004\u0001\\\f\\&\u0004\u0001f\u000ef(\u0004\u0001ï¿½]\u0002\fï¿½]\u0002&\u0004\u0001ï¿½b\u00024ï¿½b\u0002N\u0004\u0001ï¿½b\u0002\fï¿½b\u0002&\u0004\u0001ï¿½d\u0002(ï¿½d\u0002B\u0004\u0001ï¿½d\u0002\fï¿½d\u0002&\u0004\u0001ï¿½m\u0002\fï¿½m\u0002&\u0004\u0001ï¿½m\u0002Jï¿½m\u0002d\u0004\u0001ï¿½o\u0002\fï¿½o\u0002&\u0004\u0001ï¿½p\u0002 ï¿½p\u0002:\u0004\u0001ï¿½w\u0002\u0016ï¿½w\u00020\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\u0014ï¿½\u0002.\u0004\u0001ï¿½\u0002\u001cï¿½\u00026\u0004\u0001ï¿½\u0002\u001aï¿½\u00024\u0004\u0001ï¿½\u0002\bï¿½\u0002\"\u0004\u0001ï¿½\u0002\u001eï¿½\u00028\u0004\u0001ï¿½\u0002\u0016ï¿½\u00020\u0004\u0001ï¿½\u0002\u001eï¿½\u00028\u0004\u0001ï¿½\u0002\u0016ï¿½\u00020\u0004\u0001ï¿½\u0002\u001eï¿½\u00028\u0004\u0001ï¿½\u0002,ï¿½\u0002F\u0004\u0001ï¿½!\u0003\u0016ï¿½!\u00030\u0004\u0001ï¿½\"\u0003\u001eï¿½\"\u00038\u0004\u0001ï¿½7\u0003\u0016ï¿½7\u00030\u0004\u0001ï¿½8\u0003\u001eï¿½8\u00038\u0004\u0001ï¿½=\u0003\u0016ï¿½=\u00030\u0004\u0001ï¿½>\u0003\u001eï¿½>\u00038\u0004\u0001ï¿½e\u0003\u001aï¿½e\u00034ï¿½\u0004\b\u0001ï¿½s\u0003\u001cï¿½s\u00036\u0004\u0001ï¿½\u0003\bï¿½\u0003\"\u0004\u0001ï¿½\u0003\u000eï¿½\u0003(\u0004\u0001ï¿½\\$`aFï¿½\u00125template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class std::num_get : public locale::facet {}\u0000ï¿½\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001G\u001cG*\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005ï¿½`Ã\u001f Xï¿½M\u000b\fZï¿½\u0014ï¿½Ktï¿½PfFï¿½WLï¿½\u0010ï¿½\u0000ï¿½RO9ï¿½WÝ¶typedef typename _Traits::int_type std::basic_istream::sentry::__int_type\u0000F~\u0014\u0000\u0000\u0001ï¿½\u0002Tï¿½\u0002hï¿½\u0002\u0004\u0001ï¿½\u0002\fï¿½\u0002h\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u001bï¿½UÑ³~\u0005ï¿½typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits>> std::basic_istream::__num_get_type\u0000|ï¿½\u001c\u0000\u0000\u0001H\u0010H,ï¿½\u0002\u0004\u0001G\fH,\u0000\u0000\u0000\u0000ï¿½\\$`aFï¿½\u00125ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½Z\bï¿½\u0005ï¿½7ï¿½Jnamespace std {}\u0000\u0014\u0014\u0006\u0000Outline of libstdc++ namespaces.\n\nnamespace std\n{\nnamespace __debug { }\nnamespace __parallel { }\nnamespace __cxx1998 { }\n\nnamespace __detail {\nnamespace __variant { }\t\t\t\t// C++17\n}\n\nnamespace rel_ops { }\n\nnamespace tr1\n{\nnamespace placeholders { }\nnamespace regex_constants { }\nnamespace __detail { }\n}\n\nnamespace tr2 { }\n\nnamespace decimal { }\n\nnamespace chrono { }\t\t\t\t// C++11\nnamespace placeholders { }\t\t\t\t// C++11\nnamespace regex_constants { }\t\t\t// C++11\nnamespace this_thread { }\t\t\t\t// C++11\ninline namespace literals {\t\t\t\t// C++14\ninline namespace chrono_literals { }\t\t// C++14\ninline namespace complex_literals { }\t\t// C++14\ninline namespace string_literals { }\t\t// C++14\ninline namespace string_view_literals { }\t\t// C++17\n}\n}\n\nnamespace abi { }\n\nnamespace __gnu_cxx\n{\nnamespace __detail { }\n}\n\nFor full details see:\nhttp://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html\u0000\u0000\u0000\nï¿½\u0014ï¿½Llï¿½!\u0015ï¿½'ï¿½VON?73jï¿½7eoï¿½?ï¿½\u000bï¿½,ï¿½\u0001`(ï¿½lï¿½gï¿½*ï¿½nï¿½\u0000ï¿½\u000eï¿½MXã¥©ï¿½Dï¿½\u0007ï¿½Tï¿½9ï¿½\n\u001aÐÄ\u0005ï¿½1lï¿½Jï¿½qï¿½Mï¿½bï¿½rï¿½Íªp3ï¿½\u001aï¿½IÍKQï¿½^ï¿½\u0019ï¿½\u0000\u0000\u0003\u0000\u0001(\u0014(\u001a\u0001\u0001(\u0000ï¿½\u0003\u0002\u0000\u0000\u0007ï¿½z\u0002\u0002ï¿½z\u0002\b\u0004\u0001ï¿½0\u0003\u0006ï¿½0\u0003\f\u0004\u0001ï¿½\u0003.ï¿½\u00034\u0004\u0001ï¿½\u00030ï¿½\u00036\u0004\u0001ï¿½\u0003`ï¿½\u0003f\u0004\u0001ï¿½\u0003\u001cï¿½\u0003\"\u0004\u0001ï¿½\u0003\u001aï¿½\u0003 \u0004\u0001ï¿½=ï¿½Ïï¿½;ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\tï¿½e\u0003Fï¿½e\u0003T\u0004\u0001ï¿½f\u0003Fï¿½f\u0003T\u0004\u0001ï¿½m\u0003.ï¿½m\u0003<\u0004\u0001ï¿½n\u0003.ï¿½n\u0003<\u0004\u0001ï¿½o\u0003.ï¿½o\u0003<\u0004\u0001ï¿½p\u0003\u001cï¿½p\u0003*\u0004\u0001ï¿½s\u0003Hï¿½s\u0003V\u0004\u0001ï¿½t\u0003Hï¿½t\u0003V\u0004\u0001ï¿½}\u0003Zï¿½}\u0003h\u0004\u0001ï¿½\fï¿½Zbï¿½class std::ios_base {}\u0000\f\u0016\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0004ï¿½\"ï¿½2\u0004\u0001ï¿½Fï¿½V\u0004\u0001ï¿½Y\u0002,ï¿½Y\u0002<\u0004\u0001ï¿½*\u0003\"ï¿½*\u00032\u0004\u0001ï¿½\u001dï¿½(]^ï¿½_3template <typename _CharT> class std::ctype : public __ctype_abstract_base<_CharT> {}\u0000BL\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001I\u001cI&\u0004\u0001ï¿½Rï¿½8ï¿½ ï¿½typedef _CharT std::basic_istream::char_type\u0000\u001eF\u0012\u0000Types (inherited from basic_ios (27.4.4)):\u0000\u0001=4=Fï¿½\u0002\u0004\u0001=\f=F\u0000\u0000\u0000\u0000ï¿½-Kï¿½Viï¿½\u0005\u0000\u0000\u000bï¿½Eï¿½zï¿½Q Yï¿½\"ï¿½Íï¿½S\u001d%<\u00167ï¿½E1Mï¿½bGBï¿½^\nï¿½I6Krï¿½pï¿½:ï¿½t7ï¿½\u001bï¿½tï¿½\u0006\u0001ï¿½iï¿½5}a>Ýï¿½\u000bï¿½Kï¿½\"ï¿½Y5ï¿½Kï¿½5ï¿½,ï¿½Nï¿½5O^ï¿½\u000fï¿½;\u0001\u0014ï¿½;\u0001&\u0004\u0001ï¿½V\u0001\u0014ï¿½V\u0001&\u0004\u0001ï¿½V\u0001Tï¿½V\u0001f\u0004\u0001ï¿½a\u0001\u0014ï¿½a\u0001&\u0004\u0001ï¿½x\u0001Dï¿½x\u0001V\u0004\u0001ï¿½\u0001\u001cï¿½\u0001.\u0004\u0001ï¿½\u0001\\ï¿½\u0001n\u0004\u0001ï¿½\u0001\u001cï¿½\u0001.\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001(\u0004\u0001ï¿½\u0001\u001eï¿½\u00010\u0004\u0001ï¿½\t\u0002\u001cï¿½\t\u0002.\u0004\u0001ï¿½\u0002\u0018ï¿½\u0002*\u0004\u0001ï¿½\u0002Xï¿½\u0002j\u0004\u0001ï¿½\u0002\u0018ï¿½\u0002*\u0004\u0001ï¿½\u0002Xï¿½\u0002j\u0004\u0001ï¿½n\u0014\u0011u*\u0015ï¿½typedef typename _Traits::off_type off_type\u0000\"4\u0010\u0000\u0000\u0001@V@fï¿½\u0002\u0004\u0001@\f@f\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0001ï¿½Y\u0002\u0018ï¿½Y\u0002(\u0004\u0001ï¿½\u0013bH*ï¿½,ï¿½typedef typename _Traits::pos_type pos_type\u0000\"4\u0010\u0000\u0000\u0001?V?fï¿½\u0002\u0004\u0001?\f?f\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0002ï¿½9\u0002\fï¿½9\u0002\u001c\u0004\u0001ï¿½I\u0002\u0018ï¿½I\u0002(\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001fï¿½\f\u0015ï¿½?ï¿½ @ï¿½)cï¿½Cï¿½^\"\u0011ï¿½Kï¿½2zWï¿½aTï¿½^ï¿½\u000eï¿½Nu8ï¿½U\u000fï¿½73Dï¿½#ï¿½t\u0005~ï¿½jï¿½9\u001bï¿½Ð²ï¿½\\-ï¿½NÌ\u0016ï¿½\u0013ï¿½\u001bï¿½Ytï¿½\b\u001aï¿½$Vï¿½\"ï¿½\u001c\"ï¿½Rï¿½Rï¿½?ï¿½%\tQ\"ï¿½Jï¿½2\u0011\u001aBï¿½\u001cï¿½Cï¿½mï¿½3\fKJï¿½\bï¿½-ï¿½W<\u0018r<\u000b\u0004ï¿½^\b\fYï¿½o\u001e\u0010ï¿½Ï`tï¿½Zï¿½~ï¿½pï¿½Mï¿½*8\u000b\u001e\rï¿½6ï¿½@Q}ï¿½)V=ï¿½\u0011$ï¿½F*ï¿½yï¿½I)Ïï¿½qï¿½Wï¿½\u001eï¿½/ï¿½jï¿½\u000b\u001bSQ\u0017ï¿½sï¿½z\u0002ï¿½A8Yï¿½QYï¿½3ï¿½8\u000fh\u0013OTï¿½\u0000ï¿½ë?ï¿½P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½g\nGSï¿½9ï¿½jtemplate <typename _CharT, typename _Traits = char_traits<_CharT>> class std::basic_ios : public std::ios_base {}\u0000ï¿½\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0001ï¿½1lï¿½Jï¿½\u0000\u00029R9dï¿½\u0004\b\u0001E\u001cE.\u0004\u0001ï¿½\u0015ï¿½4+ï¿½VI=_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u001f\u0003(ï¿½\u001f\u00034\u0001\u0001ï¿½\u001f\u0003\u0016ï¿½\u001f\u00034\u0000\u0001ï¿½\u0015o\u0018ï¿½o4\u0007ï¿½!\u00032ï¿½!\u0003>\u0004\u0001ï¿½\"\u0003:ï¿½\"\u0003F\u0004\u0001ï¿½\"\u0003jï¿½\"\u0003v\u0004\u0001ï¿½%\u0003Pï¿½%\u0003\\\u0004\u0001ï¿½(\u0003Dï¿½(\u0003P\u0004\u0001ï¿½(\u0003Dï¿½(\u0003P@\u0000ï¿½0\u0003dï¿½0\u0003p\u0004\u0001ï¿½\u0006#ï¿½9Uï¿½Gtypedef std::streamoff std::char_traits<wchar_t>::off_type\u0000.d\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½_6Gï¿½D}ï¿½\u0000\u0000\u0000\u0000\u0002@@@P\u0004\u0001ï¿½o\u0003@ï¿½o\u0003P\u0004\u0001ï¿½x'ï¿½\u0017v>typedef std::streamoff std::char_traits<char>::off_type\u0000.^\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½_6Gï¿½D}ï¿½\u0000\u0000\u0000\u0000\u0002@@@P\u0004\u0001ï¿½o\u0003@ï¿½o\u0003P\u0004\u0001ï¿½-Kï¿½Viï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\b9f9r\u0004\u0001=\u001c=(\u0004\u0001D<DH\u0004\u0001E0E<\u0004\u0001F8FD\u0004\u0001G,G8\u0004\u0001GdGp\u0004\u0001I(I4\u0004\u0001ï¿½\u0017ï¿½aï¿½Ç\r|typedef basic_istream<_CharT, _Traits> std::basic_istream::__istream_type\u0000Nv\u001c\u0000\u0000\u0001F\\Fxï¿½\u0002\u0004\u0001F\fFx\u0000\u0000\u0000\u0000ï¿½1lï¿½Jï¿½\u0005\u0000\u0000\u0000#v\fv(\u0004\u0001w\"w>\u0004\u0001wRwn\u0004\u0001z\fz(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\fï¿½(\u0004\u0001ï¿½\u0001\u0001\fï¿½\u0001\u0001(\u0004\u0001ï¿½:\u0001\fï¿½:\u0001(\u0004\u0001ï¿½U\u0001\fï¿½U\u0001(\u0004\u0001ï¿½`\u0001\fï¿½`\u0001(\u0004\u0001ï¿½w\u0001\fï¿½w\u0001(\u0004\u0001ï¿½\u0001\fï¿½\u0001(\u0004\u0001ï¿½\u0001\fï¿½\u0001(\u0004\u0001ï¿½\u0001\fï¿½\u0001(\u0004\u0001ï¿½\u0001\fï¿½\u0001(\u0004\u0001ï¿½\u0001\fï¿½\u0001(\u0004\u0001ï¿½\u0001\fï¿½\u0001(\u0004\u0001ï¿½\u0001\fï¿½\u0001(\u0004\u0001ï¿½\b\u0002\fï¿½\b\u0002(\u0004\u0001ï¿½\u0018\u0002\fï¿½\u0018\u0002(\u0004\u0001ï¿½H\u0002\fï¿½H\u0002(\u0004\u0001ï¿½X\u0002\fï¿½X\u0002(\u0004\u0001ï¿½\u0002\u0002ï¿½\u0002\u001e\u0004\u0001ï¿½PS!\nÏ¯\u001c\u0018_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0002\"ï¿½\u00020\u0001\u0001ï¿½\u0002\u0016ï¿½\u00020\u0000\u0000\u0002ï¿½\u0002>ï¿½\u0002L\u0004\u0001ï¿½\u0002Fï¿½\u0002T\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½.7ï¿½\u0018\u0000ï¿½xï¿½PDï¿½\rtypedef basic_ostream<_CharT, _Traits> std::basic_iostream::__ostream_type\u0000Nx\u001c\u0000\u0000\u0001ï¿½t\u0003\\ï¿½t\u0003xï¿½\u0002\u0004\u0001ï¿½t\u0003\fï¿½t\u0003x\u0000\u0000\u0000\u0000ï¿½jï¿½\u0010u91ï¿½\u0005\u0000\u0000\u0000\u0003ï¿½~\u0003<ï¿½~\u0003X\u0004\u0001ï¿½\u00034ï¿½\u0003P\u0004\u0001ï¿½\u0003Tï¿½\u0003p\u0004\u0001ï¿½sï¿½Aï¿½typedef typename _Traits::int_type int_type\u0000\"4\u0010\u0000\u0000\u0001ï¿½m\u0003Vï¿½m\u0003fï¿½\u0002\u0004\u0001ï¿½m\u0003\fï¿½m\u0003f\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½`ï¿½\u0010ï¿½Pï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\t9v9ï¿½\u0004\u0001>.><\u0004\u0001?.?<\u0004\u0001@.@<\u0004\u0001A\u001cA*\u0004\u0001DLDZ\u0004\u0001E@EN\u0004\u0001FHFV\u0004\u0001GtGï¿½\u0004\u0001ï¿½lÞDï¿½=_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u001f\u0003Jï¿½\u001f\u0003X\u0001\u0001ï¿½\u001f\u00038ï¿½\u001f\u0003X\u0000\u0000\u0002ï¿½!\u0003Bï¿½!\u0003P\u0004\u0001ï¿½\"\u0003Jï¿½\"\u0003X\u0004\u0001ï¿½å£eï¿½\u0010typedef _Traits std::basic_istream::traits_type\u0000 H\u0016\u0000\u0000\u0001A6ALï¿½\u0002\u0004\u0001A\fAL\u0000\u0000\u0000\u0000ï¿½`ï¿½\u0010ï¿½Pï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u0013QgfÙï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0002Jï¿½\u0002X\u0001\u0001ï¿½\u00028ï¿½\u0002X\u0000\u0000\u0001ï¿½\u0002Xï¿½\u0002f\u0004\u0001ï¿½Nï¿½G/Ètypedef basic_streambuf<_CharT, _Traits> std::basic_istream::__streambuf_type\u0000Rz \u0000Non-standard Types:\u0000\u0001DbDï¿½\u0002\u0004\u0001D\fDï¿½\u0000\u0000\u0000\u0000ï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\u0005\u0000\u0000\u0004ï¿½<ï¿½5ï¿½Äï¿½Ã ï¿½gï¿½\u0012ï¿½2vï¿½Xï¿½&:ï¿½Yï¿½\u000e\"ï¿½\u0004\\(\\H\u0004\u0001ï¿½\u0002\u0001\"ï¿½\u0002\u0001B\u0004\u0001ï¿½x\u0001\u0014ï¿½x\u00014\u0004\u0001ï¿½\u0001\u0014ï¿½\u00014\u0004\u0001ï¿½#ï¿½Sï¿½\u0002\u0013\u0011template <typename _CharT, typename _Traits = char_traits<_CharT>> class std::basic_streambuf {}\u0000ï¿½\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0003ï¿½Hcï¿½_ï¿½uï¿½zT\u0003ï¿½Z@[~_Rï¿½\u0003D\u001cD:\u0004\u0001ï¿½\u0002\u001cï¿½\u0002:\u0004\u0001ï¿½}\u0003*ï¿½}\u0003H\u0004\u0001ï¿½_QÊ½ï¿½wï¿½typedef basic_ios<_CharT, _Traits> std::basic_istream::__ios_type\u0000Fn\u0014\u0000\u0000\u0001ETEhï¿½\u0002\u0004\u0001E\fEh\u0000\u0000\u0000\u0000ï¿½g\nGSï¿½9ï¿½jï¿½\u0005\u0000\u0000\u0000\u0005{\"{6\u0004\u0001{J{^\u0004\u0001ï¿½e\u0002\u0010ï¿½e\u0002$\u0004\u0001ï¿½g\u0002\u0002ï¿½g\u0002\u0016\u0004\u0001ï¿½y\u0002\u0002ï¿½y\u0002\u0016\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005ï¿½\nï¿½{e\u0019rï¿½h>Cï¿½ghkï¿½ ï¿½0ï¿½\u0006ï¿½\fxï¿½Iï¿½Sï¿½_\u000bY\u0000ï¿½fï¿½\u00154Mï¿½typedef typename _Traits::int_type int_type\u0000\"4\u0010\u0000\u0000\u0001>V>fï¿½\u0002\u0004\u0001>\f>f\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0001ï¿½sFï¿½Dï¿½8\u0005ï¿½,\u0001\fï¿½,\u0001\u001c\u0004\u0001ï¿½\u0001:ï¿½\u0001J\u0004\u0001ï¿½\u0001\fï¿½\u0001\u001c\u0004\u0001ï¿½\u00026ï¿½\u0002F\u0004\u0001ï¿½\u00026ï¿½\u0002F\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½=ï¿½\u0003iï¿½fï¿½P#ï¿½vï¿½95\u0000ï¿½gï¿½xï¿½Qï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0006ï¿½e\u00036ï¿½e\u0003B\u0004\u0001ï¿½f\u00036ï¿½f\u0003B\u0004\u0001ï¿½l\u0003\u001cï¿½l\u0003(\u0004\u0001ï¿½s\u00038ï¿½s\u0003D\u0004\u0001ï¿½t\u00038ï¿½t\u0003D\u0004\u0001ï¿½}\u0003Jï¿½}\u0003V\u0004\u0001ï¿½\u000bï¿½(ï¿½Jï¿½\\\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0004ï¿½Bï¿½qgï¿½Ø\u001fï¿½Tï¿½xï¿½}ï¿½j\bï¿½z\u001dï¿½Ûï¿½pzcï¿½w\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0018ï¿½\u000bï¿½\u001dEnamespace __gnu_cxx {}\u0000\u0014\u0014\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0001ï¿½/\u0003\u0016ï¿½/\u0003(\u0004\u0001ï¿½6{ï¿½A2ï¿½pï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\bï¿½\u0000ï¿½\u0013W\u0010.ï¿½\f\u0002ï¿½\u0014ï¿½7ï¿½:Cï¿½tï¿½Jï¿½rï¿½-ï¿½\u001aï¿½%ï¿½8ï¿½VVï¿½\u0003×ï¿½\u0002ï¿½\u0017ï¿½[È\u0003ï¿½9_Q\u0000ï¿½\tï¿½Eï¿½\u001dï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0004ï¿½\u00020ï¿½\u0002<\u0004\u0001ï¿½\u0002<ï¿½\u0002H\u0004\u0001ï¿½\u00028ï¿½\u0002D\u0004\u0001ï¿½\u00026ï¿½\u0002B\u0004\u0001ï¿½4\u0014ï¿½Hï¿½y/Btypedef _Traits std::basic_istream::sentry::traits_type\u0000 X\u0016\u0000Easy access to dependent types.\u0000\u0001ï¿½\u00026ï¿½\u0002Lï¿½\u0002\u0004\u0001ï¿½\u0002\fï¿½\u0002L\u0000\u0000\u0000\u0000ï¿½Yï¿½\u001b\u0012,ï¿½.ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½Yï¿½\u001b\u0012,ï¿½._Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0006ï¿½\u0002@ï¿½\u0002N\u0004\u0001ï¿½\u0002\u001cï¿½\u0002*\u0004\u0001ï¿½\u0002Lï¿½\u0002Z\u0004\u0001ï¿½\u0002Hï¿½\u0002V\u0004\u0001ï¿½\u0002.ï¿½\u0002<\u0004\u0001ï¿½\u0002Fï¿½\u0002T\u0004\u0001ï¿½Tï¿½)A\"y\u001etypedef basic_streambuf<_CharT, _Traits> std::basic_istream::sentry::__streambuf_type\u0000Rï¿½ \u0000\u0000\u0001ï¿½\u0002bï¿½\u0002ï¿½\u0002\u0004\u0001ï¿½\u0002\fï¿½\u0002ï¿½\u0000\u0000\u0000\u0000ï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½_6Gï¿½D}ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Xï¿½IÍ¡ï¿½_Istream\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0003(ï¿½\u00038\u0001\u0001ï¿½\u0003\u0016ï¿½\u00038\u0000\u0001ï¿½\u001b`ï¿½yR:\u0002ï¿½\u0003Pï¿½\u0003`\u0004\u0001ï¿½\u0003\u001eï¿½\u0003.\u0004\u0001ï¿½Bï¿½kWï¿½\"ï¿½\u0018typedef basic_istream<_CharT, _Traits> std::basic_istream::sentry::__istream_type\u0000Nï¿½\u001c\u0000\u0000\u0001ï¿½\u0002^ï¿½\u0002zï¿½\u0002\u0004\u0001ï¿½\u0002\fï¿½\u0002z\u0000\u0000\u0000\u0000ï¿½1lï¿½Jï¿½\u0005\u0000\u0000\u0000\u0001ï¿½\u0002.ï¿½\u0002J\u0004\u0001ï¿½,kCï¿½Ï¯ï¿½etypedef typename __istream_type::__ctype_type __ctype_type\u0000\"B\u0018\u0000\u0000\u0001ï¿½\u0002jï¿½\u0002ï¿½\u0002\u0004\u0001ï¿½\u0002\fï¿½\u0002ï¿½\u0000\u0000\u0000\u0000ï¿½Pï¿½U\u0014ï¿½,ï¿½eï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u0014\u0010ï¿½Yï¿½Ø\f_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0002(ï¿½\u00024\u0001\u0001ï¿½\u0002\u0016ï¿½\u00024\u0000\u0001ï¿½?uï¿½\u0003ï¿½\u0002$ï¿½\u00020\u0004\u0001ï¿½\u0002:ï¿½\u0002F\u0004\u0001ï¿½\u0002jï¿½\u0002v\u0004\u0001ï¿½vï¿½pULfï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0002Jï¿½\u0002X\u0001\u0001ï¿½\u00028ï¿½\u0002X\u0000\u0000\u0002ï¿½\u00024ï¿½\u0002B\u0004\u0001ï¿½\u0002Jï¿½\u0002X\u0004\u0001ï¿½maIlï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½5\u0003\"ï¿½5\u00030\u0001\u0001ï¿½5\u0003\u0016ï¿½5\u00030\u0000\u0000\u0002ï¿½7\u0003>ï¿½7\u0003L\u0004\u0001ï¿½8\u0003Fï¿½8\u0003T\u0004\u0001ï¿½Ycï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0002\"ï¿½\u00020\u0001\u0001ï¿½\u0002\u0016ï¿½\u00020\u0000\u0000\u0002ï¿½\u0002>ï¿½\u0002L\u0004\u0001ï¿½\u0002Fï¿½\u0002T\u0004\u0001ï¿½\u001cÎ5ï¿½}\u0018ï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0002(ï¿½\u00024\u0001\u0001ï¿½\u0002\u0016ï¿½\u00024\u0000\u0000\u0002ï¿½\u0002Hï¿½\u0002T\u0004\u0001ï¿½\u0002nï¿½\u0002z\u0004\u0001ï¿½3ï¿½T\u0004typedef basic_istream<char> std::istream\u00008B\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½1lï¿½Jï¿½\u0000\u0000\u0000\u0000\u0001ï¿½\u0001\u00032ï¿½\u0001\u0003@\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½{5ï¿½>\u0000]0tï¿½Ç³ï¿½\\ï¿½\u001dï¿½\u0000ï¿½\\\u0014ï¿½\u0018kï¿½m&typedef unsigned long std::size_t\u0000,6\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0002ï¿½$\u0003\fï¿½$\u0003\u0018\u0004\u0001ï¿½.\u0003\u001eï¿½.\u0003*\u0004\u0001ï¿½\nLï¿½@ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½;\u0003\"ï¿½;\u00030\u0001\u0001ï¿½;\u0003\u0016ï¿½;\u00030\u0000\u0000\u0002ï¿½=\u0003>ï¿½=\u0003L\u0004\u0001ï¿½>\u0003Fï¿½>\u0003T\u0004\u0001ï¿½qï¿½Mï¿½bï¿½class std::basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {}\u0000\f\u0016\u001c\u0000\u0000\u0001ï¿½d\u0003\u0014ï¿½d\u00030ï¿½\u0002\u0004\u0001ï¿½d\u0003\bï¿½\u0003\n\u0002ï¿½1lï¿½Jï¿½jï¿½\u0010u91\bï¿½4ï¿½htï¿½Hï¿½m=ï¿½;ï¿½Ù±ï¿½BKIÕ¦\fï¿½\u0005ï¿½\u0003ï¿½b\fï¿½Iï¿½?H\u0017ï¿½Nï¿½\u001aï¿½=ï¿½\bï¿½\u0005?\u0007ï¿½Î¨aï¿½\u0007ï¿½Zï¿½-ï¿½Uï¿½sï¿½Aï¿½Kï¿½\nEQï¿½\u0006\u0019ï¿½,L\u001eï¿½\u0010\u001aoï¿½\u0002ï¿½4ï¿½X\u0006Dï¿½xï¿½PDï¿½\r\u0000\u0000\u0005\u0003\u0000\u0000\tï¿½É¾ï¿½43ï¿½Iï¿½xï¿½\bEï¿½09ï¿½3ï¿½5Cï¿½\u0011ï¿½sï¿½Ú¾\u000eï¿½3&1vPï¿½\u0012~\u001chX679ï¿½?ï¿½Pï¿½\u0001ï¿½Ñ­ï¿½'ï¿½t ï¿½\tuï¿½\fï¿½}\u0003\fï¿½}\u0003(\u0004\u0001ï¿½\u0003\u000eï¿½\u0003*\u0004\u0001ï¿½\u0003\fï¿½\u0003(\u0004\u0001ï¿½\u00036ï¿½\u0003R\u0004\u0001ï¿½\u0003\fï¿½\u0003(\u0004\u0001ï¿½\u0003*ï¿½\u0003F\u0004\u0001ï¿½\u0003\fï¿½\u0003(\u0004\u0001ï¿½\u0003\fï¿½\u0003(\u0004\u0001ï¿½\u0003Lï¿½\u0003h\u0004\u0001ï¿½\u0003\fï¿½\u0003(\u0004\u0001ï¿½\u0003 ï¿½\u0003<\u0004\u0001ï¿½\u0003\u0016ï¿½\u00032\u0004\u0001ï¿½Ñ­ï¿½'ï¿½std::basic_iostream<wchar_t> &&__rhs\u0000>>\n\u0000\u0000\u0001ï¿½\u0003Bï¿½\u0003Lï¿½\u0002\u0004\u0001ï¿½\u0003 ï¿½\u0003Lï¿½qï¿½Mï¿½bï¿½\u0006\u0000\u0000\u0000ï¿½?ï¿½Pï¿½\u0001ï¿½std::basic_iostream<wchar_t> &&__rhs\u0000>>\n\u0000\u0000\u0001ï¿½\u0003Lï¿½\u0003Vï¿½\u0002\u0004\u0001ï¿½\u0003*ï¿½\u0003Vï¿½qï¿½Mï¿½bï¿½\t\u0000\u0000\u0000ï¿½Z@[~_Rï¿½basic_streambuf<wchar_t, std::char_traits<wchar_t>> *__sb\u0000jj\b\u0000\u0000\u0001ï¿½}\u0003nï¿½}\u0003vï¿½\u0002\u0004\u0001ï¿½}\u0003*ï¿½}\u0003vï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\t\u0000\u0000\u0000ï¿½\u001et;Ì¿ï¿½_ValueT &__v\u0000\u0012\u0012\u0006\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00020ï¿½\u0002\u0004\u0001ï¿½\u0002\u0018ï¿½\u00020ï¿½wN&ï¿½\u001dï¿½+\\ï¿½\u0006\u0000\u0000\u0000ï¿½#ï¿½\rï¿½b\u0007\"std::basic_istream<wchar_t> &&__rhs\u0000<<\n\u0000\u0000\u0001ï¿½p\u0002@ï¿½p\u0002Jï¿½\u0002\u0004\u0001ï¿½p\u0002 ï¿½p\u0002Jï¿½1lï¿½Jï¿½\u0006\u0000\u0000\u0000ï¿½\u0007<ï¿½6+ï¿½Zstd::basic_istream<wchar_t> &&__rhs\u0000<<\n\u0000\u0000\u0001ï¿½d\u0002Hï¿½d\u0002Rï¿½\u0002\u0004\u0001ï¿½d\u0002(ï¿½d\u0002Rï¿½1lï¿½Jï¿½\t\u0000\u0000\u0000ï¿½8\u000fh\u0013OTï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Tï¿½\u0001Zï¿½\u0002\u0004\u0001ï¿½\u0001>ï¿½\u0001Zï¿½\u0006\u0000\u0000\u0000ï¿½[È\u0003ï¿½9_Qstd::basic_istream<wchar_t>::char_type *__s\u0000PP\u0006\u0000\u0000\u0001ï¿½\u00014ï¿½\u0001:ï¿½\u0002\u0004\u0001ï¿½\u0001\u001eï¿½\u0001:ï¿½6{ï¿½A2ï¿½pï¿½\u0006\u0000\u0000\u0000ï¿½A8Yï¿½QYï¿½3std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Lï¿½\u0001Rï¿½\u0002\u0004\u0001ï¿½\u00016ï¿½\u0001Rï¿½\u0006\u0000\u0000\u0000ï¿½sï¿½z\u0002ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u00010ï¿½\u00016ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00016ï¿½\u0006\u0000\u0000\u0000ï¿½2ï¿½\u0018ï¿½M6ï¿½std::basic_istream<wchar_t>::int_type __delim\u0000LL\u000e\u0000\u0000\u0001ï¿½\u0001Lï¿½\u0001Zï¿½\u0002\u0004\u0001ï¿½\u0001:ï¿½\u0001Zï¿½\u0006\u0000\u0000\u0000ï¿½jï¿½\u000b\u001bSQ\u0017std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u00010ï¿½\u00016ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00016ï¿½\u0006\u0000\u0000\u0000ï¿½qï¿½Wï¿½\u001eï¿½/ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Rï¿½\u0001Xï¿½\u0002\u0004\u0001ï¿½\u0001<ï¿½\u0001Xï¿½\u0006\u0000\u0000\u0000ï¿½Ktï¿½PfFï¿½std::basic_istream<wchar_t>::char_type __delim\u0000NN\u000e\u0000\u0000\u0001ï¿½\u0001pï¿½\u0001~ï¿½\u0002\u0004\u0001ï¿½\u0001\\ï¿½\u0001~ï¿½\u0006\u0000\u0000\u0000ï¿½!XEï¿½i2std::basic_istream<wchar_t>::__streambuf_type &__sb\u0000^^\b\u0000\u0000\u0001ï¿½\u00018ï¿½\u0001@ï¿½\u0002\u0004\u0001ï¿½\u0001\u0014ï¿½\u0001@ï¿½HE\u0003ï¿½!ï¿½\u0006\u0000\u0000\u0000ï¿½M\u000b\fZï¿½\u0014ï¿½std::basic_istream<wchar_t>::char_type __delim\u0000NN\u000e\u0000\u0000\u0001ï¿½x\u0001Xï¿½x\u0001fï¿½\u0002\u0004\u0001ï¿½x\u0001Dï¿½x\u0001fï¿½\u0006\u0000\u0000\u0000ï¿½\u00013Tï¿½Õ«std::basic_istream<wchar_t>::__streambuf_type &__sb\u0000^^\b\u0000\u0000\u0001ï¿½x\u00018ï¿½x\u0001@ï¿½\u0002\u0004\u0001ï¿½x\u0001\u0014ï¿½x\u0001@ï¿½HE\u0003ï¿½!ï¿½\u0006\u0000\u0000\u0000ï¿½\u0011$ï¿½F*ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½a\u0001Jï¿½a\u0001Pï¿½\u0002\u0004\u0001ï¿½a\u00014ï¿½a\u0001Pï¿½\u0006\u0000\u0000\u0000ï¿½tï¿½Jï¿½rstd::basic_istream<wchar_t>::char_type *__s\u0000PP\u0006\u0000\u0000\u0001ï¿½a\u0001*ï¿½a\u00010ï¿½\u0002\u0004\u0001ï¿½a\u0001\u0014ï¿½a\u00010ï¿½6{ï¿½A2ï¿½pï¿½\u0006\u0000\u0000\u0000ï¿½`Ã\u001f Xï¿½std::basic_istream<wchar_t>::char_type __delim\u0000NN\u000e\u0000\u0000\u0001ï¿½V\u0001hï¿½V\u0001vï¿½\u0002\u0004\u0001ï¿½V\u0001Tï¿½V\u0001vï¿½\u0006\u0000\u0000\u0000ï¿½\u0013W\u0010.ï¿½\f\u0002std::basic_istream<wchar_t>::char_type &__c\u0000PP\u0006\u0000\u0000\u0001ï¿½;\u0001*ï¿½;\u00010ï¿½\u0002\u0004\u0001ï¿½;\u0001\u0014ï¿½;\u00010ï¿½6{ï¿½A2ï¿½pï¿½\u0006\u0000\u0000\u0000ï¿½kWï¿½\u0004Ovoid *&__p\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\u0014\u0003ï¿½Nnlong double &__f\u0000\u001a\u001a\u0006\u0000\u0000\u0001ï¿½<ï¿½Bï¿½\u0002\u0004\u0001ï¿½\"ï¿½B\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½cï¿½d:oï¿½float &__f\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\u0019~c/qG>long long &__n\u0000\u0016\u0016\u0006\u0000\u0000\u0001ï¿½8ï¿½>ï¿½\u0002\u0004\u0001ï¿½\"ï¿½>\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½$\u0010ï¿½5ï¿½wï¿½iunsigned long &__n\u0000\u001e\u001e\u0006\u0000\u0000\u0001ï¿½@ï¿½Fï¿½\u0002\u0004\u0001ï¿½\"ï¿½F\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½]u@ï¿½TÒ¯long &__n\u0000\f\f\u0006\u0000\u0000\u0001ï¿½.ï¿½4ï¿½\u0002\u0004\u0001ï¿½\"ï¿½4\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½5ï¿½VB\u0016ï¿½\u001b\u0013unsigned int &__n\u0000\u001c\u001c\u0006\u0000\u0000\u0001ï¿½>ï¿½Dï¿½\u0002\u0004\u0001ï¿½\"ï¿½D\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½yï¿½I)Ïï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Rï¿½\u0001Xï¿½\u0002\u0004\u0001ï¿½\u0001<ï¿½\u0001Xï¿½\u0006\u0000\u0000\u0000ï¿½,\u001aï¿½\u0012ï¿½)\u0017std::ios_base &(*__pf)(std::ios_base &)\u0000\"\"\b\u0000\u0000\u0001ï¿½:ï¿½Bï¿½\u0002\u0004\u0001ï¿½\"ï¿½Z\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½3`ï¿½\u000e@\u0006std::basic_istream<wchar_t>::__istream_type &(*__pf)(std::basic_istream<wchar_t>::__istream_type &)\u0000^^\b\u0000\u0000\u0001wFwNï¿½\u0002\u0004\u0001w\"wr\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½^Q\u001fh+ï¿½{short &__n\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½Bï¿½vï¿½Y,ï¿½std::basic_istream<wchar_t>::__streambuf_type *__sb\u0000^^\b\u0000\u0000\u0001\\L\\Tï¿½\u0002\u0004\u0001\\(\\Tï¿½HE\u0003ï¿½!ï¿½\t\u0000\u0000\u0000ï¿½\u0011ï¿½sï¿½Ú¾\u000estd::basic_iostream<char> &&__rhs\u000088\n\u0000\u0000\u0001ï¿½\u0003Lï¿½\u0003Vï¿½\u0002\u0004\u0001ï¿½\u0003*ï¿½\u0003Vï¿½qï¿½Mï¿½bï¿½\t\u0000\u0000\u0000ï¿½uï¿½zT\u0003basic_streambuf<char, std::char_traits<char>> *__sb\u0000^^\b\u0000\u0000\u0001ï¿½}\u0003nï¿½}\u0003vï¿½\u0002\u0004\u0001ï¿½}\u0003*ï¿½}\u0003vï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\t\u0000\u0000\u0000ï¿½'ï¿½3f^!<ï¿½_ValueT &__v\u0000\u0012\u0012\u0006\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00020ï¿½\u0002\u0004\u0001ï¿½\u0002\u0018ï¿½\u00020ï¿½wN&ï¿½\u001dï¿½+\\ï¿½\u0006\u0000\u0000\u0000ï¿½<ï¿½Èï¿½85std::basic_istream<char> &__rhs\u000044\n\u0000\u0000\u0001ï¿½w\u00024ï¿½w\u0002>ï¿½\u0002\u0004\u0001ï¿½w\u0002\u0016ï¿½w\u0002>ï¿½1lï¿½Jï¿½\u0006\u0000\u0000\u0000ï¿½62ï¿½)ï¿½std::basic_istream<char> &&__rhs\u000066\n\u0000\u0000\u0001ï¿½d\u0002Hï¿½d\u0002Rï¿½\u0002\u0004\u0001ï¿½d\u0002(ï¿½d\u0002Rï¿½1lï¿½Jï¿½\t\u0000\u0000\u0000ï¿½Sï¿½_\u000bYstd::basic_istream<char>::char_type __c\u0000HH\u0006\u0000\u0000\u0001ï¿½\t\u00020ï¿½\t\u00026ï¿½\u0002\u0004\u0001ï¿½\t\u0002\u001cï¿½\t\u00026ï¿½\u0006\u0000\u0000\u0000ï¿½\u0013ï¿½\u001bï¿½Ytstd::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0002Nï¿½\u0002Tï¿½\u0002\u0004\u0001ï¿½\u00028ï¿½\u0002Tï¿½\u0006\u0000\u0000\u0000ï¿½?uï¿½_CharT &__c\u0000\u0010\u0010\u0006\u0000\u0000\u0001ï¿½\u0002zï¿½\u0002ï¿½\u0002\u0004\u0001ï¿½\u0002jï¿½\u0002ï¿½\u0014\u0010ï¿½Yï¿½Ø\fï¿½\f\u0000\u0000\u0000ï¿½î ®85wx\u0010bool &__n\u0000\f\f\u0006\u0000\u0000\u0001ï¿½.ï¿½4ï¿½\u0002\u0004\u0001ï¿½\"ï¿½4\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\u0001ï¿½Qï¿½Nstd::basic_istream<char>::char_type *__s\u0000JJ\u0006\u0000\u0000\u0001ï¿½\u0002.ï¿½\u00024ï¿½\u0002\u0004\u0001ï¿½\u0002\u0018ï¿½\u00024ï¿½G<ï¿½=Xï¿½|ï¿½\u0006\u0000\u0000\u0000ï¿½\u0005Äï¿½N!basic_istream<_CharT, _Traits> &&__rhs\u0000BB\n\u0000\u0000\u0001ï¿½d\u0002Hï¿½d\u0002Rï¿½\u0002\u0004\u0001ï¿½d\u0002(ï¿½d\u0002Rï¿½1lï¿½Jï¿½\t\u0000\u0000\u0003ï¿½e\u0002@ï¿½e\u0002J\u0004\u0001ï¿½g\u0002$ï¿½g\u0002.\u0004\u0001ï¿½h\u0002\u0002ï¿½h\u0002\f\u0004\u0001ï¿½<ï¿½\u000eqï¿½\u0014ï¿½_ValueT &__v\u0000\u0012\u0012\u0006\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00020ï¿½\u0002\u0004\u0001ï¿½\u0002\u0018ï¿½\u00020ï¿½wN&ï¿½\u001dï¿½+\\ï¿½\u0006\u0000\u0000\u0000ï¿½Tï¿½\fqï¿½basic_istream<_CharT, _Traits> &&__rhs\u0000BB\n\u0000\u0000\u0001ï¿½p\u0002@ï¿½p\u0002Jï¿½\u0002\u0004\u0001ï¿½p\u0002 ï¿½p\u0002Jï¿½1lï¿½Jï¿½\u0006\u0000\u0000\u0001ï¿½r\u0002\fï¿½r\u0002\u0016\u0004\u0001ï¿½Nu8ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Rï¿½\u0001Xï¿½\u0002\u0004\u0001ï¿½\u0001<ï¿½\u0001Xï¿½\u0006\u0000\u0000\u0001ï¿½\u0001Dï¿½\u0001J\u0004\u0001ï¿½\u0003\u0012Vï¿½\u0010\u001e\u0004\rstd::basic_istream::__istream_type &(*__pf)(std::basic_istream::__istream_type &)\u0000LL\b\u0000\u0000\u0001wFwNï¿½\u0002\u0004\u0001w\"wr\u0000ï¿½\u0006\u0000\u0000\u0001x\u001ex&ï¿½$@\u0001ï¿½Nï¿½5O^ï¿½std::basic_istream::char_type __c\u0000<<\u0006\u0000\u0000\u0001ï¿½\t\u00020ï¿½\t\u00026ï¿½\u0002\u0004\u0001ï¿½\t\u0002\u001cï¿½\t\u00026ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½\u0012~\u001chX679std::basic_iostream<char> &__rhs\u000066\n\u0000\u0000\u0001ï¿½\u00036ï¿½\u0003@ï¿½\u0002\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003@ï¿½qï¿½Mï¿½bï¿½\u0006\u0000\u0000\u0000ï¿½%Sï¿½Ì¢$\u0013ï¿½basic_istream<_CharT, _Traits> &__is\u0000@@\b\u0000\u0000\u0001ï¿½\u0002Zï¿½\u0002bï¿½\u0002\u0004\u0001ï¿½\u0002\u001aï¿½\u0002bï¿½1lï¿½Jï¿½\t\u0000\u0000\u0000ï¿½tï¿½\u0006\u0001ï¿½istd::basic_istream::char_type __delim\u0000<<\u000e\u0000\u0000\u0001ï¿½\u0001pï¿½\u0001~ï¿½\u0002\u0004\u0001ï¿½\u0001\\ï¿½\u0001~ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½Inï¿½@ubasic_istream<_CharT, _Traits> &__rhs\u0000@@\n\u0000\u0000\u0001ï¿½w\u00024ï¿½w\u0002>ï¿½\u0002\u0004\u0001ï¿½w\u0002\u0016ï¿½w\u0002>ï¿½1lï¿½Jï¿½\u0006\u0000\u0000\u0002ï¿½y\u0002$ï¿½y\u0002.\u0004\u0001ï¿½z\u0002,ï¿½z\u00026\u0004\u0001ï¿½Iï¿½xï¿½\bEbasic_iostream<_CharT, _Traits> &&__rhs\u0000DD\n\u0000\u0000\u0001ï¿½\u0003Bï¿½\u0003Lï¿½\u0002\u0004\u0001ï¿½\u0003 ï¿½\u0003Lï¿½qï¿½Mï¿½bï¿½\u0006\u0000\u0000\u0001ï¿½\u0003\fï¿½\u0003\u0016\u0004\u0001ï¿½\u001c\"ï¿½Rï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0002,ï¿½\u00022ï¿½\u0002\u0004\u0001ï¿½\u0002\u0016ï¿½\u00022ï¿½\u0006\u0000\u0000\u0000ï¿½Yï¿½\u000e\"ï¿½std::basic_istream::__streambuf_type &__sb\u0000LL\b\u0000\u0000\u0001ï¿½\u00018ï¿½\u0001@ï¿½\u0002\u0004\u0001ï¿½\u0001\u0014ï¿½\u0001@ï¿½Nï¿½G/Èï¿½\u0006\u0000\u0000\u0001ï¿½\u00012ï¿½\u0001:\u0004\u0001ï¿½Dï¿½5Hï¿½unsigned short &__n\u0000  \u0006\u0000\u0000\u0001ï¿½Bï¿½Hï¿½\u0002\u0004\u0001ï¿½\"ï¿½H\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\\-ï¿½NÌ\u0016ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Tï¿½\u0001Zï¿½\u0002\u0004\u0001ï¿½\u0001>ï¿½\u0001Zï¿½\u0006\u0000\u0000\u0000ï¿½Kï¿½2zWï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½a\u0001Jï¿½a\u0001Pï¿½\u0002\u0004\u0001ï¿½a\u00014ï¿½a\u0001Pï¿½\u0006\u0000\u0000\u0001ï¿½b\u0001<ï¿½b\u0001B\u0004\u0001ï¿½pï¿½:ï¿½t7ï¿½\u001bstd::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0002\u0004\u0001ï¿½\u0001\u001cï¿½\u00018ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½E1Mï¿½bGBstd::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½a\u0001*ï¿½a\u00010ï¿½\u0002\u0004\u0001ï¿½a\u0001\u0014ï¿½a\u00010ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½b\u00012ï¿½b\u00018\u0004\u0001ï¿½@Q}ï¿½)V=std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½V\u0001Jï¿½V\u0001Pï¿½\u0002\u0004\u0001ï¿½V\u00014ï¿½V\u0001Pï¿½\u0006\u0000\u0000\u0000ï¿½5}a>Ýï¿½std::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0002\u0004\u0001ï¿½\u0001\u001cï¿½\u00018ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0001ï¿½\u0001:ï¿½\u0001@\u0004\u0001ï¿½9\u001bï¿½Ð²std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Lï¿½\u0001Rï¿½\u0002\u0004\u0001ï¿½\u00016ï¿½\u0001Rï¿½\u0006\u0000\u0000\u0000ï¿½\f\u0015ï¿½?ï¿½ @ï¿½std::streamsize std::basic_istream::_M_gcount\u0000 H\u0012\u0000Data Members:\n\nThe number of characters extracted in the previous unformatted\nfunction; see gcount().\u0000\u0001Q&Q8ï¿½\u0002\u0004\u0001Q\fQ8ï¿½\b\u0005\u0000\u0000\u0006]\u0010]\"\u0014\u0001g\u0010g\"\u0014\u0001ï¿½\r\u0001\u001eï¿½\r\u00010\f\u0001ï¿½^\u0002\u0010ï¿½^\u0002\"\u0014\u0001ï¿½e\u0002,ï¿½e\u0002>\u0014\u0001ï¿½z\u0002\u0016ï¿½z\u0002(\u0004\u0001ï¿½%ï¿½8ï¿½VVï¿½std::basic_istream<wchar_t>::char_type *__s\u0000PP\u0006\u0000\u0000\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0002\u0004\u0001ï¿½\u0001\u001cï¿½\u00018ï¿½6{ï¿½A2ï¿½pï¿½\u0006\u0000\u0000\u0000ï¿½3ï¿½Bunsigned long long &__n\u0000((\u0006\u0000\u0000\u0001ï¿½Jï¿½Pï¿½\u0002\u0004\u0001ï¿½\"ï¿½P\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½Uï¿½&aï¿½bool &__n\u0000\f\f\u0006\u0000\u0000\u0001ï¿½.ï¿½4ï¿½\u0002\u0004\u0001ï¿½\"ï¿½4\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½vï¿½\u001dï¿½&md)basic_istream<_CharT, _Traits> &__in\u0000@@\b\u0000\u0000\u0001ï¿½\u0002^ï¿½\u0002fï¿½\u0002\u0004\u0001ï¿½\u0002\u001eï¿½\u0002fï¿½1lï¿½Jï¿½\f\u0000\u0000\u0000ï¿½]ï¿½\u0014ï¿½p\funsigned char *__s\u0000\u001e\u001e\u0006\u0000\u0000\u0001ï¿½8\u0003ï¿½8\u0003ï¿½\u0002\u0004\u0001ï¿½8\u0003fï¿½8\u0003ï¿½\u0000ï¿½\f\u0000\u0000\u0001ï¿½9\u0003Zï¿½9\u0003`\f\u0001ï¿½Aï¿½Yï¿½|ï¿½short &__n\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\u0000ï¿½std::basic_istream<wchar_t>::char_type *__s\u0000PP\u0006\u0000\u0000\u0001ï¿½\u0002.ï¿½\u00024ï¿½\u0002\u0004\u0001ï¿½\u0002\u0018ï¿½\u00024ï¿½6{ï¿½A2ï¿½pï¿½\u0006\u0000\u0000\u0000ï¿½\u000bï¿½Kï¿½\"ï¿½Y5std::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½\u0001,ï¿½\u00012ï¿½\u0002\u0004\u0001ï¿½\u0001\u0016ï¿½\u00012ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½Ê£ï¿½Ù ï¿½Ôstd::basic_istream<char>::char_type *__s\u0000JJ\u0006\u0000\u0000\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0002\u0004\u0001ï¿½\u0001\u001cï¿½\u00018ï¿½G<ï¿½=Xï¿½|ï¿½\u0006\u0000\u0000\u0000ï¿½5ï¿½\u0007\f[unsigned short &__n\u0000  \u0006\u0000\u0000\u0001ï¿½Bï¿½Hï¿½\u0002\u0004\u0001ï¿½\"ï¿½H\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½c,ï¿½0!Qstd::basic_istream<char>::char_type *__s\u0000JJ\u0006\u0000\u0000\u0001ï¿½a\u0001*ï¿½a\u00010ï¿½\u0002\u0004\u0001ï¿½a\u0001\u0014ï¿½a\u00010ï¿½G<ï¿½=Xï¿½|ï¿½\u0006\u0000\u0000\u0000ï¿½<ï¿½5ï¿½Äï¿½std::basic_istream::__streambuf_type *__sb\u0000LL\b\u0000\u0000\u0001\\L\\Tï¿½\u0002\u0004\u0001\\(\\Tï¿½Nï¿½G/Èï¿½\t\u0000\u0000\u0001^&^.\u0004\u0001ï¿½WLï¿½\u0010ï¿½std::basic_istream<wchar_t>::char_type __c\u0000NN\u0006\u0000\u0000\u0001ï¿½\t\u00020ï¿½\t\u00026ï¿½\u0002\u0004\u0001ï¿½\t\u0002\u001cï¿½\t\u00026ï¿½\u0006\u0000\u0000\u0000ï¿½}7ï¿½P(7tunsigned long &__n\u0000\u001e\u001e\u0006\u0000\u0000\u0001ï¿½@ï¿½Fï¿½\u0002\u0004\u0001ï¿½\"ï¿½F\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½#ï¿½t\u0005~ï¿½jstd::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u00010ï¿½\u00016ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00016ï¿½\u0006\u0000\u0000\u0000ï¿½\bï¿½\u0011ï¿½-9Uvoid *&__p\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½sFï¿½Dï¿½8std::basic_istream::int_type __delim\u0000::\u000e\u0000\u0000\u0001ï¿½\u0001Lï¿½\u0001Zï¿½\u0002\u0004\u0001ï¿½\u0001:ï¿½\u0001Zï¿½fï¿½\u00154Mï¿½\u0006\u0000\u0000\u0000ï¿½Ã ï¿½gï¿½\u0012std::basic_istream::__streambuf_type *__sb\u0000LL\b\u0000\u0000\u0001ï¿½\u0002\u0001Fï¿½\u0002\u0001Nï¿½\u0002\u0004\u0001ï¿½\u0002\u0001\"ï¿½\u0002\u0001Nï¿½Nï¿½G/Èï¿½\u0006\u0000\u0000\u0000ï¿½\u000bï¿½y=Bï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005ï¿½a\u0002\bï¿½a\u0002\u001e@\u0001ï¿½\u0002\bï¿½\u0002\u001e@\u0001ï¿½\u001e\u0003\bï¿½\u001e\u0003\u001e@\u0001ï¿½\u0003\bï¿½\u0003\u001e@\u0001ï¿½\u0003\bï¿½\u0003\u001e@\u0001ï¿½1uï¿½5double &__f\u0000\u0010\u0010\u0006\u0000\u0000\u0001ï¿½2ï¿½8ï¿½\u0002\u0004\u0001ï¿½\"ï¿½8\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½cï¿½\tï¿½)std::basic_istream<char> &&__rhs\u000066\n\u0000\u0000\u0001ï¿½p\u0002@ï¿½p\u0002Jï¿½\u0002\u0004\u0001ï¿½p\u0002 ï¿½p\u0002Jï¿½1lï¿½Jï¿½\u0006\u0000\u0000\u0000ï¿½Rï¿½?ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0002Nï¿½\u0002Tï¿½\u0002\u0004\u0001ï¿½\u00028ï¿½\u0002Tï¿½\u0006\u0000\u0000\u0000ï¿½\u0012\u001aFwï¿½std::basic_istream::__ios_type &(*__pf)(std::basic_istream::__ios_type &)\u0000DD\b\u0000\u0000\u0001{>{Fï¿½\u0002\u0004\u0001{\"{b\u0000ï¿½\u0006\u0000\u0000\u0001}\u0002}\nï¿½$@\u0001ï¿½M\rï¿½r27ulong double &__f\u0000\u001a\u001a\u0006\u0000\u0000\u0001ï¿½<ï¿½Bï¿½\u0002\u0004\u0001ï¿½\"ï¿½B\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½aTï¿½^ï¿½\u000eï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Rï¿½\u0001Xï¿½\u0002\u0004\u0001ï¿½\u0001<ï¿½\u0001Xï¿½\u0006\u0000\u0000\u0000ï¿½Õ©ï¿½|ï¿½*ï¿½long &__n\u0000\f\f\u0006\u0000\u0000\u0001ï¿½.ï¿½4ï¿½\u0002\u0004\u0001ï¿½\"ï¿½4\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½@ï¿½tÉ¯\"ï¿½std::basic_istream<char>::__streambuf_type &__sb\u0000XX\b\u0000\u0000\u0001ï¿½x\u00018ï¿½x\u0001@ï¿½\u0002\u0004\u0001ï¿½x\u0001\u0014ï¿½x\u0001@ï¿½l\u000e=nï¿½\u0006\u0000\u0000\u0000ï¿½U\u000fï¿½73Dstd::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u00010ï¿½\u00016ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00016ï¿½\u0006\u0000\u0000\u0000ï¿½%\tQ\"ï¿½Jï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0002,ï¿½\u00022ï¿½\u0002\u0004\u0001ï¿½\u0002\u0016ï¿½\u00022ï¿½\u0006\u0000\u0000\u0000ï¿½^\nï¿½I6Krï¿½std::basic_istream::char_type __delim\u0000<<\u000e\u0000\u0000\u0001ï¿½x\u0001Xï¿½x\u0001fï¿½\u0002\u0004\u0001ï¿½x\u0001Dï¿½x\u0001fï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½Iï¿½`ï¿½vG\u001astd::ios_base &(*__pf)(std::ios_base &)\u0000\"\"\b\u0000\u0000\u0001ï¿½:ï¿½Bï¿½\u0002\u0004\u0001ï¿½\"ï¿½Z\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½\u0002ï¿½\nï¿½$@\u0001ï¿½pï¿½Mï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Lï¿½\u0001Rï¿½\u0002\u0004\u0001ï¿½\u00016ï¿½\u0001Rï¿½\u0006\u0000\u0000\u0000ï¿½+ï¿½[vÉ·ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001*\u0000*@@\u0001ï¿½h>Cï¿½ghkstd::basic_istream<char>::char_type __delim\u0000HH\u000e\u0000\u0000\u0001ï¿½V\u0001hï¿½V\u0001vï¿½\u0002\u0004\u0001ï¿½V\u0001Tï¿½V\u0001vï¿½\u0006\u0000\u0000\u0000ï¿½Xv0TXï¿½:ï¿½_GLIBCXX_ISTREAM\u0000\u0000\u0000 #define _GLIBCXX_ISTREAM 1\u0000\u0000\u0001!\u0010!0\u0002\u0001!\u0010!4\u0000ï¿½\u0001\u0000\u0000\u0000ï¿½\rï¿½\u0007S>m\u0004`unsigned int &__n\u0000\u001c\u001c\u0006\u0000\u0000\u0001ï¿½>ï¿½Dï¿½\u0002\u0004\u0001ï¿½\"ï¿½D\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½1ï¿½Äï¿½long double &__f\u0000\u001a\u001a\u0006\u0000\u0000\u0001ï¿½<ï¿½Bï¿½\u0002\u0004\u0001ï¿½\"ï¿½B\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½Xx\r/Rd3unsigned long &__n\u0000\u001e\u001e\u0006\u0000\u0000\u0001ï¿½@ï¿½Fï¿½\u0002\u0004\u0001ï¿½\"ï¿½F\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½yï¿½b1ï¿½2bGlong long &__n\u0000\u0016\u0016\u0006\u0000\u0000\u0001ï¿½8ï¿½>ï¿½\u0002\u0004\u0001ï¿½\"ï¿½>\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½\u0019ï¿½H)ï¿½@'unsigned long long &__n\u0000((\u0006\u0000\u0000\u0001ï¿½Jï¿½Pï¿½\u0002\u0004\u0001ï¿½\"ï¿½P\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½\u0010ï¿½Eï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001(\u001c(B@\u0001ï¿½bï¿½\u0015\u0006\u0018Nï¿½=void *&__p\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½=ï¿½\u0003iï¿½fstd::basic_istream<char>::int_type __delim\u0000FF\u000e\u0000\u0000\u0001ï¿½\u0002Hï¿½\u0002Vï¿½\u0002\u0004\u0001ï¿½\u00026ï¿½\u0002Vï¿½\u0006\u0000\u0000\u0000ï¿½Uï¿½Hï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0003\u0000ï¿½\u0003<@\u0001ï¿½\b\u001aï¿½$Vï¿½\"std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0002,ï¿½\u00022ï¿½\u0002\u0004\u0001ï¿½\u0002\u0016ï¿½\u00022ï¿½\u0006\u0000\u0000\u0000ï¿½ ï¿½Jtï¿½h)float &__f\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½{5ï¿½>\u0000]0tbool std::basic_istream::sentry::_M_ok\u0000\nB\n\u0000Data Members.\u0000\u0001ï¿½\u0002\u0016ï¿½\u0002 ï¿½\u0002\u0004\u0001ï¿½\u0002\fï¿½\u0002 ï¿½\b\u0005\u0000\u0000\u0001ï¿½\u0002\u001eï¿½\u0002(\f\u0001ï¿½É¾ï¿½43ï¿½basic_iostream<_CharT, _Traits> &&__rhs\u0000DD\n\u0000\u0000\u0001ï¿½\u0003Lï¿½\u0003Vï¿½\u0002\u0004\u0001ï¿½\u0003*ï¿½\u0003Vï¿½qï¿½Mï¿½bï¿½\t\u0000\u0000\u0001ï¿½\u0003Bï¿½\u0003L\u0004\u0001ï¿½\u0006ï¿½\u001aï¿½std::basic_istream<wchar_t>::__ios_type &(*__pf)(std::basic_istream<wchar_t>::__ios_type &)\u0000VV\b\u0000\u0000\u0001{>{Fï¿½\u0002\u0004\u0001{\"{b\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½t\u0015\u0015ï¿½d\u0005std::basic_istream<char>::__istream_type &(*__pf)(std::basic_istream<char>::__istream_type &)\u0000XX\b\u0000\u0000\u0001wFwNï¿½\u0002\u0004\u0001w\"wr\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\u0013ï¿½;Pï¿½+ï¿½static const std::ios_base::iostate std::ios_base::failbit\u0000Hf\u000estatic const std::ios_base::iostate std::ios_base::failbit = _S_failbit\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0001ï¿½*\u00036ï¿½*\u0003D\u0004\u0001ï¿½nË5#ï¿½|ï¿½bool &__n\u0000\f\f\u0006\u0000\u0000\u0001ï¿½.ï¿½4ï¿½\u0002\u0004\u0001ï¿½\"ï¿½4\u0000ï¿½\u0006\u0000\u0000\u0001ï¿½4ï¿½:\u0004\u0001ï¿½\u001b`ï¿½yR:_Istream &&__is\u0000\u0016\u0016\b\u0000\u0000\u0001ï¿½\u00034ï¿½\u0003<ï¿½\u0002\u0004\u0001ï¿½\u0003\u001eï¿½\u0003<ï¿½Xï¿½IÍ¡ï¿½\f\u0000\u0000\u0002ï¿½\u0003\fï¿½\u0003\u0014\u0004\u0001ï¿½\u0003.ï¿½\u00036\u0004\u0001ï¿½\u0003×ï¿½\u0002ï¿½\u0017std::basic_istream<wchar_t>::char_type *__s\u0000PP\u0006\u0000\u0000\u0001ï¿½\u0001,ï¿½\u00012ï¿½\u0002\u0004\u0001ï¿½\u0001\u0016ï¿½\u00012ï¿½6{ï¿½A2ï¿½pï¿½\u0006\u0000\u0000\u0000ï¿½\u000e9ï¿½<?ï¿½basic_istream<_CharT, _Traits> &__is\u0000@@\b\u0000\u0000\u0001ï¿½\u0003Nï¿½\u0003Vï¿½\u0002\u0004\u0001ï¿½\u0003\u000eï¿½\u0003Vï¿½1lï¿½Jï¿½\f\u0000\u0000\u0000ï¿½t ï¿½\tuï¿½std::basic_iostream<wchar_t> &__rhs\u0000<<\n\u0000\u0000\u0001ï¿½\u00036ï¿½\u0003@ï¿½\u0002\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003@ï¿½qï¿½Mï¿½bï¿½\u0006\u0000\u0000\u0000ï¿½-ï¿½\u001astd::basic_istream<wchar_t>::char_type *__s\u0000PP\u0006\u0000\u0000\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0002\u0004\u0001ï¿½\u0001\u001cï¿½\u00018ï¿½6{ï¿½A2ï¿½pï¿½\u0006\u0000\u0000\u0000ï¿½\nï¿½{e\u0019rstd::basic_istream<char>::char_type __delim\u0000HH\u000e\u0000\u0000\u0001ï¿½\u0002lï¿½\u0002zï¿½\u0002\u0004\u0001ï¿½\u0002Xï¿½\u0002zï¿½\u0006\u0000\u0000\u0000ï¿½)cï¿½Cï¿½^\"\u0011std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½V\u0001Jï¿½V\u0001Pï¿½\u0002\u0004\u0001ï¿½V\u00014ï¿½V\u0001Pï¿½\u0006\u0000\u0000\u0000ï¿½r{ï¿½Z'jï¿½Munsigned char &__c\u0000\u001e\u001e\u0006\u0000\u0000\u0001ï¿½\u0002ï¿½\u0002ï¿½\u0002\u0004\u0001ï¿½\u0002fï¿½\u0002ï¿½\u0000ï¿½\f\u0000\u0000\u0001ï¿½\u0002\\ï¿½\u0002b\u0004\u0001ï¿½Kï¿½5ï¿½,ï¿½std::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½\u00014ï¿½\u0001:ï¿½\u0002\u0004\u0001ï¿½\u0001\u001eï¿½\u0001:ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½O8ï¿½int &__n\u0000\n\n\u0006\u0000\u0000\u0001ï¿½,ï¿½2ï¿½\u0002\u0004\u0001ï¿½\"ï¿½2\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½S\u001d%<\u00167std::basic_istream::char_type __delim\u0000<<\u000e\u0000\u0000\u0001ï¿½V\u0001hï¿½V\u0001vï¿½\u0002\u0004\u0001ï¿½V\u0001Tï¿½V\u0001vï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½2\u0011\u001aBï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0002,ï¿½\u00022ï¿½\u0002\u0004\u0001ï¿½\u0002\u0016ï¿½\u00022ï¿½\u0006\u0000\u0000\u0000ï¿½hO5ï¿½j\u0002ï¿½std::basic_istream<wchar_t>::int_type __delim\u0000LL\u000e\u0000\u0000\u0001ï¿½\u0002Hï¿½\u0002Vï¿½\u0002\u0004\u0001ï¿½\u00026ï¿½\u0002Vï¿½\u0006\u0000\u0000\u0000ï¿½Ç³ï¿½\\ï¿½\u001dï¿½bool __noskipws\u0000\n\n\u0014bool __noskipws = false\u0000\u0000\u0001ï¿½\u0002pï¿½\u0002ï¿½\u0002\u0004\u0001ï¿½\u0002fï¿½\u0002ï¿½\t\u0000\u0000\u0000ï¿½)ï¿½+ï¿½C*`basic_istream<char, _Traits> &__in\u0000<<\b\u0000\u0000\u0001ï¿½\u0002Zï¿½\u0002bï¿½\u0002\u0004\u0001ï¿½\u0002\u001eï¿½\u0002bï¿½1lï¿½Jï¿½\f\u0000\u0000\u0001ï¿½\u0002\u001cï¿½\u0002$\u0004\u0001ï¿½eï¿½oï¿½\u0016$\u0006basic_istream<char, _Traits> &__in\u0000<<\b\u0000\u0000\u0001ï¿½\u0002Zï¿½\u0002bï¿½\u0002\u0004\u0001ï¿½\u0002\u001eï¿½\u0002bï¿½1lï¿½Jï¿½\f\u0000\u0000\u0001ï¿½\u0002\u001cï¿½\u0002$\u0004\u0001ï¿½6ï¿½Wï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½(\u0003\u0006ï¿½(\u0003&@\u0001ï¿½\u0004\u001bï¿½wï¿½SYbasic_istream<char, _Traits> &__in\u0000<<\b\u0000\u0000\u0001ï¿½8\u0003Zï¿½8\u0003bï¿½\u0002\u0004\u0001ï¿½8\u0003\u001eï¿½8\u0003bï¿½1lï¿½Jï¿½\f\u0000\u0000\u0001ï¿½9\u0003\u001aï¿½9\u0003\"\u0004\u0001ï¿½A?ï¿½ \u001eï¿½fsigned char &__c\u0000\u001a\u001a\u0006\u0000\u0000\u0001ï¿½\u0002ï¿½\u0002ï¿½\u0002\u0004\u0001ï¿½\u0002fï¿½\u0002ï¿½\u0000ï¿½\f\u0000\u0000\u0001ï¿½\u0002\\ï¿½\u0002b\u0004\u0001ï¿½<0B>ï¿½\u001bï¿½basic_istream<_CharT, _Traits> &__in\u0000@@\b\u0000\u0000\u0001ï¿½\"\u0003^ï¿½\"\u0003fï¿½\u0002\u0004\u0001ï¿½\"\u0003\u001eï¿½\"\u0003fï¿½1lï¿½Jï¿½\f\u0000\u0000\u0004ï¿½)\u0003\u0006ï¿½)\u0003\u000e\u0004\u0001ï¿½*\u0003\u0006ï¿½*\u0003\u000e\u0004\u0001ï¿½0\u00034ï¿½0\u0003<\u0004\u0001ï¿½2\u0003\u001aï¿½2\u0003\"\u0004\u0001ï¿½.7ï¿½\u0018std::size_t __n\u0000\u0018\u0018\u0006std::size_t __n = __builtin_object_size(__s, 0)\u0000\u0000\u0001ï¿½$\u0003\u001aï¿½$\u0003 \u0002\u0001ï¿½$\u0003\fï¿½$\u0003`ï¿½\r\f\u0000\u0000\u0006ï¿½%\u00036ï¿½%\u0003<\f\u0001ï¿½(\u0003(ï¿½(\u0003.\f\u0001ï¿½(\u0003(ï¿½(\u0003.@\u0000ï¿½.\u0003\u000eï¿½.\u0003\u0014\f\u0001ï¿½/\u0003\nï¿½/\u0003\u0010\u0014\u0001ï¿½0\u0003Jï¿½0\u0003P\f\u0001ï¿½\u0010D\t3ï¿½.static const _Value __gnu_cxx::__numeric_traits_integer::__max\u0000(r\nstatic const _Value __gnu_cxx::__numeric_traits_integer::__max = __is_signed\n\t? (((((_Value)1 << (__digits - 1)) - 1) << 1) + 1)\n\t: ~(_Value)0\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0001ï¿½/\u0003hï¿½/\u0003r\f\u0001ï¿½\u0016.|signed char *__s\u0000\u001a\u001a\u0006\u0000\u0000\u0001ï¿½>\u0003ï¿½>\u0003ï¿½\u0002\u0004\u0001ï¿½>\u0003fï¿½>\u0003ï¿½\u0000ï¿½\f\u0000\u0000\u0001ï¿½?\u0003Zï¿½?\u0003`\f\u0001ï¿½#\u0011Kï¿½\u000bï¿½\u001dint &__n\u0000\n\n\u0006\u0000\u0000\u0001ï¿½,ï¿½2ï¿½\u0002\u0004\u0001ï¿½\"ï¿½2\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½Hcï¿½_ï¿½basic_streambuf<_CharT, _Traits> *__sb\u0000DD\b\u0000\u0000\u0001ï¿½}\u0003nï¿½}\u0003vï¿½\u0002\u0004\u0001ï¿½}\u0003*ï¿½}\u0003vï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\t\u0000\u0000\u0002ï¿½~\u0003.ï¿½~\u00036\u0004\u0001ï¿½~\u0003Zï¿½~\u0003b\u0004\u0001ï¿½09ï¿½3ï¿½5Cbasic_iostream<_CharT, _Traits> &__rhs\u0000BB\n\u0000\u0000\u0001ï¿½\u00036ï¿½\u0003@ï¿½\u0002\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003@ï¿½qï¿½Mï¿½bï¿½\u0006\u0000\u0000\u0001ï¿½\u0003:ï¿½\u0003D\u0004\u0001ï¿½m#ï¿½'Y_Tp &&__x\u0000\f\f\u0006\u0000\u0000\u0001ï¿½\u0003Lï¿½\u0003Rï¿½\u0002\u0004\u0001ï¿½\u0003@ï¿½\u0003Rï¿½Ô¸\u00017Sï¿½\f\u0000\u0000\u0001ï¿½\u0003@ï¿½\u0003F\u0004\u0001ï¿½<1ï¿½Lï¿½\u0019ï¿½std::basic_istream<char>::char_type *__s\u0000JJ\u0006\u0000\u0000\u0001ï¿½\u00014ï¿½\u0001:ï¿½\u0002\u0004\u0001ï¿½\u0001\u001eï¿½\u0001:ï¿½G<ï¿½=Xï¿½|ï¿½\u0006\u0000\u0000\u0000ï¿½Û£ï¿½Iï¿½\u0017Zshort &__n\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½z\u001aP\u0013ï¿½Pï¿½unsigned short &__n\u0000  \u0006\u0000\u0000\u0001ï¿½Bï¿½Hï¿½\u0002\u0004\u0001ï¿½\"ï¿½H\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\u0014ï¿½7ï¿½:Cï¿½std::basic_istream<wchar_t>::char_type *__s\u0000PP\u0006\u0000\u0000\u0001ï¿½V\u0001*ï¿½V\u00010ï¿½\u0002\u0004\u0001ï¿½V\u0001\u0014ï¿½V\u00010ï¿½6{ï¿½A2ï¿½pï¿½\u0006\u0000\u0000\u0000ï¿½\"ï¿½Ístd::basic_istream::char_type *__s\u0000>>\u0006\u0000\u0000\u0001ï¿½V\u0001*ï¿½V\u00010ï¿½\u0002\u0004\u0001ï¿½V\u0001\u0014ï¿½V\u00010ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½0ï¿½\u001bï¿½5\u00032int &__n\u0000\n\n\u0006\u0000\u0000\u0001ï¿½,ï¿½2ï¿½\u0002\u0004\u0001ï¿½\"ï¿½2\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½$xï¿½\u0000rUunsigned int &__n\u0000\u001c\u001c\u0006\u0000\u0000\u0001ï¿½>ï¿½Dï¿½\u0002\u0004\u0001ï¿½\"ï¿½D\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\\ï¿½\u0017ï¿½long &__n\u0000\f\f\u0006\u0000\u0000\u0001ï¿½.ï¿½4ï¿½\u0002\u0004\u0001ï¿½\"ï¿½4\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½-\u001c6Aï¿½std::basic_istream<char>::__ios_type &(*__pf)(std::basic_istream<char>::__ios_type &)\u0000PP\b\u0000\u0000\u0001{>{Fï¿½\u0002\u0004\u0001{\"{b\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½\u0000#Ú°-ï¿½Along long &__n\u0000\u0016\u0016\u0006\u0000\u0000\u0001ï¿½8ï¿½>ï¿½\u0002\u0004\u0001ï¿½\"ï¿½>\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½std::basic_istream<wchar_t>::char_type __delim\u0000NN\u000e\u0000\u0000\u0001ï¿½\u0002lï¿½\u0002zï¿½\u0002\u0004\u0001ï¿½\u0002Xï¿½\u0002zï¿½\u0006\u0000\u0000\u0000ï¿½^\b\fYï¿½o\u001e\u0010std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u00010ï¿½\u00016ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00016ï¿½\u0006\u0000\u0000\u0000ï¿½Eï¿½zï¿½Q Ystd::basic_istream::char_type &__c\u0000>>\u0006\u0000\u0000\u0001ï¿½;\u0001*ï¿½;\u00010ï¿½\u0002\u0004\u0001ï¿½;\u0001\u0014ï¿½;\u00010ï¿½Rï¿½8ï¿½ ï¿½\u0006\u0000\u0000\u0000ï¿½\u000bï¿½=ï¿½ØHunsigned long long &__n\u0000((\u0006\u0000\u0000\u0001ï¿½Jï¿½Pï¿½\u0002\u0004\u0001ï¿½\"ï¿½P\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½0@iÜ\u0017ï¿½float &__f\u0000\u000e\u000e\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\"ï¿½6\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½fï¿½]\tï¿½1basic_istream<char, _Traits> &__in\u0000<<\b\u0000\u0000\u0001ï¿½>\u0003Zï¿½>\u0003bï¿½\u0002\u0004\u0001ï¿½>\u0003\u001eï¿½>\u0003bï¿½1lï¿½Jï¿½\f\u0000\u0000\u0001ï¿½?\u0003\u001aï¿½?\u0003\"\u0004\u0001ï¿½Sï¿½\u0015ï¿½\u0013\u0019ï¿½std::ios_base &(*__pf)(std::ios_base &)\u0000\"\"\b\u0000\u0000\u0001ï¿½:ï¿½Bï¿½\u0002\u0004\u0001ï¿½\"ï¿½Z\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½j\u0011gï¿½Ôï¿½double &__f\u0000\u0010\u0010\u0006\u0000\u0000\u0001ï¿½2ï¿½8ï¿½\u0002\u0004\u0001ï¿½\"ï¿½8\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½2vï¿½Xï¿½&:std::basic_istream::__streambuf_type &__sb\u0000LL\b\u0000\u0000\u0001ï¿½x\u00018ï¿½x\u0001@ï¿½\u0002\u0004\u0001ï¿½x\u0001\u0014ï¿½x\u0001@ï¿½Nï¿½G/Èï¿½\u0006\u0000\u0000\u0000ï¿½\u0015o\u0018ï¿½o4_CharT *__s\u0000\u0010\u0010\u0006\u0000\u0000\u0001ï¿½\"\u0003zï¿½\"\u0003ï¿½\u0002\u0004\u0001ï¿½\"\u0003jï¿½\"\u0003ï¿½\u0015ï¿½4+ï¿½VI=ï¿½\f\u0000\u0000\u0002ï¿½$\u0003Rï¿½$\u0003X\u0004\u0001ï¿½0\u0003@ï¿½0\u0003F\u0004\u0001ï¿½é¾\u0007ï¿½4\u0016std::basic_istream<char>::__streambuf_type *__sb\u0000XX\b\u0000\u0000\u0001ï¿½\u0002\u0001Fï¿½\u0002\u0001Nï¿½\u0002\u0004\u0001ï¿½\u0002\u0001\"ï¿½\u0002\u0001Nï¿½l\u000e=nï¿½\u0006\u0000\u0000\u0000ï¿½\u0011ï¿½xï¿½%\u0013\u00187std::basic_istream<char>::char_type *__s\u0000JJ\u0006\u0000\u0000\u0001ï¿½V\u0001*ï¿½V\u00010ï¿½\u0002\u0004\u0001ï¿½V\u0001\u0014ï¿½V\u00010ï¿½G<ï¿½=Xï¿½|ï¿½\u0006\u0000\u0000\u0000ï¿½(Q:\u001c\u001fï¿½std::basic_istream<wchar_t>::__streambuf_type *__sb\u0000^^\b\u0000\u0000\u0001ï¿½\u0002\u0001Fï¿½\u0002\u0001Nï¿½\u0002\u0004\u0001ï¿½\u0002\u0001\"ï¿½\u0002\u0001Nï¿½HE\u0003ï¿½!ï¿½\u0006\u0000\u0000\u0000ï¿½\u001cï¿½Cï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½V\u0001Jï¿½V\u0001Pï¿½\u0002\u0004\u0001ï¿½V\u00014ï¿½V\u0001Pï¿½\u0006\u0000\u0000\u0000ï¿½\u0007bbï¿½|ï¿½\u0014double &__f\u0000\u0010\u0010\u0006\u0000\u0000\u0001ï¿½2ï¿½8ï¿½\u0002\u0004\u0001ï¿½\"ï¿½8\u0000ï¿½\u0006\u0000\u0000\u0000ï¿½3&1vPï¿½std::basic_iostream<char> &&__rhs\u000088\n\u0000\u0000\u0001ï¿½\u0003Bï¿½\u0003Lï¿½\u0002\u0004\u0001ï¿½\u0003 ï¿½\u0003Lï¿½qï¿½Mï¿½bï¿½\u0006\u0000\u0000\u0000ï¿½P#ï¿½vï¿½95std::basic_istream<char>::int_type __delim\u0000FF\u000e\u0000\u0000\u0001ï¿½\u0001Lï¿½\u0001Zï¿½\u0002\u0004\u0001ï¿½\u0001:ï¿½\u0001Zï¿½\u0006\u0000\u0000\u0000ï¿½mï¿½3\fKJstd::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½a\u0001Jï¿½a\u0001Pï¿½\u0002\u0004\u0001ï¿½a\u00014ï¿½a\u0001Pï¿½\u0006\u0000\u0000\u0000ï¿½EK\fï¿½?ï¿½std::basic_istream<char>::__streambuf_type &__sb\u0000XX\b\u0000\u0000\u0001ï¿½\u00018ï¿½\u0001@ï¿½\u0002\u0004\u0001ï¿½\u0001\u0014ï¿½\u0001@ï¿½l\u000e=nï¿½\u0006\u0000\u0000\u0000ï¿½=ï¿½\"^eï¿½ustd::basic_istream<char>::char_type &__c\u0000JJ\u0006\u0000\u0000\u0001ï¿½;\u0001*ï¿½;\u00010ï¿½\u0002\u0004\u0001ï¿½;\u0001\u0014ï¿½;\u00010ï¿½G<ï¿½=Xï¿½|ï¿½\u0006\u0000\u0000\u0000ï¿½\bï¿½-ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Rï¿½\u0001Xï¿½\u0002\u0004\u0001ï¿½\u0001<ï¿½\u0001Xï¿½\u0006\u0000\u0000\u0000ï¿½%qsï¿½0\u001bstd::basic_istream<char>::__streambuf_type *__sb\u0000XX\b\u0000\u0000\u0001\\L\\Tï¿½\u0002\u0004\u0001\\(\\Tï¿½l\u000e=nï¿½\t\u0000\u0000\u0000ï¿½lFiÝªQ\fï¿½std::basic_istream<char>::char_type *__s\u0000JJ\u0006\u0000\u0000\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0002\u0004\u0001ï¿½\u0001\u001cï¿½\u00018ï¿½G<ï¿½=Xï¿½|ï¿½\u0006\u0000\u0000\u0000ï¿½W<\u0018r<\u000b\u0004std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Rï¿½\u0001Xï¿½\u0002\u0004\u0001ï¿½\u0001<ï¿½\u0001Xï¿½\u0006\u0000\u0000\u0000ï¿½Ï`tï¿½Zï¿½~std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u00010ï¿½\u00016ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00016ï¿½\u0006\u0000\u0000\u0000ï¿½\u0006\u0011@\u0001Èï¿½std::basic_istream<char>::char_type *__s\u0000JJ\u0006\u0000\u0000\u0001ï¿½\u0001,ï¿½\u00012ï¿½\u0002\u0004\u0001ï¿½\u0001\u0016ï¿½\u00012ï¿½G<ï¿½=Xï¿½|ï¿½\u0006\u0000\u0000\u0000ï¿½axk6ï¿½$sstd::basic_istream<wchar_t> &__rhs\u0000::\n\u0000\u0000\u0001ï¿½w\u00024ï¿½w\u0002>ï¿½\u0002\u0004\u0001ï¿½w\u0002\u0016ï¿½w\u0002>ï¿½1lï¿½Jï¿½\u0006\u0000\u0000\u0000ï¿½ ï¿½0ï¿½\u0006ï¿½std::basic_istream<char>::char_type __delim\u0000HH\u000e\u0000\u0000\u0001ï¿½x\u0001Xï¿½x\u0001fï¿½\u0002\u0004\u0001ï¿½x\u0001Dï¿½x\u0001fï¿½\u0006\u0000\u0000\u0000ï¿½\fxï¿½Iï¿½std::basic_istream<char>::char_type __delim\u0000HH\u000e\u0000\u0000\u0001ï¿½\u0001pï¿½\u0001~ï¿½\u0002\u0004\u0001ï¿½\u0001\\ï¿½\u0001~ï¿½\u0006\u0000\u0000\u0000ï¿½*8\u000b\u001e\rï¿½6ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½\u0001Tï¿½\u0001Zï¿½\u0002\u0004\u0001ï¿½\u0001>ï¿½\u0001Zï¿½\u0006\u0000\u0000\u0000"}],"crc32":3922400704,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]