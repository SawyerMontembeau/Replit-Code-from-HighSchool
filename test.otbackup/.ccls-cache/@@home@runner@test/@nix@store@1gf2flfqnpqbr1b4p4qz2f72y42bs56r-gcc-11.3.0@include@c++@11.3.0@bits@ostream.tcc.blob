[{"ops":[{"insert":"*\u0000\u0002\u0002\u0001\u0001\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream.tcc\u0000/home/runner/test/main.cpp\u0000\u0016clang\u0000/home/runner/test/main.cpp\u0000-idirafter\u0000/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu\u0000-frandom-seed=xj94mglrnw\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-working-directory=/home/runner/test/\u0000ï¿½/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ostream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/initializer_list\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdlib\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/cpu_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/type_traits\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/ctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream_insert.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clock_t.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdarg.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timespec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/mbstate_t.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno-base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct___jmp_buf_tag.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/locale.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthread_stack_min-dynamic.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/char_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/debug.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stddef.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__mbstate_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/single_threaded.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stringfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ios\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iostream\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clockid_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes-arch.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/numeric_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timeval.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwctype\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++config.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/new\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cpp_type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++locale.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdint.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-intn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdc-predef.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/byteswap.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/long-double.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/predefined_ops.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cerrno\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/std_abs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitflags.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features-time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_construct.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwchar\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/os_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_forced.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iosfwd\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/locale.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/concept_check.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdio\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/system_error\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/postypes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/charconv.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-uintn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/new_allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_defines.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/uintn-identity.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timesize.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/memoryfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/wint_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/alloc_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/localefwd.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_algobase.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/thread-shared-types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_init_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sched.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitstatus.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_itimerspec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_tm.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ptr_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdio.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_ptr.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/string\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/istream.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/atomic_word.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ios_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/cookie_io_functions_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/clocale\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr-default.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdio_lim.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn-common.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/typeinfo\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/sched.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/range_access.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/alloc_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wordsize.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/string_conversions.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/typesizes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/pthread.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/setjmp.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functexcept.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/streambuf\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/timer_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cctype\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endianness.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdlib-float.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/exception\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/cdefs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functional_hash.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_inline.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/backward/binders.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/assertions.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/istream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/alloca.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_pair.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_mutex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_rwlock.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/atomic_wide_counter.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_funcs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/move.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/time_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/error_constants.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs-64.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/libc-header-start.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_function.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdint.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf_iterator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/FILE.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wctype-wchar.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/stdexcept\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/nested_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdint\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_sched_param.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/atomicity.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos64_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/error_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/cpu-set.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/hash_bytes.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/linux/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdlib.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/__stddef_max_align_t.h\u0000\u0002\u0001L/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_forced.h\u0000\u0000,ï¿½1\u0010/\u0006ï¿½*ï¿½std::operator<<(basic_ostream<_CharT, _Traits> &, const char *)::__ptr_guard::~__ptr_guard()\u0000\u0000ï¿½\u0018\u0001ï¿½O\u0001\u0004ï¿½O\u0001\u001c\u0002\u0001ï¿½O\u0001\u0004ï¿½O\u0001D\u0000\u0000\u0000\u0000\u0000\u0006\u0017\u0000\u0000\u0000\u0000ï¿½gDUï¿½<b!void std::basic_ios::_M_setstate(std::ios_base::iostate __state)\u0000\n*\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0002ï¿½Z\u0001\u001aï¿½Z\u00010ï¿½$@\u0001ï¿½^\u0001\u001aï¿½^\u00010ï¿½$@\u0001ï¿½Î%lï¿½Å¹std::basic_ios::char_type std::basic_ios::widen(char __c) const\u00004T\n\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001ï¿½U\u0001(ï¿½U\u00012ï¿½$@\u0001ï¿½NG\u001eï¿½nv\u0000ï¿½static std::size_t std::char_traits<char>::length(const std::char_traits<char>::char_type *__s)\u0000&V\f\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0001ï¿½H\u0001Xï¿½H\u0001dï¿½$@\u0001ï¿½^Òï¿½xbasic_ostream<_CharT, _Traits> &std::operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s)\u0000@J\u0014\u0001ï¿½@\u0001\bï¿½@\u0001\u001cï¿½\u0002\u0004\u0001ï¿½?\u0001\bï¿½a\u0001\n\u0000\u0000\u0000\u0006ï¿½\t\"sï¿½\tfdï¿½X\u001eMï¿½gï¿½\u000fï¿½2ï¿½Dï¿½!ï¿½\nï¿½~ï¿½\u0018ï¿½Bï¿½2ï¿½\u0010ï¿½hï¿½Ñ«ï¿½\u0007ï¿½C\u0001\u000eï¿½C\u0001\u001eï¿½;ï¿½\u0002&ï¿½G\u0003ï¿½$@ï¿½H\u0001Xï¿½H\u0001dï¿½NG\u001eï¿½nv\u0000ï¿½\u0003ï¿½$@ï¿½H\u0001Xï¿½H\u0001dï¿½NG\u001eï¿½nv\u0000ï¿½\u0003ï¿½$@ï¿½U\u0001(ï¿½U\u00012ï¿½Î%lï¿½Å¹\u0003ï¿½$@ï¿½V\u0001\u000eï¿½V\u0001.ï¿½Xï¿½6\u0014ï¿½\u0003ï¿½$@ï¿½Z\u0001\u001aï¿½Z\u00010ï¿½gDUï¿½<b!\u0003ï¿½$@ï¿½^\u0001\u001aï¿½^\u00010ï¿½gDUï¿½<b!\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½Vï¿½\fstd::basic_ostream::pos_type std::basic_ostream::tellp()\u0000:b\n\u0001ï¿½\bï¿½\u0012ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0000 @brief  Getting the current write position.\n @return  A file position object.\n\n If @c fail() is not false, returns @c pos_type(-1) to indicate\n failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).\u0000\u0000\u0001ï¿½{lp2ï¿½[ï¿½\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½;ï¿½\u001fï¿½\u001cinline bool std::operator==(const std::error_condition &__lhs, const std::error_code &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½rï¿½Zï¿½SFï¿½inline bool std::operator==(const std::error_code &__lhs, const std::error_condition &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½\nï¿½Tt8ï¿½\"inline constexpr std::_Ios_Openmode std::operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b)\u0000HR\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0002_j_lï¿½$@\u0001mjmlï¿½$@\u0001ï¿½55ï¿½Tbï¿½S}inline bool std::operator==(const move_iterator<_IteratorL> &__x, const move_iterator<_IteratorR> &__y)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½\u001c;Ýï¿½|ï¿½inline std::streamsize std::__copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout)\u0000.8\"\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001\u0018:ï¿½$@\u0001ï¿½)ï¿½Zï¿½MØinline bool std::operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½\byï¿½\u0005\u001cï¿½explicit std::basic_ostream::sentry::sentry(basic_ostream<_CharT, _Traits> &__os)\u0000\u0012J\f\u0001.\b.\u0014ï¿½\u0002\u0004\u0001,\u00049\n\u0000 @brief  The constructor performs preparatory work.\n @param  __os  The output stream to guard.\n\n If the stream state is good (@a __os.good() is true), then if the\n stream is tied to another output stream, @c is.tie()->flush()\n is called to synchronize the output sequences.\n\n If the stream state is still good, then the sentry state becomes\n true (@a okay).\u0000\u0000\u0001ï¿½\u0018ï¿½Bï¿½G3ï¿½\f\u00032:2Bï¿½c\nS-\u000b\u0002ï¿½\u0003ï¿½$@5\u001e5&ï¿½c\nS-\u000b\u0002ï¿½\u0003ï¿½$@8\f8\u001cï¿½;ï¿½\u0002&ï¿½G\u0003ï¿½$@\t\u0005\u0000\u0000\u0000\u0000ï¿½\u0007$ï¿½Uï¿½inline bool std::operator==(const std::error_code &__lhs, const std::error_code &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½Oï¿½Hï¿½std::basic_ostream::__ostream_type &std::basic_ostream::operator<<(int __n)\u0000Hp\u0014\u0001i\bi\u001cï¿½\u0002\u0004\u0001f\u0004r\n\u0000\u0000\u0000\u0002ï¿½+ï¿½sï¿½~ï¿½EÙ©%$)ï¿½9\u0006mjmlï¿½C]Gg3\u001b\u0003ï¿½$@mjmlï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@mjmlï¿½{1HÅRE\u0003ï¿½$@mjmlï¿½C]Gg3\u001b\u0003ï¿½$@mjmlï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@mjmlï¿½{1HÅRE\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½P\u0002;ï¿½ÕKï¿½std::basic_ostream::__ostream_type &std::basic_ostream::operator<<(short __n)\u0000Hp\u0014\u0001[\b[\u001cï¿½\u0002\u0004\u0001X\u0004d\n\u0000\u0000\u0000\u0002ï¿½($ï¿½ ï¿½Tï¿½G\u0014Nqï¿½8ï¿½R\u0006_j_lï¿½C]Gg3\u001b\u0003ï¿½$@_j_lï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@_j_lï¿½{1HÅRE\u0003ï¿½$@_j_lï¿½C]Gg3\u001b\u0003ï¿½$@_j_lï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@_j_lï¿½{1HÅRE\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Æ·ï¿½\u0015ï¿½\u0010inline const _Facet &std::__check_facet(const _Facet *__f)\u0000*4\u001a\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001G>GXï¿½$@\u0001ï¿½Ð;ï¿½EYï¿½std::basic_ostream::__ostream_type &std::basic_ostream::seekp(std::basic_ostream::pos_type)\u0000Hp\n\u0001ï¿½\u0001\u0001\bï¿½\u0001\u0001\u0012ï¿½\u0002\u0004\u0001ï¿½\u0000\u0004ï¿½\u001c\u0001\n\u0000 @brief  Changing the current write position.\n @param  __pos  A file position object.\n @return  *this\n\n If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If\n that function fails, sets failbit.\u0000\u0000\u0003ï¿½o\u0001ï¿½Eï¿½\u001bwï¿½blï¿½\u001bï¿½Xï¿½,ï¿½qï¿½Fi\u0011ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½vgï¿½[1\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½Rï¿½-ï¿½}ï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½fDtï¿½\u00189ï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½,L,ï¿½\u0000ï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½55ï¿½Tbï¿½S}\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½\u001bï¿½Í¯ï¿½\u0014nï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½\u001e\"2Cï¿½@+C\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½)ï¿½Zï¿½MØ\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½\u0006\u0010Sï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½@\u0013Ò\u0010\tï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½/ï¿½\t_ï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½\u0007$ï¿½Uï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½rï¿½Zï¿½SFï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½Þ¤9\bï¿½.\u0003ï¿½\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½;ï¿½\u001fï¿½\u001c\u0003ï¿½$@ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½\u0007ï¿½\u0007|ï¿½{\u0015y\u0003ï¿½$@ï¿½\u000f\u0001\u0010ï¿½\u000f\u0001\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½w/Yï¿½Õ§[std::basic_ostream::__ostream_type &std::basic_ostream::_M_insert(_ValueT __v)\u0000Hp\u0012\u0001?\f?\u001eï¿½\u0002\u0004\u0001;\u0004V\u000e\u0000\u0000\u0000\u0004ï¿½X!ï¿½^ï¿½\"Tï¿½Ð ;xï¿½\u000fï¿½?ï¿½Ú­ï¿½Ä¨ï¿½Zjï¿½\u0016\u0003G>GXï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@G>GXï¿½Æ·ï¿½\u0015ï¿½\u0010\u0003ï¿½$@I\u0014I\u0018ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½iï¿½\u0003ï¿½std::basic_ostream::__ostream_type &std::basic_ostream::operator<<(std::basic_ostream::__streambuf_type *__sb)\u0000Hp\u0014\u0001w\bw\u001cï¿½\u0002\u0004\u0001t\u0004ï¿½\n\u0000 @brief  Extracting from another streambuf.\n @param  __sb  A pointer to a streambuf\n\n This function behaves like one of the basic arithmetic extractors,\n in that it also constructs a sentry object and has the same error\n handling behavior.\n\n If @p __sb is NULL, the stream will set failbit in its error state.\n\n Characters are extracted from @p __sb and inserted into @c *this\n until one of the following occurs:\n\n - the input stream reaches end-of-file,\n - insertion into the output sequence fails (in this case, the\n   character that would have been inserted is not extracted), or\n - an exception occurs while getting a character from @p __sb, which\n   sets failbit in the error state\n\n If the function inserts no characters, failbit is set.\u0000\u0000\u0003ï¿½Ljï¿½\u0004Y\bï¿½qï¿½cï¿½z\u0002\u0006ï¿½}ï¿½\u0014\n~ï¿½\u0003\u0018:ï¿½\u001c;Ýï¿½|ï¿½\u0003ï¿½$@ï¿½\u0010ï¿½\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@ï¿½\u000eï¿½\u0012ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½C]Gg3\u001binline constexpr std::_Ios_Fmtflags std::operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)\u0000HR\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0002_j_lï¿½$@\u0001mjmlï¿½$@\u0001ï¿½9]ï¿½Nï¿½\u0015std::basic_ostream::__ostream_type &std::basic_ostream::seekp(std::basic_ostream::off_type, ios_base::seekdir)\u0000Hp\n\u0001ï¿½!\u0001\bï¿½!\u0001\u0012ï¿½\u0002\u0004\u0001ï¿½\u001e\u0001\u0004ï¿½<\u0001\n\u0000 @brief  Changing the current write position.\n @param  __off  A file offset object.\n @param  __dir  The direction in which to seek.\n @return  *this\n\n If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).\n If that function fails, sets failbit.\u0000\u0000\u0004ï¿½aï¿½Lï¿½=ï¿½Iï¿½_\u0010Lï¿½\u001d\u0006ï¿½sï¿½6ï¿½5TO\u0005ï¿½\u0011ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½vgï¿½[1\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½Rï¿½-ï¿½}ï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½fDtï¿½\u00189ï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½,L,ï¿½\u0000ï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½55ï¿½Tbï¿½S}\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½\u001bï¿½Í¯ï¿½\u0014nï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½\u001e\"2Cï¿½@+C\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½)ï¿½Zï¿½MØ\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½\u0006\u0010Sï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½@\u0013Ò\u0010\tï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½/ï¿½\t_ï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½\u0007$ï¿½Uï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½rï¿½Zï¿½SFï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½Þ¤9\bï¿½.\u0003ï¿½\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½;ï¿½\u001fï¿½\u001c\u0003ï¿½$@ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½\u0007ï¿½\u0007|ï¿½{\u0015y\u0003ï¿½$@ï¿½/\u0001\u0010ï¿½/\u0001\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u001bï¿½Í¯ï¿½\u0014nï¿½inline bool std::operator==(const move_iterator<_Iterator> &__x, const move_iterator<_Iterator> &__y)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½c\nS-\u000b\u0002ï¿½bool std::basic_ios::good() const\u0000\n*\b\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u00022:2Bï¿½$@\u00015\u001e5&ï¿½$@\u0001ï¿½à¨¾ï¿½!\u000fstd::basic_ostream::__ostream_type &std::basic_ostream::put(std::basic_ostream::char_type __c)\u0000Hp\u0006\u0001ï¿½\bï¿½\u000eï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0000 @brief  Simple insertion.\n @param  __c  The character to insert.\n @return  *this\n\n Tries to insert @p __c.\n\n @note  This function is not overloaded on signed char and\n        unsigned char.\u0000\u0000\u0004ï¿½f\fï¿½\u000fï¿½\nï¿½O7ï¿½\u0000ï¿½\u0017ï¿½/?Zdï¿½\n\tï¿½\u0000ï¿½\u0014ï¿½\u0001ï¿½\u0010ï¿½\u0014ï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½P=@Ïº\u000eï¿½Tstd::basic_ostream::__ostream_type &std::basic_ostream::write(const std::basic_ostream::char_type *__s, std::streamsize __n)\u0000Hp\n\u0001ï¿½\bï¿½\u0012ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0000 @brief  Character string insertion.\n @param  __s  The array to insert.\n @param  __n  Maximum number of characters to insert.\n @return  *this\n\n Characters are copied from @p __s and inserted into the stream until\n one of the following happens:\n\n - @p __n characters are inserted\n - inserting into the output sequence fails (in this case, badbit\n   will be set in the stream's error state)\n\n @note  This function is not overloaded on signed char and\n        unsigned char.\u0000\u0000\u0003ï¿½\u0013+8Kï¿½Cï¿½'\"ï¿½:ï¿½f\u0010ï¿½:Wï¿½\u0001ï¿½\u000eï¿½\u001eï¿½\u0017ï¿½Zï¿½\u000b\u000fï¿½T\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½yï¿½\u0012:ï¿½inline const std::_Ios_Iostate &std::operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)\u0000@J\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0007I\u0014I\u0018ï¿½$@\u0001ï¿½\u0010ï¿½\u0014ï¿½$@\u0001ï¿½\u000eï¿½\u0012ï¿½$@\u0001ï¿½\u0010ï¿½\u0014ï¿½$@\u0001ï¿½\u0016ï¿½\u001aï¿½$@\u0001ï¿½\u000f\u0001\u0010ï¿½\u000f\u0001\u0014ï¿½$@\u0001ï¿½/\u0001\u0010ï¿½/\u0001\u0014ï¿½$@\u0001ï¿½fDtï¿½\u00189ï¿½inline bool std::operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½Þ¤9\bï¿½.\u0003ï¿½inline bool std::operator==(const std::error_condition &__lhs, const std::error_condition &__rhs) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½\u0017ï¿½Zï¿½\u000b\u000fï¿½Tvoid std::basic_ostream::_M_write(const std::basic_ostream::char_type *__s, std::streamsize __n)\u0000\n2\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001ï¿½\u000eï¿½\u001eï¿½$@\u0001ï¿½;ï¿½\u0002&ï¿½Gvoid std::basic_ios::setstate(std::ios_base::iostate __state)\u0000\n*\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u00028\f8\u001cï¿½$@\u0001ï¿½C\u0001\u000eï¿½C\u0001\u001eï¿½$@\u0001ï¿½\u0006\u0010Sï¿½inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type std::operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) noexcept\u0000ï¿½\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½<ï¿½V\u000e\u0007J\u0015std::basic_ostream::__ostream_type &std::basic_ostream::flush()\u0000Hp\n\u0001ï¿½\bï¿½\u0012ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0000 @brief  Synchronizing the stream buffer.\n @return  *this\n\n If @c rdbuf() is a null pointer, changes nothing.\n\n Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,\n sets badbit.\u0000\u0000\u0001ï¿½Fï¿½aï¿½%ï¿½U\u0011ï¿½bï¿½fï¿½vgï¿½[1\u0003ï¿½$@ï¿½bï¿½fï¿½Rï¿½-ï¿½}ï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½fDtï¿½\u00189ï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½,L,ï¿½\u0000ï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½55ï¿½Tbï¿½S}\u0003ï¿½$@ï¿½bï¿½fï¿½\u001bï¿½Í¯ï¿½\u0014nï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½\u001e\"2Cï¿½@+C\u0003ï¿½$@ï¿½bï¿½fï¿½)ï¿½Zï¿½MØ\u0003ï¿½$@ï¿½bï¿½fï¿½\u0006\u0010Sï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½@\u0013Ò\u0010\tï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½/ï¿½\t_ï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½\u0007$ï¿½Uï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½rï¿½Zï¿½SFï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½Þ¤9\bï¿½.\u0003ï¿½\u0003ï¿½$@ï¿½bï¿½fï¿½;ï¿½\u001fï¿½\u001c\u0003ï¿½$@ï¿½bï¿½fï¿½\u0007ï¿½\u0007|ï¿½{\u0015y\u0003ï¿½$@ï¿½\u0016ï¿½\u001aï¿½yï¿½\u0012:ï¿½\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½{1HÅREinline constexpr std::_Ios_Iostate std::operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b)\u0000FP\u0012\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0002_j_lï¿½$@\u0001mjmlï¿½$@\u0001ï¿½vgï¿½[1inline bool std::operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½Rï¿½-ï¿½}ï¿½inline constexpr bool std::operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y)\u0000,6\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½,L,ï¿½\u0000ï¿½inline bool std::operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½wï¿½jlï¿½_CharT *std::operator<<(basic_ostream<_CharT, _Traits> &, const char *)::__ptr_guard::__get()\u0000\u0010ï¿½\n\u0001ï¿½P\u0001\u0014ï¿½P\u0001\u001e\u0002\u0001ï¿½P\u0001\u0004ï¿½P\u0001B\u0000\u0000\u0000\u0000\u0000\u0006\u0017\u0000\u0000\u0000\u0000ï¿½Wiï¿½B%ï¿½Wstd::operator<<(basic_ostream<_CharT, _Traits> &, const char *)::__ptr_guard::__ptr_guard(_CharT *__ip)\u0000\u0000ï¿½\u0016\u0001ï¿½N\u0001\u0004ï¿½N\u0001\u001a\u0002\u0001ï¿½N\u0001\u0004ï¿½N\u0001V\u0000\u0000\u0000\u0002ï¿½Hï¿½>A\u0002ï¿½kï¿½Hï¿½>A\u0002ï¿½kï¿½\u0000\t\u0017\u0000\u0000\u0000\u0000ï¿½\u001e\"2Cï¿½@+Cinline bool std::operator==(const allocator<_T1> &, const allocator<_T2> &) noexcept\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½Xï¿½6\u0014ï¿½basic_ostream<_CharT, _Traits> &std::__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, std::streamsize __n)\u0000@J \u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½V\u0001\u000eï¿½V\u0001.ï¿½$@\u0001ï¿½\u0007ï¿½\u0007|ï¿½{\u0015yinline bool std::operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½@\u0013Ò\u0010\tï¿½inline bool std::operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u0001ï¿½/ï¿½\t_ï¿½inline bool std::operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs)\u0000\u0018\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0003ï¿½bï¿½fï¿½$@\u0001ï¿½\u000e\u0001\u001eï¿½\u000e\u0001\"ï¿½$@\u0001ï¿½.\u0001\u001eï¿½.\u0001\"ï¿½$@\u00019ï¿½8PB\u001aEï¿½ltemplate<> struct std::char_traits<char> {}\u0000$.\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001ï¿½H\u00012ï¿½H\u0001H\u0004\u0001ï¿½\u0014\u0012ï¿½\u0010Tï¿½struct __ptr_guard {}\u0000\u000e\u000e\u0016\u0000\u0000\u0001ï¿½K\u0001\u001cï¿½K\u00012\u0002\u0001ï¿½K\u0001\u000eï¿½Q\u0001\u0010\u0000\u0003ï¿½Wiï¿½B%ï¿½Wï¿½1\u0010/\u0006ï¿½*ï¿½wï¿½jlï¿½\u0000\u0002ï¿½_ï¿½\u000e%ï¿½F\u0001ï¿½_ï¿½\u000e%ï¿½F\u0001\u0000\u0017\f\u0000\u0000\u0001ï¿½!ï¿½\nï¿½~ï¿½\u0002ï¿½N\u0001\u0004ï¿½N\u0001\u001a\u0004\u0001ï¿½O\u0001\u0006ï¿½O\u0001\u001c\u0004\u0001ï¿½\\\u0014ï¿½\u0018kï¿½m&typedef unsigned long std::size_t\u0000,6\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0002ï¿½H\u0001\u0012ï¿½H\u0001\u001e\u0004\u0001ï¿½T\u0001\u0018ï¿½T\u0001$\u0004\u0001ï¿½Vï¿½@0ï¿½\u0017>\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½2cï¿½hï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u001f\u00014ï¿½\u001f\u0001B\u0004\u0001ï¿½ \u00014ï¿½ \u0001B\u0004\u0001ï¿½\rGVRNlï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u001f\u0001$ï¿½\u001f\u00010\u0004\u0001ï¿½ \u0001$ï¿½ \u00010\u0004\u0001ï¿½åï¿½typedef typename _Traits::off_type off_type\u0000\"4\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0001ï¿½aï¿½Lï¿½=ï¿½\u0003ï¿½\u000e\u00016ï¿½\u000e\u0001F\u0004\u0001ï¿½!\u0001\u0014ï¿½!\u0001$\u0004\u0001ï¿½.\u00016ï¿½.\u0001F\u0004\u0001ï¿½L{\u001deX_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0000$ï¿½\u00000\u0004\u0001ï¿½\u0000\u0001$ï¿½\u0000\u00010\u0004\u0001ï¿½L\u0001\u0000\u0013ï¿½\f'\u000btypedef typename _Traits::pos_type pos_type\u0000\"4\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0004ï¿½{lp2ï¿½[ï¿½o\u0001ï¿½Eï¿½\u001bwï¿½,ï¿½qï¿½Fiï¿½6ï¿½5TO\u0005ï¿½\bï¿½Zï¿½j\u0004\u0001ï¿½\fï¿½\u001c\u0004\u0001ï¿½.ï¿½>\u0004\u0001ï¿½\u0001\u0001\u0014ï¿½\u0001\u0001$\u0004\u0001ï¿½\n\u0001\u001aï¿½\n\u0001*\u0004\u0001ï¿½\u000e\u0001$ï¿½\u000e\u00014\u0004\u0001ï¿½*\u0001\u001aï¿½*\u0001*\u0004\u0001ï¿½.\u0001$ï¿½.\u00014\u0004\u0001ï¿½e\u0010(ï¿½f8)_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½Fï¿½T\u0004\u0001ï¿½4ï¿½B\u0004\u0001ï¿½jï¿½4wï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½6ï¿½B\u0004\u0001ï¿½$ï¿½0\u0004\u0001ï¿½8ï¿½U\u0013typedef std::_Ios_Seekdir std::ios_base::seekdir\u00004R\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Vï¿½@0ï¿½\u0017>ï¿½\u0000\u0000\u0000\u0001ï¿½Iï¿½_\u0010Lï¿½\u0001ï¿½!\u0001Hï¿½!\u0001V\u0004\u0001ï¿½]ï¿½\bï¿½rï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0014]ï¿½Zï¿½typedef std::ptrdiff_t std::streamsize\u0000.8\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½]ï¿½\bï¿½rï¿½Vï¿½\u0000\u0000\u0000\u0000\u0001ï¿½:ï¿½N\u0004\u0001ï¿½!8s\u0014ï¿½kï¿½\u001d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½3ï¿½,oË¬typedef _Traits std::basic_ostream::traits_type\u0000 H\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½!8s\u0014ï¿½kï¿½\u001dï¿½\u0000\u0000\u0000\u0000\u0002ï¿½\u0016ï¿½,\u0004\u0001ï¿½Vï¿½l\u0004\u0001ï¿½Eï¿½tï¿½[typedef typename _Traits::int_type int_type\u0000\"4\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0001ï¿½\u0000ï¿½\u0014ï¿½\u0001ï¿½\u001aï¿½*\u0004\u0001ï¿½(Ç ï¿½]\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½2ï¿½Dï¿½\u0010ï¿½hï¿½Ñ«ï¿½\u0000ï¿½Bï¿½vï¿½yX_ValueT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0001ï¿½X!ï¿½^ï¿½\"T\u0001? ?.\u0004\u0001ï¿½| Rhï¿½\u00106_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002u4uB\u0004\u0001v4vB\u0004\u0001ï¿½Vï¿½É_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002=8=F\u0004\u0001>8>F\u0004\u0001ï¿½7Ñ·N5\u0002ï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002=(=4\u0004\u0001>(>4\u0004\u0001ï¿½=ï¿½sï¿½Å©}_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u00004ï¿½\u0000B\u0004\u0001ï¿½\u0000\u00014ï¿½\u0000\u0001B\u0004\u0001ï¿½\u001a\u0003\u0002\u0018Gï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0001U+w\u0017Oï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002.B.P\u0004\u0001-4-B\u0004\u0001ï¿½\u0011\fBï¿½%typedef std::_Ios_Iostate std::ios_base::iostate\u00004R\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\u0000\u0000\u0000\u0006ï¿½?ï¿½Ú­ï¿½cï¿½z\u0002\u0006ï¿½/?Zdï¿½\n\tï¿½Fï¿½aï¿½%ï¿½Uï¿½blï¿½\u001bï¿½Xï¿½\u001d\u0006ï¿½sï¿½\u0006D\u001eD,\u0004\u0001y y.\u0004\u0001ï¿½\u001aï¿½(\u0004\u0001ï¿½ ï¿½.\u0004\u0001ï¿½\u0003\u0001 ï¿½\u0003\u0001.\u0004\u0001ï¿½#\u0001 ï¿½#\u0001.\u0004\u0001ï¿½\u001d\fï¿½\u001d_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0005ï¿½_ï¿½\u000e%ï¿½Fï¿½Hï¿½>A\u0002ï¿½kï¿½_ï¿½\u000e%ï¿½Fï¿½Hï¿½>A\u0002ï¿½kï¿½\u0018ï¿½Bï¿½2\u0007ï¿½?\u0001$ï¿½?\u00010\u0004\u0001ï¿½@\u0001:ï¿½@\u0001F\u0004\u0001ï¿½M\u0001\u0004ï¿½M\u0001\u0010\u0004\u0001ï¿½N\u0001\u001eï¿½N\u0001*\u0004\u0001ï¿½P\u0001\u0004ï¿½P\u0001\u0010\u0004\u0001ï¿½Q\u0001&ï¿½Q\u00012\u0004\u0001ï¿½S\u0001\u000eï¿½S\u0001\u001a\u0004\u0001ï¿½æ¨,2\u0012{_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002.2.>\u0004\u0001-$-0\u0004\u0001ï¿½Rï¿½)ï¿½\u0014ï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½$ï¿½0\u0004\u0001ï¿½$ï¿½0\u0004\u0001ï¿½qï¿½Vï¿½lï¿½typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits>> std::basic_ostream::__num_put_type\u0000|ï¿½\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u001a\u0003\u0002\u0018Gï¿½\u0000\u0000\u0000\u0001ï¿½Ä¨ï¿½Zjï¿½\u0016\u0001G\u0010G,\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½+ï¿½sï¿½~\u0000ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½'\"ï¿½\u0000ï¿½jï¿½\u0010u91class std::basic_ostream : virtual public basic_ios<_CharT, _Traits> {}\u0000\f\u0016\u001a\u0000\u0000\u0000\u0000\nï¿½w/Yï¿½Õ§[ï¿½P\u0002;ï¿½ÕKï¿½Oï¿½Hï¿½iï¿½\u0003ï¿½à¨¾ï¿½!\u000fï¿½P=@Ïº\u000eï¿½Tï¿½<ï¿½V\u000e\u0007J\u0015ï¿½Vï¿½\fï¿½Ð;ï¿½EYï¿½9]ï¿½Nï¿½\u0015\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002ï¿½\u0018ï¿½Bï¿½G3ï¿½\fï¿½\t\"sï¿½\tfd\u001a.\u0016.0\u0004\u0001-\b-\"\u0004\u0001=\f=&\u0004\u0001>\f>&\u0004\u0001Y\bY\"\u0004\u0001Z\bZ\"\u0004\u0001g\bg\"\u0004\u0001h\bh\"\u0004\u0001u\bu\"\u0004\u0001v\bv\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\u001aï¿½4\u0004\u0001ï¿½\bï¿½\"\u0004\u0001ï¿½\u0000\bï¿½\u0000\"\u0004\u0001ï¿½\u0000\u0001\bï¿½\u0000\u0001\"\u0004\u0001ï¿½\u001f\u0001\bï¿½\u001f\u0001\"\u0004\u0001ï¿½ \u0001\bï¿½ \u0001\"\u0004\u0001ï¿½?\u0001\bï¿½?\u0001\"\u0004\u0001ï¿½@\u0001\u001eï¿½@\u00018\u0004\u0001ï¿½f\u00010ï¿½f\u0001J\u0004\u0001ï¿½}\u00010ï¿½}\u0001J\u0004\u0001ï¿½wa\u0000ï¿½7ï¿½\u0018J_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½?\u00014ï¿½?\u0001B\u0004\u0001ï¿½@\u0001Jï¿½@\u0001X\u0004\u0001ï¿½\fï¿½Zbï¿½class std::ios_base {}\u0000\f\u0016\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u000048\u001e8.\u0004\u0001D\nD\u001a\u0004\u0001D>DN\u0004\u0001I\u001aI*\u0004\u0001M(M8\u0004\u0001Q6QF\u0004\u0001_\u0018_(\u0004\u0001_n_~\u0004\u0001`&`6\u0004\u0001`Z`j\u0004\u0001m\u0018m(\u0004\u0001mnm~\u0004\u0001n&n6\u0004\u0001nZnj\u0004\u0001y\fy\u001c\u0004\u0001y@yP\u0004\u0001ï¿½\u0016ï¿½&\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½\u0014ï¿½$\u0004\u0001ï¿½\u0006ï¿½\u0016\u0004\u0001ï¿½:ï¿½J\u0004\u0001ï¿½\u0016ï¿½&\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½2ï¿½B\u0004\u0001ï¿½\fï¿½\u001c\u0004\u0001ï¿½@ï¿½P\u0004\u0001ï¿½\u001cï¿½,\u0004\u0001ï¿½*ï¿½:\u0004\u0001ï¿½*ï¿½:\u0004\u0001ï¿½Tï¿½d\u0004\u0001ï¿½rï¿½\u0004\u0001ï¿½*ï¿½:\u0004\u0001ï¿½*ï¿½:\u0004\u0001ï¿½\u0003\u0001\fï¿½\u0003\u0001\u001c\u0004\u0001ï¿½\u0003\u0001@ï¿½\u0003\u0001P\u0004\u0001ï¿½\u000b\u0001\u0018ï¿½\u000b\u0001(\u0004\u0001ï¿½\u000f\u0001\u0016ï¿½\u000f\u0001&\u0004\u0001ï¿½\u0014\u0001*ï¿½\u0014\u0001:\u0004\u0001ï¿½\u0018\u0001*ï¿½\u0018\u0001:\u0004\u0001ï¿½!\u00014ï¿½!\u0001D\u0004\u0001ï¿½#\u0001\fï¿½#\u0001\u001c\u0004\u0001ï¿½#\u0001@ï¿½#\u0001P\u0004\u0001ï¿½+\u0001\u0018ï¿½+\u0001(\u0004\u0001ï¿½/\u0001\u0016ï¿½/\u0001&\u0004\u0001ï¿½4\u0001*ï¿½4\u0001:\u0004\u0001ï¿½8\u0001*ï¿½8\u0001:\u0004\u0001ï¿½C\u0001 ï¿½C\u00010\u0004\u0001ï¿½Z\u00012ï¿½Z\u0001B\u0004\u0001ï¿½^\u00012ï¿½^\u0001B\u0004\u0001ï¿½|ï¿½ \u0005Yï¿½Eclass std::basic_ostream::sentry {}\u0000\f4\f\u0000\u0000\u0000\u0000\u0001ï¿½\byï¿½\u0005\u001cï¿½\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0004ï¿½Ð ;xï¿½\u000fï¿½}ï¿½\u0014\n~ï¿½O7ï¿½\u0000ï¿½\u0017ï¿½:ï¿½f\u0010ï¿½:Wï¿½\u0006-H-T\u0004\u0001.\b.\u0014\u0004\u0001A\u0002A\u000e\u0004\u0001z\fz\u0018\u0004\u0001ï¿½\fï¿½\u0018\u0004\u0001ï¿½\fï¿½\u0018\u0004\u0001ï¿½Z\bï¿½\u0005ï¿½7ï¿½Jnamespace std {}\u0000\u0014\u0014\u0006\u0000Outline of libstdc++ namespaces.\n\nnamespace std\n{\nnamespace __debug { }\nnamespace __parallel { }\nnamespace __cxx1998 { }\n\nnamespace __detail {\nnamespace __variant { }\t\t\t\t// C++17\n}\n\nnamespace rel_ops { }\n\nnamespace tr1\n{\nnamespace placeholders { }\nnamespace regex_constants { }\nnamespace __detail { }\n}\n\nnamespace tr2 { }\n\nnamespace decimal { }\n\nnamespace chrono { }\t\t\t\t// C++11\nnamespace placeholders { }\t\t\t\t// C++11\nnamespace regex_constants { }\t\t\t// C++11\nnamespace this_thread { }\t\t\t\t// C++11\ninline namespace literals {\t\t\t\t// C++14\ninline namespace chrono_literals { }\t\t// C++14\ninline namespace complex_literals { }\t\t// C++14\ninline namespace string_literals { }\t\t// C++14\ninline namespace string_view_literals { }\t\t// C++17\n}\n}\n\nnamespace abi { }\n\nnamespace __gnu_cxx\n{\nnamespace __detail { }\n}\n\nFor full details see:\nhttp://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html\u0000\u0000\u0000\u0001ï¿½^Òï¿½x\u0000\u0000\u0000\u0003\u0000\u0001(\u0014(\u001a\u0001\u0001(\u0000ï¿½\u0001\u0002\u0000\u0000\u0000ï¿½8ï¿½d\u0014ï¿½S_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½4ï¿½B\u0004\u0001ï¿½4ï¿½B\u0004\u0001ï¿½p1>ï¿½zL.@_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½4ï¿½B\u0004\u0001ï¿½4ï¿½B\u0004\u0001ï¿½#ï¿½Sï¿½\u0002\u0013\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Jï¿½eï¿½\u0015Uï¿½namespace __cxxabiv1 {}\u0000\u0014\u0014\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0012K\u001aK.\u0004\u0001K\u001aK.@\u0000ï¿½\u0016ï¿½*\u0004\u0001ï¿½\u0016ï¿½*@\u0000ï¿½\u0016ï¿½*\u0004\u0001ï¿½\u0016ï¿½*@\u0000ï¿½\u0016ï¿½*\u0004\u0001ï¿½\u0016ï¿½*@\u0000ï¿½\u001cï¿½0\u0004\u0001ï¿½\u001cï¿½0@\u0000ï¿½\u001cï¿½0\u0004\u0001ï¿½\u001cï¿½0@\u0000ï¿½\u0012\u0001\u001cï¿½\u0012\u00010\u0004\u0001ï¿½\u0012\u0001\u001cï¿½\u0012\u00010@\u0000ï¿½2\u0001\u001cï¿½2\u00010\u0004\u0001ï¿½2\u0001\u001cï¿½2\u00010@\u0000ï¿½X\u0001\u0016ï¿½X\u0001*\u0004\u0001ï¿½X\u0001\u0016ï¿½X\u0001*@\u0000ï¿½L\u00019ï¿½class __cxxabiv1::__forced_unwind {}\u0000\f$\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0012K2KP\u0004\u0001K2KP@\u0000ï¿½.ï¿½L\u0004\u0001ï¿½.ï¿½L@\u0000ï¿½.ï¿½L\u0004\u0001ï¿½.ï¿½L@\u0000ï¿½.ï¿½L\u0004\u0001ï¿½.ï¿½L@\u0000ï¿½4ï¿½R\u0004\u0001ï¿½4ï¿½R@\u0000ï¿½4ï¿½R\u0004\u0001ï¿½4ï¿½R@\u0000ï¿½\u0012\u00014ï¿½\u0012\u0001R\u0004\u0001ï¿½\u0012\u00014ï¿½\u0012\u0001R@\u0000ï¿½2\u00014ï¿½2\u0001R\u0004\u0001ï¿½2\u00014ï¿½2\u0001R@\u0000ï¿½X\u0001.ï¿½X\u0001L\u0004\u0001ï¿½X\u0001.ï¿½X\u0001L@\u0000ï¿½Þ£ï¿½3HQtypedef std::_Ios_Fmtflags std::ios_base::fmtflags\u00006T\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0000\u0000\u0000\u0002ï¿½G\u0014Nqï¿½8ï¿½Rï¿½EÙ©%$)ï¿½9\u0002_,_<\u0004\u0001m,m<\u0004\u0001ï¿½\u0018sï¿½<Xcï¿½typedef _CharT std::basic_ostream::char_type\u0000\u001eF\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½(Ç ï¿½]ï¿½\u0000\u0000\u0000\u0001ï¿½f\fï¿½\u000fï¿½\n\u0001ï¿½\u0010ï¿½\"\u0004\u0001ï¿½?8jï¿½\u0005ï¿½jc_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002u$u0\u0004\u0001v$v0\u0004\u0001ï¿½yï¿½~\b\u000fï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002Y$Y0\u0004\u0001Z$Z0\u0004\u0001ï¿½@dOï¿½;È°%_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002Y4YB\u0004\u0001Z4ZB\u0004\u0001ï¿½qï¿½ >]ï¿½_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0001ï¿½\u0013+8Kï¿½C\u0003ï¿½$ï¿½0\u0004\u0001ï¿½ ï¿½,\u0004\u0001ï¿½$ï¿½0\u0004\u0001ï¿½7c<ï¿½0ï¿½p\b_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½$ï¿½0\u0004\u0001ï¿½$ï¿½0\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½($ï¿½ ï¿½Tï¿½\u0000ï¿½\u0019Cï¿½I\u0003ï¿½\u0004`_CharT\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002g$g0\u0004\u0001h$h0\u0004\u0001ï¿½3ï¿½BÕu\\_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002ï¿½4ï¿½B\u0004\u0001ï¿½4ï¿½B\u0004\u0001ï¿½Õ©>dï¿½\u0005ï¿½_Traits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002g4gB\u0004\u0001h4hB\u0004\u0001ï¿½Oï¿½Üï¿½typedef basic_streambuf<_CharT, _Traits> std::basic_ostream::__streambuf_type\u0000Rz \u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½#ï¿½Sï¿½\u0002\u0013\u0011ï¿½\u0000\u0000\u0000\u0001ï¿½Ljï¿½\u0004Y\bï¿½q\u0001w\u001ew>\u0004\u00016ï¿½\u0010ï¿½hï¿½Ñ«ï¿½std::size_t __i\u0000\u0018\u0018\u0006std::size_t __i = 0\u0000\u0000\u0001ï¿½T\u0001(ï¿½T\u0001.\u0002\u0001ï¿½T\u0001\u0018ï¿½T\u00016ï¿½\r\f\u0000\u0000\u0004ï¿½T\u0001:ï¿½T\u0001@\f\u0001ï¿½T\u0001Zï¿½T\u0001`\u001c\u0001ï¿½U\u0001\u000eï¿½U\u0001\u0014\u0004\u0001ï¿½U\u0001<ï¿½U\u0001B\f\u0001ï¿½\u0018ï¿½Bï¿½2_CharT *__ws\u0000\u0010\u0010\b_CharT *__ws = __pg.__get()\u0000\u0000\u0001ï¿½S\u0001\u001eï¿½S\u0001&\u0002\u0001ï¿½S\u0001\u000eï¿½S\u0001Dï¿½\u001d\fï¿½\u001d\r\f\u0000\u0000\u0002ï¿½U\u0001\u0004ï¿½U\u0001\f\u0004\u0001ï¿½V\u0001>ï¿½V\u0001F\u0004\u0001ï¿½2ï¿½Dconst std::size_t __clen\u0000$$\fconst std::size_t __clen = char_traits<char>::length(__s)\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\n167.  Improper use of traits_type::length()\u0000\u0001ï¿½H\u0001 ï¿½H\u0001,\u0002\u0001ï¿½H\u0001\u0006ï¿½H\u0001nï¿½\r\f\u0000\u0000\u0003ï¿½Q\u00014ï¿½Q\u0001@\f\u0001ï¿½T\u0001Fï¿½T\u0001R\f\u0001ï¿½V\u0001Jï¿½V\u0001V\u0004\u0001ï¿½,ï¿½qï¿½Ficonst std::basic_ostream::pos_type __p\u0000FF\u0006const std::basic_ostream::pos_type __p = this->rdbuf()->pubseekpos(__pos,\n\t\t\t\t\t\t\t     ios_base::out)\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\n136.  seekp, seekg setting wrong streams?\u0000\u0001ï¿½\n\u0001,ï¿½\n\u00012\u0002\u0001ï¿½\n\u0001\u000eï¿½\u000b\u00014ï¿½L\u0001\u0000\u0013ï¿½\f'\u000b\r\u0006\u0000\u0000\u0001ï¿½\u000e\u0001\u0016ï¿½\u000e\u0001\u001c\u0004\u0001ï¿½o\u0001ï¿½Eï¿½\u001bwstd::basic_ostream::pos_type __pos\u0000::\n\u0000\u0000\u0001ï¿½\u0001\u0001&ï¿½\u0001\u00010ï¿½\u0002\u0004\u0001ï¿½\u0001\u0001\u0014ï¿½\u0001\u00010ï¿½L\u0001\u0000\u0013ï¿½\f'\u000bï¿½\u0006\u0000\u0000\u0001ï¿½\n\u0001lï¿½\n\u0001v\u0004\u0001ï¿½\u0006ï¿½Jstatic const std::ios_base::seekdir std::ios_base::cur\u0000Hf\u0006static const std::ios_base::seekdir std::ios_base::cur = _S_cur\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0001ï¿½hï¿½n\u0004\u0001ï¿½{lp2ï¿½[ï¿½std::basic_ostream::pos_type __ret\u0000::\nstd::basic_ostream::pos_type __ret = pos_type(-1)\u0000\u0000\u0001ï¿½\u001eï¿½(\u0002\u0001ï¿½\fï¿½Fï¿½L\u0001\u0000\u0013ï¿½\f'\u000b\r\u0006\u0000\u0000\u0002ï¿½\nï¿½\u0014\u0014\u0001ï¿½\u001aï¿½$\u0004\u0001ï¿½aï¿½Lï¿½=ï¿½std::basic_ostream::off_type __off\u0000::\n\u0000\u0000\u0001ï¿½!\u0001&ï¿½!\u00010ï¿½\u0002\u0004\u0001ï¿½!\u0001\u0014ï¿½!\u00010ï¿½åï¿½\u0006\u0000\u0000\u0001ï¿½*\u0001lï¿½*\u0001v\u0004\u0001ï¿½:ï¿½f\u0010ï¿½:Wï¿½std::basic_ostream::sentry __cerb\u000066\fstd::basic_ostream::sentry __cerb = (*this)\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\nDR 60. What is a formatted input function?\nbasic_ostream::write(const char_type*, streamsize) is an\nunformatted output function.\nDR 63. Exception-handling policy for unformatted output.\nUnformatted output functions should catch exceptions thrown\nfrom streambuf members.\u0000\u0001ï¿½\u001aï¿½&\u0002\u0001ï¿½\fï¿½4ï¿½|ï¿½ \u0005Yï¿½E\r\u0006\u0000\u0000\u0001ï¿½\u0014ï¿½ \u0004\u0001ï¿½'\"ï¿½std::streamsize __n\u0000  \u0006\u0000\u0000\u0001ï¿½Pï¿½Vï¿½\u0002\u0004\u0001ï¿½:ï¿½Vï¿½\u0006\u0000\u0000\u0001ï¿½*ï¿½0\u0004\u0001ï¿½\u0013+8Kï¿½Cconst _CharT *__s\u0000\u001c\u001c\u0006\u0000\u0000\u0001ï¿½0ï¿½6ï¿½\u0002\u0004\u0001ï¿½\u0014ï¿½6ï¿½qï¿½ >]ï¿½\u0006\u0000\u0000\u0001ï¿½ ï¿½&\u0004\u0001ï¿½\u0000ï¿½\u0014ï¿½const std::basic_ostream::int_type __put\u0000FF\nconst std::basic_ostream::int_type __put = this->rdbuf()->sputc(__c)\u0000\u0000\u0001ï¿½,ï¿½6\u0002\u0001ï¿½\u000eï¿½nï¿½Eï¿½tï¿½[\r\u0006\u0000\u0000\u0001ï¿½Hï¿½R\u0004\u0001ï¿½/?Zdï¿½\n\tios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½*ï¿½4\u0002\u0001ï¿½\u0006ï¿½\\ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u0004ï¿½\u000e\u001c\u0001ï¿½\u000eï¿½\u0018\f\u0001ï¿½(ï¿½2\u0004\u0001ï¿½O7ï¿½\u0000ï¿½\u0017ï¿½std::basic_ostream::sentry __cerb\u000066\fstd::basic_ostream::sentry __cerb = (*this)\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\nDR 60. What is a formatted input function?\nbasic_ostream::put(char_type) is an unformatted output function.\nDR 63. Exception-handling policy for unformatted output.\nUnformatted output functions should catch exceptions thrown\nfrom streambuf members.\u0000\u0001ï¿½\u001aï¿½&\u0002\u0001ï¿½\fï¿½4ï¿½|ï¿½ \u0005Yï¿½E\r\u0006\u0000\u0000\u0001ï¿½\u0014ï¿½ \u0004\u0001ï¿½\u001d\u0006ï¿½sï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½#\u00010ï¿½#\u0001:\u0002\u0001ï¿½#\u0001\fï¿½#\u0001bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½/\u0001\u0004ï¿½/\u0001\u000e\u001c\u0001ï¿½9\u0001\u0014ï¿½9\u0001\u001e\f\u0001ï¿½:\u0001 ï¿½:\u0001*\u0004\u0001ï¿½Uï¿½Hï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0001\u0000ï¿½\u0001<@\u0001ï¿½_ï¿½\u000e%ï¿½F_CharT *std::operator<<(basic_ostream<_CharT, _Traits> &, const char *)::__ptr_guard::__p\u0000\u0010ï¿½\u0006\u0000\u0000\u0001ï¿½M\u0001\u0014ï¿½M\u0001\u001a\u0002\u0001ï¿½M\u0001\u0004ï¿½M\u0001\u001aï¿½\u001d\fï¿½\u001d\b\u0017\u0000\u0000\u0003ï¿½N\u0001<ï¿½N\u0001B\u0014\u0001ï¿½O\u00018ï¿½O\u0001>\u0004\u0001ï¿½P\u00016ï¿½P\u0001<\u0004\u0001ï¿½Iï¿½_\u0010Lï¿½ios_base::seekdir __dir\u0000$$\n\u0000\u0000\u0001ï¿½!\u0001Xï¿½!\u0001bï¿½\u0002\u0004\u0001ï¿½!\u00014ï¿½!\u0001bï¿½8ï¿½U\u0013ï¿½\u0006\u0000\u0000\u0001ï¿½*\u0001zï¿½*\u0001ï¿½\u0004\u0001ï¿½\u001aï¿½rï¿½\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½e\u0001\bï¿½e\u00018@\u0001ï¿½\u0010ï¿½Eï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001(\u001c(B@\u0001ï¿½#kDD\u0018ï¿½_OSTREAM_TCC\u0000\u0000\u0000\u0018#define _OSTREAM_TCC 1\u0000\u0000\u0001\"\u0010\"(\u0002\u0001\"\u0010\",\u0000ï¿½\u0001\u0000\u0000\u0000ï¿½f\fï¿½\u000fï¿½\nstd::basic_ostream::char_type __c\u0000<<\u0006\u0000\u0000\u0001ï¿½$ï¿½*ï¿½\u0002\u0004\u0001ï¿½\u0010ï¿½*ï¿½\u0018sï¿½<Xcï¿½\u0006\u0000\u0000\u0001ï¿½fï¿½l\u0004\u0001ï¿½blï¿½\u001bï¿½Xï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001ï¿½\u0003\u00010ï¿½\u0003\u0001:\u0002\u0001ï¿½\u0003\u0001\fï¿½\u0003\u0001bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\u000f\u0001\u0004ï¿½\u000f\u0001\u000e\u001c\u0001ï¿½\u0019\u0001\u0014ï¿½\u0019\u0001\u001e\f\u0001ï¿½\u001a\u0001 ï¿½\u001a\u0001*\u0004\u0001ï¿½\u001fï¿½\u0014ï¿½%7:ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\tN\u0004N2@\u0001ï¿½\u000eï¿½<@\u0001ï¿½\u000eï¿½<@\u0001ï¿½\u000eï¿½<@\u0001ï¿½\u0006ï¿½4@\u0001ï¿½\u0006ï¿½4@\u0001ï¿½\u0015\u0001\u0006ï¿½\u0015\u00014@\u0001ï¿½5\u0001\u0006ï¿½5\u00014@\u0001ï¿½[\u0001\u000eï¿½[\u0001<@\u0001ï¿½\u001dï¿½n{\rï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0012K\nK\u0018@\u0001P\nP\u0018@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\u0006ï¿½\u0014@\u0001ï¿½\fï¿½\u001a@\u0001ï¿½\fï¿½\u001a@\u0001ï¿½\fï¿½\u001a@\u0001ï¿½\fï¿½\u001a@\u0001ï¿½\u0012\u0001\fï¿½\u0012\u0001\u001a@\u0001ï¿½\u0017\u0001\fï¿½\u0017\u0001\u001a@\u0001ï¿½2\u0001\fï¿½2\u0001\u001a@\u0001ï¿½7\u0001\fï¿½7\u0001\u001a@\u0001ï¿½X\u0001\u0006ï¿½X\u0001\u0014@\u0001ï¿½]\u0001\u0006ï¿½]\u0001\u0014@\u0001ï¿½X\u001eMï¿½gï¿½\u000fï¿½const char *__s\u0000\u0018\u0018\u0006\u0000\u0000\u0001ï¿½@\u0001ï¿½@\u0001ï¿½\u0002\u0004\u0001ï¿½@\u0001lï¿½@\u0001ï¿½\u0000ï¿½\f\u0000\u0000\u0003ï¿½B\u0001\u0016ï¿½B\u0001\u001c\f\u0001ï¿½H\u0001fï¿½H\u0001l\f\u0001ï¿½U\u00014ï¿½U\u0001:\f\u0001ï¿½X!ï¿½^ï¿½\"T_ValueT __v\u0000\u0010\u0010\u0006\u0000\u0000\u0001?0?6ï¿½\u0002\u0004\u0001? ?6ï¿½Bï¿½vï¿½yXï¿½\u0006\u0000\u0000\u0001HVH\\\u0004\u0001ï¿½|ï¿½>ï¿½Rï¿½static const std::ios_base::fmtflags std::ios_base::basefield\u0000Jh\u0012static const std::ios_base::fmtflags std::ios_base::basefield = _S_basefield\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0002_ï¿½_ï¿½\u0004\u0001mï¿½mï¿½\u0004\u0001ï¿½G\u0014Nqï¿½8ï¿½Rconst ios_base::fmtflags __fmt\u000022\nconst ios_base::fmtflags __fmt = this->flags() & ios_base::basefield\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\n117. basic_ostream uses nonexistent num_put member functions.\u0000\u0001_>_H\u0002\u0001_\f_ï¿½Þ£ï¿½3HQ\r\u0006\u0000\u0000\u0002`\u0014`\u001e\f\u0001`H`R\f\u0001ï¿½\t\"sï¿½\tfdbasic_ostream<_CharT, _Traits> &__out\u0000@@\n\u0000\u0000\u0001ï¿½@\u0001^ï¿½@\u0001hï¿½\u0002\u0004\u0001ï¿½@\u0001\u001eï¿½@\u0001hï¿½jï¿½\u0010u91ï¿½\f\u0000\u0000\u0006ï¿½C\u0001\u0002ï¿½C\u0001\f\u0004\u0001ï¿½U\u0001\u001cï¿½U\u0001&\u0004\u0001ï¿½V\u00010ï¿½V\u0001:\u0004\u0001ï¿½Z\u0001\u000eï¿½Z\u0001\u0018\u0004\u0001ï¿½^\u0001\u000eï¿½^\u0001\u0018\u0004\u0001ï¿½`\u0001\u001aï¿½`\u0001$\u0004\u0001ï¿½Fï¿½aï¿½%ï¿½Uios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\nDR 60. What is a formatted input function?\nbasic_ostream::flush() is *not* an unformatted output function.\u0000\u0001ï¿½0ï¿½:\u0002\u0001ï¿½\fï¿½bï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003ï¿½\nï¿½\u0014\u001c\u0001ï¿½\u0014ï¿½\u001e\f\u0001ï¿½ ï¿½*\u0004\u0001ï¿½+ï¿½[vÉ·ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001*\u0000*@@\u0001ï¿½\u000eï¿½,ï¿½dï¿½static const std::ios_base::openmode std::ios_base::out\u0000Jh\u0006static const std::ios_base::openmode std::ios_base::out = _S_out\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0003ï¿½\u0004\u0001ï¿½\u000b\u0001,ï¿½\u000b\u00012\u0004\u0001ï¿½+\u0001,ï¿½+\u00012\u0004\u0001ï¿½cï¿½z\u0002\u0006ï¿½ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001y0y:\u0002\u0001y\fybï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0004ï¿½\u0004ï¿½\u000e\u001c\u0001ï¿½\u0002ï¿½\f\u001c\u0001ï¿½\u0014ï¿½\u001e\f\u0001ï¿½ ï¿½*\u0004\u0001ï¿½Ð ;xï¿½\u000fï¿½std::basic_ostream::sentry __cerb\u000066\fstd::basic_ostream::sentry __cerb = (*this)\u0000\u0000\u0001A\u0010A\u001c\u0002\u0001A\u0002A*ï¿½|ï¿½ \u0005Yï¿½E\r\u0006\u0000\u0000\u0001B\nB\u0016\u0004\u0001ï¿½zÆ¶ï¿½[static const std::ios_base::fmtflags std::ios_base::hex\u0000Jh\u0006static const std::ios_base::fmtflags std::ios_base::hex = _S_hex\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0002`n`t\f\u0001nnnt\f\u0001ï¿½?ï¿½Ú­ios_base::iostate __err\u0000$$\nios_base::iostate __err = ios_base::goodbit\u0000\u0000\u0001D.D8\u0002\u0001D\nD`ï¿½\u0011\fBï¿½%\r\u0006\u0000\u0000\u0003I\bI\u0012\u001c\u0001R\u0012R\u001c\f\u0001S,S6\u0004\u0001ï¿½6ï¿½5TO\u0005ï¿½const std::basic_ostream::pos_type __p\u0000FF\u0006const std::basic_ostream::pos_type __p = this->rdbuf()->pubseekoff(__off, __dir,\n\t\t\t\t\t\t\t     ios_base::out)\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\n136.  seekp, seekg setting wrong streams?\u0000\u0001ï¿½*\u0001,ï¿½*\u00012\u0002\u0001ï¿½*\u0001\u000eï¿½+\u00014ï¿½L\u0001\u0000\u0013ï¿½\f'\u000b\r\u0006\u0000\u0000\u0001ï¿½.\u0001\u0016ï¿½.\u0001\u001c\u0004\u0001ï¿½Txï¿½é¯ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\tE\nE\u0014@\u0001}\u0006}\u0010@\u0001ï¿½\u0006ï¿½\u0010@\u0001ï¿½\u0006ï¿½\u0010@\u0001ï¿½\fï¿½\u0016@\u0001ï¿½\fï¿½\u0016@\u0001ï¿½\u0004\u0001\fï¿½\u0004\u0001\u0016@\u0001ï¿½$\u0001\fï¿½$\u0001\u0016@\u0001ï¿½I\u0001\u0006ï¿½I\u0001\u0010@\u0001ï¿½Mï¿½$ï¿½\u0005~\u0017ï¿½static const std::ios_base::iostate std::ios_base::goodbit\u0000Hf\u000estatic const std::ios_base::iostate std::ios_base::goodbit = _S_goodbit\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0006DRD`\f\u0001yTyb\f\u0001ï¿½Nï¿½\\\f\u0001ï¿½Tï¿½b\f\u0001ï¿½\u0003\u0001Tï¿½\u0003\u0001b\f\u0001ï¿½#\u0001Tï¿½#\u0001b\f\u0001ï¿½\u0018ï¿½Bï¿½G3ï¿½\fbasic_ostream<_CharT, _Traits> &__os\u0000@@\b\u0000\u0000\u0001.V.^ï¿½\u0002\u0004\u0001.\u0016.^ï¿½jï¿½\u0010u91ï¿½\t\u0000\u0000\u0006/4/<\u0004\u00012\u00142\u001c\u0004\u00012028\u0004\u00013\u00023\n\u0004\u00015\u00145\u001c\u0004\u00018\u00028\n\u0004\u0001ï¿½Ä¨ï¿½Zjï¿½\u0016const std::basic_ostream::__num_put_type &__np\u0000TT\bconst std::basic_ostream::__num_put_type &__np = __check_facet(this->_M_num_put)\u0000\u0000\u0001G0G8\u0002\u0001G\u0004G|ï¿½qï¿½Vï¿½lï¿½\r\u0006\u0000\u0000\u0001H\fH\u0014\u0004\u0001ï¿½Hï¿½>A\u0002ï¿½kï¿½_CharT *__ip\u0000\u0010\u0010\b\u0000\u0000\u0001ï¿½N\u0001.ï¿½N\u00016ï¿½\u0002\u0004\u0001ï¿½N\u0001\u001eï¿½N\u00016ï¿½\u001d\fï¿½\u001dï¿½\t\u0000\u0000\u0001ï¿½N\u0001Dï¿½N\u0001L\u0004\u0001ï¿½|/ï¿½\t\r\u000bï¿½static const std::ios_base::fmtflags std::ios_base::oct\u0000Jh\u0006static const std::ios_base::fmtflags std::ios_base::oct = _S_oct\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0002`:`@\f\u0001n:n@\f\u0001ï¿½eï¿½\bï¿½static const std::ios_base::iostate std::ios_base::badbit\u0000Hf\fstatic const std::ios_base::iostate std::ios_base::badbit = _S_badbit\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0016I.I:\f\u0001M<MH\u0004\u0001QJQV\u0004\u0001ï¿½Fï¿½R\u0004\u0001ï¿½(ï¿½4\f\u0001ï¿½*ï¿½6\f\u0001ï¿½Fï¿½R\u0004\u0001ï¿½Fï¿½R\u0004\u0001ï¿½Fï¿½R\u0004\u0001ï¿½Fï¿½R\u0004\u0001ï¿½0ï¿½<\f\u0001ï¿½>ï¿½J\u0004\u0001ï¿½>ï¿½J\u0004\u0001ï¿½>ï¿½J\u0004\u0001ï¿½>ï¿½J\u0004\u0001ï¿½\u0014\u0001>ï¿½\u0014\u0001J\u0004\u0001ï¿½\u0018\u0001>ï¿½\u0018\u0001J\u0004\u0001ï¿½4\u0001>ï¿½4\u0001J\u0004\u0001ï¿½8\u0001>ï¿½8\u0001J\u0004\u0001ï¿½C\u00014ï¿½C\u0001@\u0004\u0001ï¿½Z\u0001Fï¿½Z\u0001R\u0004\u0001ï¿½^\u0001Fï¿½^\u0001R\u0004\u0001ï¿½($ï¿½ ï¿½Tï¿½short __n\u0000\f\f\u0006\u0000\u0000\u0001[*[0ï¿½\u0002\u0004\u0001[\u001e[0ï¿½\u0006\u0000\u0000\u0002aï¿½aï¿½\f\u0001cHcN\f\u0001ï¿½!ï¿½\nï¿½~ï¿½struct __ptr_guard __pg\u0000&&\bstruct __ptr_guard __pg = (new _CharT[__clen])\u0000\u0000\u0001ï¿½Q\u0001\u0012ï¿½Q\u0001\u001a\u0002\u0001ï¿½K\u0001\u000eï¿½Q\u0001Dï¿½\u0014\u0012ï¿½\u0010Tï¿½\r\f\u0000\u0000\u0001ï¿½S\u0001,ï¿½S\u00014\u0004\u0001ï¿½+ï¿½sï¿½~int __n\u0000\b\b\u0006\u0000\u0000\u0001i&i,ï¿½\u0002\u0004\u0001i\u001ei,ï¿½\u0006\u0000\u0000\u0002o|oï¿½\f\u0001qHqN\f\u0001ï¿½\bî(Hï¿½\\bool std::basic_ostream::sentry::_M_ok\u0000\nB\n\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0002/\f/\u0016\u0014\u00016\u00026\f\u0014\u0001ï¿½\u000eï¿½O)ï¿½>ï¿½basic_ostream<_CharT, _Traits> &std::basic_ostream::sentry::_M_os\u0000@x\n\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0001/(/2\u0014\u0001ï¿½Ljï¿½\u0004Y\bï¿½qstd::basic_ostream::__streambuf_type *__sbin\u0000LL\f\u0000\u0000\u0001wBwNï¿½\u0002\u0004\u0001w\u001ewNï¿½Oï¿½Üï¿½\u0006\u0000\u0000\u0003{({4\u0004\u0001<H\u0004\u0001ï¿½ ï¿½,\u0004\u0001ï¿½\u0013ï¿½;Pï¿½+ï¿½static const std::ios_base::iostate std::ios_base::failbit\u0000Hf\u000estatic const std::ios_base::iostate std::ios_base::failbit = _S_failbit\u0000\u0000\u0000\u0000\b\u0000\u0002\u0000\u0005828@\u0004\u0001ï¿½*ï¿½8\f\u0001ï¿½Fï¿½T\u0004\u0001ï¿½\u000f\u0001*ï¿½\u000f\u00018\f\u0001ï¿½/\u0001*ï¿½/\u00018\f\u0001ï¿½EÙ©%$)ï¿½9const ios_base::fmtflags __fmt\u000022\nconst ios_base::fmtflags __fmt = this->flags() & ios_base::basefield\u0000_GLIBCXX_RESOLVE_LIB_DEFECTS\n117. basic_ostream uses nonexistent num_put member functions.\u0000\u0001m>mH\u0002\u0001m\fmï¿½Þ£ï¿½3HQ\r\u0006\u0000\u0000\u0002n\u0014n\u001e\f\u0001nHnR\f\u0001ï¿½}ï¿½\u0014\n~ï¿½std::basic_ostream::sentry __cerb\u000066\fstd::basic_ostream::sentry __cerb = (*this)\u0000\u0000\u0001z\u001az&\u0002\u0001z\fz4ï¿½|ï¿½ \u0005Yï¿½E\r\u0006\u0000\u0000\u0001{\u0014{ \u0004\u0001"}],"crc32":683571941,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]