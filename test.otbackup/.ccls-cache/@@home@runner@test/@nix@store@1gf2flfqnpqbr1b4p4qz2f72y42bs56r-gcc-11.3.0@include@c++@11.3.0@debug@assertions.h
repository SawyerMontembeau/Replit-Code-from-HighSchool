[{"ops":[{"insert":"// Debugging support implementation -*- C++ -*-\n\n// Copyright (C) 2003-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file debug/assertions.h\n *  This file is a GNU debug extension to the Standard C++ Library.\n */\n\n#ifndef _GLIBCXX_DEBUG_ASSERTIONS_H\n#define _GLIBCXX_DEBUG_ASSERTIONS_H 1\n\n#include <bits/c++config.h>\n\n#ifndef _GLIBCXX_DEBUG\n\n# define _GLIBCXX_DEBUG_ASSERT(_Condition)\n# define _GLIBCXX_DEBUG_PEDASSERT(_Condition)\n# define _GLIBCXX_DEBUG_ONLY(_Statement)\n\n#endif\n\n#ifndef _GLIBCXX_ASSERTIONS\n# define __glibcxx_requires_non_empty_range(_First,_Last)\n# define __glibcxx_requires_nonempty()\n# define __glibcxx_requires_subscript(_N)\n#else\n\n// Verify that [_First, _Last) forms a non-empty iterator range.\n# define __glibcxx_requires_non_empty_range(_First,_Last)\t\\\n  __glibcxx_assert(_First != _Last)\n# define __glibcxx_requires_subscript(_N)\t\\\n  __glibcxx_assert(_N < this->size())\n// Verify that the container is nonempty\n# define __glibcxx_requires_nonempty()\t\t\\\n  __glibcxx_assert(!this->empty())\n#endif\n\n#ifdef _GLIBCXX_DEBUG\n# define _GLIBCXX_DEBUG_ASSERT(_Condition) __glibcxx_assert(_Condition)\n\n# ifdef _GLIBCXX_DEBUG_PEDANTIC\n#  define _GLIBCXX_DEBUG_PEDASSERT(_Condition) _GLIBCXX_DEBUG_ASSERT(_Condition)\n# else\n#  define _GLIBCXX_DEBUG_PEDASSERT(_Condition)\n# endif\n\n# define _GLIBCXX_DEBUG_ONLY(_Statement) _Statement\n#endif\n\n#endif // _GLIBCXX_DEBUG_ASSERTIONS\n"}],"crc32":201282295,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]