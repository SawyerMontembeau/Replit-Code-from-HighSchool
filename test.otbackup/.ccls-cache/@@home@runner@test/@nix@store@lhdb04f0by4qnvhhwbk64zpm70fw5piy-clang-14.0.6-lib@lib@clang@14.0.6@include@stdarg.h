[{"ops":[{"insert":"/*===---- stdarg.h - Variable argument handling ----------------------------===\n *\n * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n * See https://llvm.org/LICENSE.txt for license information.\n * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n *\n *===-----------------------------------------------------------------------===\n */\n\n#ifndef __STDARG_H\n#define __STDARG_H\n\n#ifndef _VA_LIST\ntypedef __builtin_va_list va_list;\n#define _VA_LIST\n#endif\n#define va_start(ap, param) __builtin_va_start(ap, param)\n#define va_end(ap)          __builtin_va_end(ap)\n#define va_arg(ap, type)    __builtin_va_arg(ap, type)\n\n/* GCC always defines __va_copy, but does not define va_copy unless in c99 mode\n * or -ansi is not specified, since it was not part of C90.\n */\n#define __va_copy(d,s) __builtin_va_copy(d,s)\n\n#if __STDC_VERSION__ >= 199901L || __cplusplus >= 201103L || !defined(__STRICT_ANSI__)\n#define va_copy(dest, src)  __builtin_va_copy(dest, src)\n#endif\n\n#ifndef __GNUC_VA_LIST\n#define __GNUC_VA_LIST 1\ntypedef __builtin_va_list __gnuc_va_list;\n#endif\n\n#endif /* __STDARG_H */\n"}],"crc32":682047886,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]