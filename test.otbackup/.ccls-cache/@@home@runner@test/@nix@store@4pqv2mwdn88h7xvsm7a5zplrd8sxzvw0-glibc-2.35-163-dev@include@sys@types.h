[{"ops":[{"insert":"/* Copyright (C) 1991-2022 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n/*\n *\tPOSIX Standard: 2.6 Primitive System Data Types\t<sys/types.h>\n */\n\n#ifndef\t_SYS_TYPES_H\n#define\t_SYS_TYPES_H\t1\n\n#include <features.h>\n\n__BEGIN_DECLS\n\n#include <bits/types.h>\n\n#ifdef\t__USE_MISC\n# ifndef __u_char_defined\ntypedef __u_char u_char;\ntypedef __u_short u_short;\ntypedef __u_int u_int;\ntypedef __u_long u_long;\ntypedef __quad_t quad_t;\ntypedef __u_quad_t u_quad_t;\ntypedef __fsid_t fsid_t;\n#  define __u_char_defined\n# endif\ntypedef __loff_t loff_t;\n#endif\n\n#ifndef __ino_t_defined\n# ifndef __USE_FILE_OFFSET64\ntypedef __ino_t ino_t;\n# else\ntypedef __ino64_t ino_t;\n# endif\n# define __ino_t_defined\n#endif\n#if defined __USE_LARGEFILE64 && !defined __ino64_t_defined\ntypedef __ino64_t ino64_t;\n# define __ino64_t_defined\n#endif\n\n#ifndef __dev_t_defined\ntypedef __dev_t dev_t;\n# define __dev_t_defined\n#endif\n\n#ifndef __gid_t_defined\ntypedef __gid_t gid_t;\n# define __gid_t_defined\n#endif\n\n#ifndef __mode_t_defined\ntypedef __mode_t mode_t;\n# define __mode_t_defined\n#endif\n\n#ifndef __nlink_t_defined\ntypedef __nlink_t nlink_t;\n# define __nlink_t_defined\n#endif\n\n#ifndef __uid_t_defined\ntypedef __uid_t uid_t;\n# define __uid_t_defined\n#endif\n\n#ifndef __off_t_defined\n# ifndef __USE_FILE_OFFSET64\ntypedef __off_t off_t;\n# else\ntypedef __off64_t off_t;\n# endif\n# define __off_t_defined\n#endif\n#if defined __USE_LARGEFILE64 && !defined __off64_t_defined\ntypedef __off64_t off64_t;\n# define __off64_t_defined\n#endif\n\n#ifndef __pid_t_defined\ntypedef __pid_t pid_t;\n# define __pid_t_defined\n#endif\n\n#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) \\\n    && !defined __id_t_defined\ntypedef __id_t id_t;\n# define __id_t_defined\n#endif\n\n#ifndef __ssize_t_defined\ntypedef __ssize_t ssize_t;\n# define __ssize_t_defined\n#endif\n\n#ifdef\t__USE_MISC\n# ifndef __daddr_t_defined\ntypedef __daddr_t daddr_t;\ntypedef __caddr_t caddr_t;\n#  define __daddr_t_defined\n# endif\n#endif\n\n#if (defined __USE_MISC || defined __USE_XOPEN) && !defined __key_t_defined\ntypedef __key_t key_t;\n# define __key_t_defined\n#endif\n\n#if defined __USE_XOPEN || defined __USE_XOPEN2K8\n# include <bits/types/clock_t.h>\n#endif\n#include <bits/types/clockid_t.h>\n#include <bits/types/time_t.h>\n#include <bits/types/timer_t.h>\n\n#ifdef __USE_XOPEN\n# ifndef __useconds_t_defined\ntypedef __useconds_t useconds_t;\n#  define __useconds_t_defined\n# endif\n# ifndef __suseconds_t_defined\ntypedef __suseconds_t suseconds_t;\n#  define __suseconds_t_defined\n# endif\n#endif\n\n#define\t__need_size_t\n#include <stddef.h>\n\n#ifdef __USE_MISC\n/* Old compatibility names for C types.  */\ntypedef unsigned long int ulong;\ntypedef unsigned short int ushort;\ntypedef unsigned int uint;\n#endif\n\n/* These size-specific names are used by some of the inet code.  */\n\n#include <bits/stdint-intn.h>\n\n/* These were defined by ISO C without the first `_'.  */\ntypedef __uint8_t u_int8_t;\ntypedef __uint16_t u_int16_t;\ntypedef __uint32_t u_int32_t;\ntypedef __uint64_t u_int64_t;\n\n#if __GNUC_PREREQ (2, 7)\ntypedef int register_t __attribute__ ((__mode__ (__word__)));\n#else\ntypedef int register_t;\n#endif\n\n/* Some code from BIND tests this macro to see if the types above are\n   defined.  */\n#define __BIT_TYPES_DEFINED__\t1\n\n\n#ifdef\t__USE_MISC\n/* In BSD <sys/types.h> is expected to define BYTE_ORDER.  */\n# include <endian.h>\n\n/* It also defines `fd_set' and the FD_* macros for `select'.  */\n# include <sys/select.h>\n#endif /* Use misc.  */\n\n\n#if (defined __USE_UNIX98 || defined __USE_XOPEN2K8) \\\n    && !defined __blksize_t_defined\ntypedef __blksize_t blksize_t;\n# define __blksize_t_defined\n#endif\n\n/* Types from the Large File Support interface.  */\n#ifndef __USE_FILE_OFFSET64\n# ifndef __blkcnt_t_defined\ntypedef __blkcnt_t blkcnt_t;\t /* Type to count number of disk blocks.  */\n#  define __blkcnt_t_defined\n# endif\n# ifndef __fsblkcnt_t_defined\ntypedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */\n#  define __fsblkcnt_t_defined\n# endif\n# ifndef __fsfilcnt_t_defined\ntypedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */\n#  define __fsfilcnt_t_defined\n# endif\n#else\n# ifndef __blkcnt_t_defined\ntypedef __blkcnt64_t blkcnt_t;\t   /* Type to count number of disk blocks.  */\n#  define __blkcnt_t_defined\n# endif\n# ifndef __fsblkcnt_t_defined\ntypedef __fsblkcnt64_t fsblkcnt_t; /* Type to count file system blocks.  */\n#  define __fsblkcnt_t_defined\n# endif\n# ifndef __fsfilcnt_t_defined\ntypedef __fsfilcnt64_t fsfilcnt_t; /* Type to count file system inodes.  */\n#  define __fsfilcnt_t_defined\n# endif\n#endif\n\n#ifdef __USE_LARGEFILE64\ntypedef __blkcnt64_t blkcnt64_t;     /* Type to count number of disk blocks. */\ntypedef __fsblkcnt64_t fsblkcnt64_t; /* Type to count file system blocks.  */\ntypedef __fsfilcnt64_t fsfilcnt64_t; /* Type to count file system inodes.  */\n#endif\n\n\n/* Now add the thread types.  */\n#if defined __USE_POSIX199506 || defined __USE_UNIX98\n# include <bits/pthreadtypes.h>\n#endif\n\n__END_DECLS\n\n#endif /* sys/types.h */\n"}],"crc32":1988181834,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]