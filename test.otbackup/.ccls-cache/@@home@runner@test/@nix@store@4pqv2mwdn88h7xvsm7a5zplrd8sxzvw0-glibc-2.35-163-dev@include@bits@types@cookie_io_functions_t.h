[{"ops":[{"insert":"/* Copyright (C) 1991-2022 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <https://www.gnu.org/licenses/>.  */\n\n#ifndef __cookie_io_functions_t_defined\n#define __cookie_io_functions_t_defined 1\n\n#include <bits/types.h>\n\n/* Functions to do I/O and file management for a stream.  */\n\n/* Read NBYTES bytes from COOKIE into a buffer pointed to by BUF.\n   Return number of bytes read.  */\ntypedef __ssize_t cookie_read_function_t (void *__cookie, char *__buf,\n                                          size_t __nbytes);\n\n/* Write NBYTES bytes pointed to by BUF to COOKIE.  Write all NBYTES bytes\n   unless there is an error.  Return number of bytes written.  If\n   there is an error, return 0 and do not write anything.  If the file\n   has been opened for append (__mode.__append set), then set the file\n   pointer to the end of the file and then do the write; if not, just\n   write at the current file pointer.  */\ntypedef __ssize_t cookie_write_function_t (void *__cookie, const char *__buf,\n                                           size_t __nbytes);\n\n/* Move COOKIE's file position to *POS bytes from the\n   beginning of the file (if W is SEEK_SET),\n   the current position (if W is SEEK_CUR),\n   or the end of the file (if W is SEEK_END).\n   Set *POS to the new file position.\n   Returns zero if successful, nonzero if not.  */\ntypedef int cookie_seek_function_t (void *__cookie, __off64_t *__pos, int __w);\n\n/* Close COOKIE.  */\ntypedef int cookie_close_function_t (void *__cookie);\n\n/* The structure with the cookie function pointers.\n   The tag name of this struct is _IO_cookie_io_functions_t to\n   preserve historic C++ mangled names for functions taking\n   cookie_io_functions_t arguments.  That name should not be used in\n   new code.  */\ntypedef struct _IO_cookie_io_functions_t\n{\n  cookie_read_function_t *read;\t\t/* Read bytes.  */\n  cookie_write_function_t *write;\t/* Write bytes.  */\n  cookie_seek_function_t *seek;\t\t/* Seek/tell file position.  */\n  cookie_close_function_t *close;\t/* Close file.  */\n} cookie_io_functions_t;\n\n#endif\n"}],"crc32":3124482705,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]