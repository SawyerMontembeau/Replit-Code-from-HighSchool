[{"ops":[{"insert":"// <string> Forward declarations -*- C++ -*-\n\n// Copyright (C) 2001-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file bits/stringfwd.h\n *  This is an internal header file, included by other library headers.\n *  Do not attempt to use it directly. @headername{string}\n */\n\n//\n// ISO C++ 14882: 21 Strings library\n//\n\n#ifndef _STRINGFWD_H\n#define _STRINGFWD_H 1\n\n#pragma GCC system_header\n\n#include <bits/c++config.h>\n#include <bits/memoryfwd.h>\n\nnamespace std _GLIBCXX_VISIBILITY(default)\n{\n_GLIBCXX_BEGIN_NAMESPACE_VERSION\n\n  /**\n   *  @defgroup strings Strings\n   *\n   *  @{\n  */\n\n  template<class _CharT>\n    struct char_traits;\n\n  template<> struct char_traits<char>;\n\n#ifdef _GLIBCXX_USE_WCHAR_T\n  template<> struct char_traits<wchar_t>;\n#endif\n\n#ifdef _GLIBCXX_USE_CHAR8_T\n  template<> struct char_traits<char8_t>;\n#endif\n\n#if __cplusplus >= 201103L\n  template<> struct char_traits<char16_t>;\n  template<> struct char_traits<char32_t>;\n#endif\n\n_GLIBCXX_BEGIN_NAMESPACE_CXX11\n\n  template<typename _CharT, typename _Traits = char_traits<_CharT>,\n           typename _Alloc = allocator<_CharT> >\n    class basic_string;\n\n_GLIBCXX_END_NAMESPACE_CXX11\n\n  /// A string of @c char\n  typedef basic_string<char>    string;   \n\n#ifdef _GLIBCXX_USE_WCHAR_T\n  /// A string of @c wchar_t\n  typedef basic_string<wchar_t> wstring;   \n#endif\n\n#ifdef _GLIBCXX_USE_CHAR8_T\n  /// A string of @c char8_t\n  typedef basic_string<char8_t> u8string;\n#endif\n\n#if __cplusplus >= 201103L\n  /// A string of @c char16_t\n  typedef basic_string<char16_t> u16string; \n\n  /// A string of @c char32_t\n  typedef basic_string<char32_t> u32string; \n#endif\n\n  /** @}  */\n\n_GLIBCXX_END_NAMESPACE_VERSION\n} // namespace std\n\n#endif\t// _STRINGFWD_H\n"}],"crc32":1646391806,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]