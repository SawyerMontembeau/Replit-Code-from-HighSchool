[{"ops":[{"insert":"// Locale support -*- C++ -*-\n\n// Copyright (C) 1997-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file bits/ctype_base.h\n *  This is an internal header file, included by other library headers.\n *  Do not attempt to use it directly. @headername{locale}\n */\n\n//\n// ISO C++ 14882: 22.1  Locales\n//\n\n// Information as gleaned from /usr/include/ctype.h\n\nnamespace std _GLIBCXX_VISIBILITY(default)\n{\n_GLIBCXX_BEGIN_NAMESPACE_VERSION\n\n  /// @brief  Base class for ctype.\n  struct ctype_base\n  {\n    // Non-standard typedefs.\n    typedef const int* \t\t__to_type;\n\n    // NB: Offsets into ctype<char>::_M_table force a particular size\n    // on the mask type. Because of this, we don't use an enum.\n    typedef unsigned short \tmask;\n    static const mask upper    \t= _ISupper;\n    static const mask lower \t= _ISlower;\n    static const mask alpha \t= _ISalpha;\n    static const mask digit \t= _ISdigit;\n    static const mask xdigit \t= _ISxdigit;\n    static const mask space \t= _ISspace;\n    static const mask print \t= _ISprint;\n    static const mask graph \t= _ISalpha | _ISdigit | _ISpunct;\n    static const mask cntrl \t= _IScntrl;\n    static const mask punct \t= _ISpunct;\n    static const mask alnum \t= _ISalpha | _ISdigit;\n#if __cplusplus >= 201103L\n    static const mask blank\t= _ISblank;\n#endif\n  };\n\n_GLIBCXX_END_NAMESPACE_VERSION\n} // namespace\n"}],"crc32":3621767715,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]