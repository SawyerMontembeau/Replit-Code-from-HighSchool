[{"ops":[{"insert":"// Debugging support implementation -*- C++ -*-\n\n// Copyright (C) 2003-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file debug/debug.h\n *  This file is a GNU debug extension to the Standard C++ Library.\n */\n\n#ifndef _GLIBCXX_DEBUG_MACRO_SWITCH_H\n#define _GLIBCXX_DEBUG_MACRO_SWITCH_H 1\n\n/** Macros and namespaces used by the implementation outside of debug\n *  wrappers to verify certain properties. The __glibcxx_requires_xxx\n *  macros are merely wrappers around the __glibcxx_check_xxx wrappers\n *  when we are compiling with debug mode, but disappear when we are\n *  in release mode so that there is no checking performed in, e.g.,\n *  the standard library algorithms.\n*/\n\n#include <debug/assertions.h>\n\n// Debug mode namespaces.\n\n/**\n * @namespace std::__debug\n * @brief GNU debug code, replaces standard behavior with debug behavior.\n */\nnamespace std\n{ \n  namespace __debug { } \n}\n\n/** @namespace __gnu_debug\n *  @brief GNU debug classes for public use.\n*/\nnamespace __gnu_debug\n{\n  using namespace std::__debug;\n\n  template<typename _Ite, typename _Seq, typename _Cat>\n    struct _Safe_iterator;\n}\n\n#ifndef _GLIBCXX_DEBUG\n\n# define __glibcxx_requires_cond(_Cond,_Msg)\n# define __glibcxx_requires_valid_range(_First,_Last)\n# define __glibcxx_requires_can_increment(_First,_Size)\n# define __glibcxx_requires_can_increment_range(_First1,_Last1,_First2)\n# define __glibcxx_requires_can_decrement_range(_First1,_Last1,_First2)\n# define __glibcxx_requires_sorted(_First,_Last)\n# define __glibcxx_requires_sorted_pred(_First,_Last,_Pred)\n# define __glibcxx_requires_sorted_set(_First1,_Last1,_First2)\n# define __glibcxx_requires_sorted_set_pred(_First1,_Last1,_First2,_Pred)\n# define __glibcxx_requires_partitioned_lower(_First,_Last,_Value)\n# define __glibcxx_requires_partitioned_upper(_First,_Last,_Value)\n# define __glibcxx_requires_partitioned_lower_pred(_First,_Last,_Value,_Pred)\n# define __glibcxx_requires_partitioned_upper_pred(_First,_Last,_Value,_Pred)\n# define __glibcxx_requires_heap(_First,_Last)\n# define __glibcxx_requires_heap_pred(_First,_Last,_Pred)\n# define __glibcxx_requires_string(_String)\n# define __glibcxx_requires_string_len(_String,_Len)\n# define __glibcxx_requires_irreflexive(_First,_Last)\n# define __glibcxx_requires_irreflexive2(_First,_Last)\n# define __glibcxx_requires_irreflexive_pred(_First,_Last,_Pred)\n# define __glibcxx_requires_irreflexive_pred2(_First,_Last,_Pred)\n\n#else\n\n# include <debug/macros.h>\n\n# define __glibcxx_requires_cond(_Cond,_Msg) _GLIBCXX_DEBUG_VERIFY(_Cond,_Msg)\n# define __glibcxx_requires_valid_range(_First,_Last)\t\\\n  __glibcxx_check_valid_range(_First,_Last)\n# define __glibcxx_requires_can_increment(_First,_Size)\t\\\n  __glibcxx_check_can_increment(_First,_Size)\n# define __glibcxx_requires_can_increment_range(_First1,_Last1,_First2)\t\\\n  __glibcxx_check_can_increment_range(_First1,_Last1,_First2)\n# define __glibcxx_requires_can_decrement_range(_First1,_Last1,_First2)\t\\\n  __glibcxx_check_can_decrement_range(_First1,_Last1,_First2)\n# define __glibcxx_requires_sorted(_First,_Last)\t\\\n  __glibcxx_check_sorted(_First,_Last)\n# define __glibcxx_requires_sorted_pred(_First,_Last,_Pred)\t\\\n  __glibcxx_check_sorted_pred(_First,_Last,_Pred)\n# define __glibcxx_requires_sorted_set(_First1,_Last1,_First2)\t\\\n  __glibcxx_check_sorted_set(_First1,_Last1,_First2)\n# define __glibcxx_requires_sorted_set_pred(_First1,_Last1,_First2,_Pred) \\\n  __glibcxx_check_sorted_set_pred(_First1,_Last1,_First2,_Pred)\n# define __glibcxx_requires_partitioned_lower(_First,_Last,_Value)\t\\\n  __glibcxx_check_partitioned_lower(_First,_Last,_Value)\n# define __glibcxx_requires_partitioned_upper(_First,_Last,_Value)\t\\\n  __glibcxx_check_partitioned_upper(_First,_Last,_Value)\n# define __glibcxx_requires_partitioned_lower_pred(_First,_Last,_Value,_Pred) \\\n  __glibcxx_check_partitioned_lower_pred(_First,_Last,_Value,_Pred)\n# define __glibcxx_requires_partitioned_upper_pred(_First,_Last,_Value,_Pred) \\\n  __glibcxx_check_partitioned_upper_pred(_First,_Last,_Value,_Pred)\n# define __glibcxx_requires_heap(_First,_Last)\t\\\n  __glibcxx_check_heap(_First,_Last)\n# define __glibcxx_requires_heap_pred(_First,_Last,_Pred)\t\\\n  __glibcxx_check_heap_pred(_First,_Last,_Pred)\n# define __glibcxx_requires_string(_String) __glibcxx_check_string(_String)\n# define __glibcxx_requires_string_len(_String,_Len)\t\\\n  __glibcxx_check_string_len(_String,_Len)\n# define __glibcxx_requires_irreflexive(_First,_Last)\t\\\n  __glibcxx_check_irreflexive(_First,_Last)\n# define __glibcxx_requires_irreflexive2(_First,_Last)\t\\\n  __glibcxx_check_irreflexive2(_First,_Last)\n# define __glibcxx_requires_irreflexive_pred(_First,_Last,_Pred)\t\\\n  __glibcxx_check_irreflexive_pred(_First,_Last,_Pred)\n# define __glibcxx_requires_irreflexive_pred2(_First,_Last,_Pred)\t\\\n  __glibcxx_check_irreflexive_pred2(_First,_Last,_Pred)\n\n# include <debug/functions.h>\n\n#endif\n\n#endif // _GLIBCXX_DEBUG_MACRO_SWITCH_H\n"}],"crc32":3336352726,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]