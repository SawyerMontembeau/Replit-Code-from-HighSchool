[{"ops":[{"insert":"/* x86 internal mutex struct definitions.\n   Copyright (C) 2019-2022 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n\n   The GNU C Library is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Lesser General Public\n   License as published by the Free Software Foundation; either\n   version 2.1 of the License, or (at your option) any later version.\n\n   The GNU C Library is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public\n   License along with the GNU C Library; if not, see\n   <http://www.gnu.org/licenses/>.  */\n\n#ifndef _THREAD_MUTEX_INTERNAL_H\n#define _THREAD_MUTEX_INTERNAL_H 1\n\nstruct __pthread_mutex_s\n{\n  int __lock;\n  unsigned int __count;\n  int __owner;\n#ifdef __x86_64__\n  unsigned int __nusers;\n#endif\n  /* KIND must stay at this position in the structure to maintain\n     binary compatibility with static initializers.  */\n  int __kind;\n#ifdef __x86_64__\n  short __spins;\n  short __elision;\n  __pthread_list_t __list;\n# define __PTHREAD_MUTEX_HAVE_PREV      1\n#else\n  unsigned int __nusers;\n  __extension__ union\n  {\n    struct\n    {\n      short __espins;\n      short __eelision;\n# define __spins __elision_data.__espins\n# define __elision __elision_data.__eelision\n    } __elision_data;\n    __pthread_slist_t __list;\n  };\n# define __PTHREAD_MUTEX_HAVE_PREV      0\n#endif\n};\n\n#ifdef __x86_64__\n# define __PTHREAD_MUTEX_INITIALIZER(__kind) \\\n  0, 0, 0, 0, __kind, 0, 0, { 0, 0 }\n#else\n# define __PTHREAD_MUTEX_INITIALIZER(__kind) \\\n  0, 0, 0, __kind, 0, { { 0, 0 } }\n#endif\n\n#endif\n"}],"crc32":2399330005,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]