[{"ops":[{"insert":"// Specific definitions for generic platforms  -*- C++ -*-\n\n// Copyright (C) 2007-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file bits/error_constants.h\n *  This is an internal header file, included by other library headers.\n *  Do not attempt to use it directly. @headername{system_error}\n */\n\n#ifndef _GLIBCXX_ERROR_CONSTANTS\n#define _GLIBCXX_ERROR_CONSTANTS 1\n\n#include <bits/c++config.h>\n#include <cerrno>\n\nnamespace std _GLIBCXX_VISIBILITY(default)\n{\n_GLIBCXX_BEGIN_NAMESPACE_VERSION\n\n  enum class errc\n    {\n      address_family_not_supported = \t\tEAFNOSUPPORT,\n      address_in_use = \t\t\t\tEADDRINUSE,\n      address_not_available = \t\t\tEADDRNOTAVAIL,\n      already_connected = \t\t\tEISCONN,\n      argument_list_too_long = \t\t\tE2BIG,\n      argument_out_of_domain = \t\t\tEDOM,\n      bad_address = \t\t\t\tEFAULT,\n      bad_file_descriptor = \t\t\tEBADF,\n\n#ifdef EBADMSG\n      bad_message = \t\t\t\tEBADMSG,\n#endif\n\n      broken_pipe = \t\t\t\tEPIPE,\n      connection_aborted = \t\t\tECONNABORTED,\n      connection_already_in_progress = \t\tEALREADY,\n      connection_refused = \t\t\tECONNREFUSED,\n      connection_reset = \t\t\tECONNRESET,\n      cross_device_link = \t\t\tEXDEV,\n      destination_address_required = \t\tEDESTADDRREQ,\n      device_or_resource_busy = \t\tEBUSY,\n      directory_not_empty = \t\t\tENOTEMPTY,\n      executable_format_error = \t\tENOEXEC,\n      file_exists = \t       \t\t\tEEXIST,\n      file_too_large = \t\t\t\tEFBIG,\n      filename_too_long = \t\t\tENAMETOOLONG,\n      function_not_supported = \t\t\tENOSYS,\n      host_unreachable = \t\t\tEHOSTUNREACH,\n\n#ifdef EIDRM\n      identifier_removed = \t\t\tEIDRM,\n#endif\n\n      illegal_byte_sequence = \t\t\tEILSEQ,\n      inappropriate_io_control_operation = \tENOTTY,\n      interrupted = \t\t\t\tEINTR,\n      invalid_argument = \t\t\tEINVAL,\n      invalid_seek = \t\t\t\tESPIPE,\n      io_error = \t\t\t\tEIO,\n      is_a_directory = \t\t\t\tEISDIR,\n      message_size = \t\t\t\tEMSGSIZE,\n      network_down = \t\t\t\tENETDOWN,\n      network_reset = \t\t\t\tENETRESET,\n      network_unreachable = \t\t\tENETUNREACH,\n      no_buffer_space = \t\t\tENOBUFS,\n      no_child_process = \t\t\tECHILD,\n\n#ifdef ENOLINK\n      no_link = \t\t\t\tENOLINK,\n#endif\n\n      no_lock_available = \t\t\tENOLCK,\n\n#ifdef ENODATA\n      no_message_available = \t\t\tENODATA,\n#endif\n\n      no_message = \t\t\t\tENOMSG,\n      no_protocol_option = \t\t\tENOPROTOOPT,\n      no_space_on_device = \t\t\tENOSPC,\n\n#ifdef ENOSR\n      no_stream_resources = \t\t\tENOSR,\n#endif\n\n      no_such_device_or_address = \t\tENXIO,\n      no_such_device = \t\t\t\tENODEV,\n      no_such_file_or_directory = \t\tENOENT,\n      no_such_process = \t\t\tESRCH,\n      not_a_directory = \t\t\tENOTDIR,\n      not_a_socket = \t\t\t\tENOTSOCK,\n\n#ifdef ENOSTR\n      not_a_stream = \t\t\t\tENOSTR,\n#endif\n\n      not_connected = \t\t\t\tENOTCONN,\n      not_enough_memory = \t\t\tENOMEM,\n\n#ifdef ENOTSUP\n      not_supported = \t\t\t\tENOTSUP,\n#endif\n\n#ifdef ECANCELED\n      operation_canceled = \t\t\tECANCELED,\n#endif\n\n      operation_in_progress = \t\t\tEINPROGRESS,\n      operation_not_permitted = \t\tEPERM,\n      operation_not_supported = \t\tEOPNOTSUPP,\n      operation_would_block = \t\t\tEWOULDBLOCK,\n\n#ifdef EOWNERDEAD\n      owner_dead = \t\t\t\tEOWNERDEAD,\n#endif\n\n      permission_denied = \t\t\tEACCES,\n\n#ifdef EPROTO\n      protocol_error = \t\t\t\tEPROTO,\n#endif\n\n      protocol_not_supported = \t\t\tEPROTONOSUPPORT,\n      read_only_file_system = \t\t\tEROFS,\n      resource_deadlock_would_occur = \t\tEDEADLK,\n      resource_unavailable_try_again = \t\tEAGAIN,\n      result_out_of_range = \t\t\tERANGE,\n\n#ifdef ENOTRECOVERABLE\n      state_not_recoverable = \t\t\tENOTRECOVERABLE,\n#endif\n\n#ifdef ETIME\n      stream_timeout = \t\t\t\tETIME,\n#endif\n\n#ifdef ETXTBSY\n      text_file_busy = \t\t\t\tETXTBSY,\n#endif\n\n      timed_out = \t\t\t\tETIMEDOUT,\n      too_many_files_open_in_system = \t\tENFILE,\n      too_many_files_open = \t\t\tEMFILE,\n      too_many_links = \t\t\t\tEMLINK,\n      too_many_symbolic_link_levels = \t\tELOOP,\n\n#ifdef EOVERFLOW\n      value_too_large = \t\t\tEOVERFLOW,\n#endif\n\n      wrong_protocol_type = \t\t\tEPROTOTYPE\n    };\n\n_GLIBCXX_END_NAMESPACE_VERSION\n} // namespace\n\n#endif\n"}],"crc32":1847448147,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]