[{"ops":[{"insert":"// -*- C++ -*- forwarding header.\n\n// Copyright (C) 1997-2021 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// <http://www.gnu.org/licenses/>.\n\n/** @file include/cstdio\n *  This is a Standard C++ Library file.  You should @c \\#include this file\n *  in your programs, rather than any of the @a *.h implementation files.\n *\n *  This is the C++ version of the Standard C Library header @c stdio.h,\n *  and its contents are (mostly) the same as that header, but are all\n *  contained in the namespace @c std (except for names which are defined\n *  as macros in C).\n */\n\n//\n// ISO C++ 14882: 27.8.2  C Library files\n//\n\n#pragma GCC system_header\n\n#include <bits/c++config.h>\n#include <stdio.h>\n\n#ifndef _GLIBCXX_CSTDIO\n#define _GLIBCXX_CSTDIO 1\n\n#if __cplusplus <= 201103L && !defined(_GLIBCXX_HAVE_GETS)\nextern \"C\" char* gets (char* __s) __attribute__((__deprecated__));\n#endif\n\n// Get rid of those macros defined in <stdio.h> in lieu of real functions.\n#undef clearerr\n#undef fclose\n#undef feof\n#undef ferror\n#undef fflush\n#undef fgetc\n#undef fgetpos\n#undef fgets\n#undef fopen\n#undef fprintf\n#undef fputc\n#undef fputs\n#undef fread\n#undef freopen\n#undef fscanf\n#undef fseek\n#undef fsetpos\n#undef ftell\n#undef fwrite\n#undef getc\n#undef getchar\n#if __cplusplus <= 201103L\n# undef gets\n#endif\n#undef perror\n#undef printf\n#undef putc\n#undef putchar\n#undef puts\n#undef remove\n#undef rename\n#undef rewind\n#undef scanf\n#undef setbuf\n#undef setvbuf\n#undef sprintf\n#undef sscanf\n#undef tmpfile\n#undef tmpnam\n#undef ungetc\n#undef vfprintf\n#undef vprintf\n#undef vsprintf\n\nnamespace std\n{\n  using ::FILE;\n  using ::fpos_t;\n\n  using ::clearerr;\n  using ::fclose;\n  using ::feof;\n  using ::ferror;\n  using ::fflush;\n  using ::fgetc;\n  using ::fgetpos;\n  using ::fgets;\n  using ::fopen;\n  using ::fprintf;\n  using ::fputc;\n  using ::fputs;\n  using ::fread;\n  using ::freopen;\n  using ::fscanf;\n  using ::fseek;\n  using ::fsetpos;\n  using ::ftell;\n  using ::fwrite;\n  using ::getc;\n  using ::getchar;\n#if __cplusplus <= 201103L\n  // LWG 2249\n  using ::gets;\n#endif\n  using ::perror;\n  using ::printf;\n  using ::putc;\n  using ::putchar;\n  using ::puts;\n  using ::remove;\n  using ::rename;\n  using ::rewind;\n  using ::scanf;\n  using ::setbuf;\n  using ::setvbuf;\n  using ::sprintf;\n  using ::sscanf;\n  using ::tmpfile;\n#if _GLIBCXX_USE_TMPNAM\n  using ::tmpnam;\n#endif\n  using ::ungetc;\n  using ::vfprintf;\n  using ::vprintf;\n  using ::vsprintf;\n} // namespace\n\n#if _GLIBCXX_USE_C99_STDIO\n\n#undef snprintf\n#undef vfscanf\n#undef vscanf\n#undef vsnprintf\n#undef vsscanf\n\nnamespace __gnu_cxx\n{\n#if _GLIBCXX_USE_C99_CHECK || _GLIBCXX_USE_C99_DYNAMIC\n  extern \"C\" int\n  (snprintf)(char * __restrict, std::size_t, const char * __restrict, ...)\n  throw ();\n  extern \"C\" int\n  (vfscanf)(FILE * __restrict, const char * __restrict, __gnuc_va_list);\n  extern \"C\" int (vscanf)(const char * __restrict, __gnuc_va_list);\n  extern \"C\" int\n  (vsnprintf)(char * __restrict, std::size_t, const char * __restrict,\n\t      __gnuc_va_list) throw ();\n  extern \"C\" int\n  (vsscanf)(const char * __restrict, const char * __restrict, __gnuc_va_list)\n  throw ();\n#endif\n\n#if !_GLIBCXX_USE_C99_DYNAMIC\n  using ::snprintf;\n  using ::vfscanf;\n  using ::vscanf;\n  using ::vsnprintf;\n  using ::vsscanf;\n#endif\n} // namespace __gnu_cxx\n\nnamespace std\n{\n  using ::__gnu_cxx::snprintf;\n  using ::__gnu_cxx::vfscanf;\n  using ::__gnu_cxx::vscanf;\n  using ::__gnu_cxx::vsnprintf;\n  using ::__gnu_cxx::vsscanf;\n} // namespace std\n\n#endif // _GLIBCXX_USE_C99_STDIO\n\n#endif\n"}],"crc32":929331359,"timestamp":1704214355,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]