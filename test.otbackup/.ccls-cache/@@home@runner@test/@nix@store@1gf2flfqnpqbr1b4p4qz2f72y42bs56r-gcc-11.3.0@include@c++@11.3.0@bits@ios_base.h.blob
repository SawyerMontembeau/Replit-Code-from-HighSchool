[{"ops":[{"insert":"*\u0000\u0002\u0002\u0001\u0000/home/runner/test/main.cpp\u0000\u0016clang\u0000/home/runner/test/main.cpp\u0000-idirafter\u0000/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu\u0000-frandom-seed=xj94mglrnw\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-working-directory=/home/runner/test/\u0000ï¿½/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ostream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/initializer_list\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdlib\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/cpu_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/type_traits\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/ctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream_insert.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clock_t.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdarg.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timespec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/mbstate_t.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno-base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct___jmp_buf_tag.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/locale.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthread_stack_min-dynamic.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/char_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/debug.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stddef.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__mbstate_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/single_threaded.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stringfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ios\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iostream\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clockid_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes-arch.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/numeric_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timeval.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwctype\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++config.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/new\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cpp_type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++locale.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdint.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-intn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdc-predef.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/byteswap.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/long-double.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/predefined_ops.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cerrno\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/std_abs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitflags.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features-time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_construct.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwchar\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/os_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_forced.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iosfwd\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/locale.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/concept_check.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdio\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/system_error\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/postypes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/charconv.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-uintn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/new_allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_defines.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/uintn-identity.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timesize.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/memoryfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/wint_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/alloc_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/localefwd.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_algobase.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/thread-shared-types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_init_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sched.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitstatus.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_itimerspec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_tm.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ptr_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdio.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_ptr.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/string\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/istream.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/atomic_word.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/cookie_io_functions_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/clocale\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr-default.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdio_lim.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn-common.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/typeinfo\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/sched.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/range_access.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/alloc_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wordsize.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/string_conversions.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/typesizes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/pthread.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/setjmp.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functexcept.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/streambuf\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/timer_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cctype\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endianness.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdlib-float.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/exception\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/cdefs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functional_hash.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_inline.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/backward/binders.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/assertions.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/istream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/alloca.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_pair.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_mutex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_rwlock.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/atomic_wide_counter.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_funcs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/move.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/time_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/error_constants.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs-64.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/libc-header-start.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_function.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdint.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf_iterator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/FILE.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wctype-wchar.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/stdexcept\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/nested_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdint\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_sched_param.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/atomicity.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos64_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/error_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/cpu-set.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/hash_bytes.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/linux/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdlib.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/__stddef_max_align_t.h\u0000\u0002\u0004L/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/atomicity.h\u0000N/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/localefwd.h\u0000P/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.h\u0000Z/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/system_error\u0000\u0004*\u0000,\nï¿½\u0000ï¿½\fï¿½\u0012\u0001\u0000ï¿½8\u0001\fï¿½p\u0003\u0000ï¿½x\u0003\n_ï¿½[ï¿½\u0016ï¿½Åinline std::ios_base &std::defaultfloat(std::ios_base &__base)\u0000,6\u0018\u0001ï¿½J\u0004\u0004ï¿½J\u0004\u001cï¿½\u0002\u0004\u0001ï¿½I\u0004\u0004ï¿½N\u0004\u0006\u0000Calls @c base.unsetf(ios_base::floatfield)\u0000\u0000\u0001ï¿½Dï¿½\u0015ï¿½vd\f\u0001ï¿½L\u0004\u0016ï¿½L\u0004\"ï¿½Kï¿½}Z\u001bï¿½\u001a\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½!ï¿½Ë\fEinline std::ios_base &std::hexfloat(std::ios_base &__base)\u0000,6\u0010\u0001ï¿½B\u0004\u0004ï¿½B\u0004\u0014ï¿½\u0002\u0004\u0001ï¿½A\u0004\u0004ï¿½F\u0004\u0006\u0000Calls\nbase.setf(ios_base::fixed|ios_base::scientific, ios_base::floatfield)\u0000\u0000\u0001ï¿½+\u001dJnï¿½jï¿½\u0002ï¿½D\u0004\u0016ï¿½D\u0004\u001eï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@ï¿½D\u0004@ï¿½D\u0004Bï¿½LP:ï¿½cï¿½\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½&ï¿½mï¿½inline std::ios_base &std::scientific(std::ios_base &__base)\u0000,6\u0014\u0001ï¿½6\u0004\u0004ï¿½6\u0004\u0018ï¿½\u0002\u0004\u0001ï¿½5\u0004\u0004ï¿½:\u0004\u0006\u0000Calls base.setf(ios_base::scientific, ios_base::floatfield).\u0000\u0000\u0001ï¿½\u0013pNï¿½\u0018fï¿½\u0001ï¿½8\u0004\u0016ï¿½8\u0004\u001eï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\u00133/ï¿½]}ï¿½winline std::ios_base &std::hex(std::ios_base &__base)\u0000,6\u0006\u0001ï¿½\u001d\u0004\u0004ï¿½\u001d\u0004\nï¿½\u0002\u0004\u0001ï¿½\u001c\u0004\u0004ï¿½!\u0004\u0006\u0000Calls base.setf(ios_base::hex, ios_base::basefield).\u0000\u0000\u0001ï¿½1\rï¿½<ï¿½\u0001ï¿½\u001f\u0004\u0016ï¿½\u001f\u0004\u001eï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\nï¿½\u0011ï¿½\u0019inline std::ios_base &std::unitbuf(std::ios_base &__base)\u0000,6\u000e\u0001ï¿½\u0003\u0004ï¿½\u0003\u0012ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.setf(ios_base::unitbuf).\u0000\u0000\u0001ï¿½<\u001fï¿½Hï¿½\u0001ï¿½\u0003\u0018ï¿½\u0003 ï¿½\u001cï¿½\u0014m\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½2aï¿½qK\fï¿½inline std::ios_base &std::nouppercase(std::ios_base &__base)\u0000,6\u0016\u0001ï¿½\u0003\u0004ï¿½\u0003\u001aï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.unsetf(ios_base::uppercase).\u0000\u0000\u0001ï¿½\u001eG4,@ï¿½11\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½Kï¿½}Z\u001bï¿½\u001a\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\u0018ï¿½Iï¿½inline std::ios_base &std::skipws(std::ios_base &__base)\u0000,6\f\u0001ï¿½\u0003\u0004ï¿½\u0003\u0010ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.setf(ios_base::skipws).\u0000\u0000\u0001ï¿½gm\u0017ï¿½W]ï¿½\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½\u001cï¿½\u0014m\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½H}ï¿½inline std::ios_base &std::noshowpoint(std::ios_base &__base)\u0000,6\u0016\u0001ï¿½\u0003\u0004ï¿½\u0003\u001aï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.unsetf(ios_base::showpoint).\u0000\u0000\u0001ï¿½iKï¿½\u000eï¿½\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½Kï¿½}Z\u001bï¿½\u001a\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½eï¿½#inline std::ios_base &std::showpoint(std::ios_base &__base)\u0000,6\u0012\u0001ï¿½\u0003\u0004ï¿½\u0003\u0016ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.setf(ios_base::showpoint).\u0000\u0000\u0001ï¿½iW(;ï¿½\u0014ï¿½\u0000\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½\u001cï¿½\u0014m\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\u0003\u0010`ï¿½+ï¿½vinline std::ios_base &std::noshowbase(std::ios_base &__base)\u0000,6\u0014\u0001ï¿½\u0003\u0004ï¿½\u0003\u0018ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.unsetf(ios_base::showbase).\u0000\u0000\u0001ï¿½\u001cï¿½Y^X\f\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½Kï¿½}Z\u001bï¿½\u001a\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½_ï¿½\u000fï¿½inline std::ios_base &std::nounitbuf(std::ios_base &__base)\u0000,6\u0012\u0001ï¿½\u0003\u0004ï¿½\u0003\u0016ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.unsetf(ios_base::unitbuf).\u0000\u0000\u0001ï¿½vï¿½5\u0014@\u0001ï¿½\u0003\u0018ï¿½\u0003$ï¿½Kï¿½}Z\u001bï¿½\u001a\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½0b\u0004\u0006ï¿½=Cï¿½inline std::ios_base &std::showbase(std::ios_base &__base)\u0000,6\u0010\u0001ï¿½\u0003\u0004ï¿½\u0003\u0014ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.setf(ios_base::showbase).\u0000\u0000\u0001ï¿½iÏ¨=qï¿½\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½\u001cï¿½\u0014m\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½×¦ï¿½.ï¿½\u0004\u0002inline std::ios_base &std::noboolalpha(std::ios_base &__base)\u0000,6\u0016\u0001ï¿½\u0003\u0004ï¿½\u0003\u001aï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.unsetf(ios_base::boolalpha).\u0000\u0000\u0001ï¿½\"zï¿½\u0006ï¿½pï¿½\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½Kï¿½}Z\u001bï¿½\u001a\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½Õd7virtual std::ios_base::~ios_base()\u0000\u0010.\u0012\u0000\u0000Destructor\n\nInvokes each callback with erase_event.  Destroys local storage.\n\nNote that the ios_base object for the standard streams never gets\ndestroyed.  As a result, any callbacks registered with the standard\nstreams will not get invoked with erase_event (unless copyfmt is\nused).\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½k\u0003\u0018ï¿½k\u0003\u001aï¿½A\u0004\u0001ï¿½k\u0003\bï¿½k\u0003.\u0000\u0000ï¿½zï¿½\u001biï¿½Hï¿½std::ios_base::ios_base() throw()\u0000\u0000\u001e\u0010\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0001ï¿½n\u0003\bï¿½n\u0003\u0018ï¿½\u0001\u0004\u0001ï¿½n\u0003\bï¿½n\u0003.\u0000\u0000ï¿½ï¿½Cï¿½;Ú¬ï¿½void *&std::ios_base::pword(int __ix)\u0000\u000e,\n\u0001ï¿½[\u0003\bï¿½[\u0003\u0012ï¿½\u0002\u0004\u0001ï¿½Z\u0003\bï¿½`\u0003\n\u0000 @brief  Access to void pointer array.\n @param  __ix  Index into the array.\n @return  A reference to a void* associated with the index.\n\n The pword function provides access to an array of pointers that can be\n used for any purpose.  The array grows as required to hold the\n supplied index.  All pointers in the array are initialized to 0.\n\n The implementation reserves several indices.  You should use xalloc to\n obtain an index that is safe to use.  Also note that since the array\n can grow dynamically, it is not safe to hold onto the reference.\u0000\u0000\u0002ï¿½~ï¿½\u000fÄ±ï¿½Oï¿½\nï¿½\u0011ï¿½=\u0002ï¿½^\u0003*ï¿½^\u0003Dï¿½o;ï¿½XRï¿½N\u0003ï¿½$@ï¿½^\u0003*ï¿½^\u0003Dï¿½o;ï¿½XRï¿½N\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0004ï¿½D\u0013;ï¿½+ï¿½static int std::ios_base::xalloc() throw()\u0000\u00164\f\u0000\u0000[27.4.2.5] ios_base storage functions\n\n@brief  Access to unique indices.\n@return  An integer different from all previous calls.\n\nThis function returns a unique integer every time it is called.  It\ncan be used for any purpose, but is primarily intended to be a unique\nindex for the iword and pword functions.  The expectation is that an\napplication calls xalloc in order to obtain an index in the iword and\npword arrays that can be used without fear of conflict.\n\nThe implementation maintains a static variable that is incremented and\nreturned on each invocation.  xalloc is guaranteed to return an index\nthat is safe to use in the iword and pword arrays.\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0001ï¿½6\u0003\bï¿½6\u0003\u0014ï¿½\u0001\u0004\u0001ï¿½5\u0003\bï¿½6\u0003(\u0000\u0000ï¿½s8ï¿½'lï¿½\u000fvconst std::locale &std::ios_base::_M_getloc() const\u0000&D\u0012\u0001ï¿½#\u0003\bï¿½#\u0003\u001aï¿½\u0002\u0004\u0001ï¿½\"\u0003\bï¿½$\u0003:\u0000 @brief  Locale access\n @return  A reference to the current locale.\n\n Like getloc above, but returns a reference instead of\n generating a copy.\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½<ï¿½Oï¿½ystd::error_condition::error_condition(int __v, const std::error_category &__cat) noexcept\u0000\u0000,\u001e\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½4ï¿½$A\u0001ï¿½xï¿½T\u0017ï¿½Rstd::streamsize std::ios_base::precision(std::streamsize __prec)\u0000 >\u0012\u0001ï¿½\u0002\bï¿½\u0002\u001aï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u0002\n\u0000 @brief  Changing flags.\n @param  __prec  The new precision value.\n @return  The previous value of precision().\u0000\u0000\u0002ï¿½$l\u000f\u0006^ï¿½q_ï¿½iï¿½\u00107\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½yï¿½\u0012:ï¿½inline const std::_Ios_Iostate &std::operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)\u0000@J\u0014\u0001ï¿½\u0004ï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½:\u0000\u0000\u0000\u0002ï¿½y~ï¿½_ï¿½1ï¿½--\u000bï¿½&ï¿½n\u0001ï¿½*ï¿½,ï¿½\u0004ï¿½~ï¿½\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½4ï¿½,ï¿½rinline std::ios_base &std::fixed(std::ios_base &__base)\u0000,6\n\u0001ï¿½.\u0004\u0004ï¿½.\u0004\u000eï¿½\u0002\u0004\u0001ï¿½-\u0004\u0004ï¿½2\u0004\u0006\u0000[27.4.5.4] floatfield manipulators\n Calls base.setf(ios_base::fixed, ios_base::floatfield).\u0000\u0000\u0001ï¿½|ï¿½(ï¿½Kï¿½\u0001ï¿½0\u0004\u0016ï¿½0\u0004\u001eï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½L\u0016ï¿½8ï¿½Rï¿½\u0011inline std::ios_base &std::boolalpha(std::ios_base &__base)\u0000,6\u0012\u0001ï¿½\u0003\u0004ï¿½\u0003\u0016ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000[27.4.5.1] fmtflags manipulators\n Calls base.setf(ios_base::boolalpha).\u0000\u0000\u0001ï¿½\u0016xï¿½)Æ®\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½\u001cï¿½\u0014m\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½yï¿½/Bï¿½explicit std::ios_base::failure::failure(const std::string &__str)\u0000\u0012B\u000e\u0000\u0000\u0000\u0000\u0001ï¿½.ï¿½\u001eï¿½Ñ`ï¿½\u0000\t\u0000\u0000\u0001ï¿½\u0002\u0001\fï¿½\u0002\u0001\u001aï¿½\u0001\u0004\u0001ï¿½\u0001\u0001\fï¿½\u0002\u0001D\u0000\u0000ï¿½\u001f?ï¿½\u0003\u001aï¿½inline std::ios_base &std::noskipws(std::ios_base &__base)\u0000,6\u0010\u0001ï¿½\u0003\u0004ï¿½\u0003\u0014ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.unsetf(ios_base::skipws).\u0000\u0000\u0001ï¿½TB(\u0018ï¿½]ï¿½\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½Kï¿½}Z\u001bï¿½\u001a\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½Ø©ï¿½~1ï¿½H]inline std::error_condition std::make_error_condition(std::io_errc __e) noexcept\u00008B(\u0001ï¿½\u0004ï¿½,ï¿½\u0002\u0004\u0001ï¿½\u0004Ö\u0000\u0000\u0000\u0001ï¿½`Ã·ï¿½\u0002ï¿½\u0016ï¿½4ï¿½<ï¿½Oï¿½y\u0003ï¿½$Aï¿½dÖï¿½4C\u0010ï¿½Â¥\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½qï¿½9ï¿½hï¿½inline void __gnu_cxx::__atomic_add_dispatch(_Atomic_word *__mem, int __val)\u0000\u0018.*\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½5\u0002Lï¿½5\u0002vï¿½$@\u0001ï¿½kï¿½]ï¿½Astd::ios_base::ios_base(const std::ios_base &) = delete\u0000\u0000\u001e\u0010\u0001ï¿½z\u0003\bï¿½z\u0003\u0018ï¿½\u0002\u0004\u0001ï¿½z\u0003\bï¿½z\u0003L\u0000\u0000\u0000\u0000\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½4C\u0010ï¿½Â¥const std::error_category &std::iostream_category() noexcept\u00006@\"\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0001ï¿½0ï¿½Rï¿½\u0001\u0004\u0001ï¿½\u0004ï¿½h\u0000\u0002ï¿½Zï¿½|ï¿½$@\u0001ï¿½dÖï¿½$@\u0001ï¿½~ï¿½P\u001c.\u00159\ninline const std::_Ios_Iostate &std::operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)\u0000@J\u0014\u0001ï¿½\u0004ï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½:\u0000\u0000\u0000\u0002ï¿½~ï¿½vï¿½s@\u001aï¿½\u0001ï¿½*ï¿½,ï¿½\u001dï¿½k\bï¿½\u0010ï¿½B\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\u0014Zï¿½Nï¿½uï¿½std::ios_base &std::ios_base::operator=(const std::ios_base &) = delete\u0000\u001e<\u0012\u0001ï¿½}\u0003\bï¿½}\u0003\u001aï¿½\u0002\u0004\u0001ï¿½|\u0003\bï¿½}\u0003N\u0000\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½@ï¿½\u001a5ï¿½void std::ios_base::_M_call_callbacks(std::ios_base::event __ev) throw()\u0000\n(\"\u0000\u0000\u0000\u0000\u0001ï¿½gb5ï¿½.ï¿½%\u0007\u0000\u0006\u0000\u0000\u0001ï¿½I\u0002\bï¿½I\u0002*ï¿½\u0001\u0004\u0001ï¿½H\u0002\bï¿½I\u0002R\u0000\u0000ï¿½GLï¿½Iï¿½\u0015ï¿½inline constexpr std::_Ios_Iostate std::operator~(std::_Ios_Iostate __a)\u0000FP\u0012\u0001ï¿½\u0004ï¿½\u0016ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½d\u0000\u0000\u0000\u0001ï¿½t8\u0006t?,\u0007ï¿½\u0000\f\u0003\u0000\u0000\u0000\u0000ï¿½\u0004ï¿½~ï¿½inline constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b)\u0000FP\u0012\u0001ï¿½\u0004ï¿½\u0016ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\u0000\u0000\u0000\u0002ï¿½'ï¿½'~ï¿½9ï¿½Kï¿½\u0018ï¿½\u0000\f\u0003\u0000\u0000\u0000\u0001ï¿½*ï¿½,ï¿½$@\u0001ï¿½Bï¿½{}ï¿½)uinline std::ios_base &std::uppercase(std::ios_base &__base)\u0000,6\u0012\u0001ï¿½\u0003\u0004ï¿½\u0003\u0016ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.setf(ios_base::uppercase).\u0000\u0000\u0001ï¿½Í¶S\u0015ï¿½0!ï¿½\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½\u001cï¿½\u0014m\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½vï¿½_Bhï¿½dinline const std::_Ios_Openmode &std::operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)\u0000BL\u0014\u0001ï¿½\u0004ï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½:\u0000\u0000\u0000\u0002ï¿½\u001aï¿½Wï¿½FHï¿½\u0007ï¿½6N}ï¿½\u0001ï¿½*ï¿½,ï¿½5ï¿½\u000659ï¿½_\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\u0018ï¿½+ï¿½bï¿½inline const std::_Ios_Iostate &std::operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b)\u0000@J\u0014\u0001ï¿½\u0004ï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½:\u0000\u0000\u0000\u0002ï¿½Çªï¿½|ï¿½\nï¿½6ï¿½\u0018Pï¿½\u0001ï¿½*ï¿½,ï¿½{1HÅRE\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½/v}ï¿½inline constexpr std::_Ios_Openmode std::operator~(std::_Ios_Openmode __a)\u0000HR\u0012\u0001ï¿½\u0004ï¿½\u0016ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½f\u0000\u0000\u0000\u0001ï¿½wï¿½=\u0000\f\u0003\u0000\u0000\u0000\u0000ï¿½\tï¿½Zk|pï¿½inline std::ios_base &std::right(std::ios_base &__base)\u0000,6\n\u0001ï¿½\f\u0004\u0004ï¿½\f\u0004\u000eï¿½\u0002\u0004\u0001ï¿½\u000b\u0004\u0004ï¿½\u0010\u0004\u0006\u0000Calls base.setf(ios_base::right, ios_base::adjustfield).\u0000\u0000\u0001ï¿½Fï¿½0ï¿½^ï¿½\u0001ï¿½\u000e\u0004\u0016ï¿½\u000e\u0004\u001eï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½std::locale std::ios_base::getloc() const\u0000\u00186\f\u0001ï¿½\u0018\u0003\bï¿½\u0018\u0003\u0014ï¿½\u0002\u0004\u0001ï¿½\u0017\u0003\bï¿½\u0019\u0003:\u0000 @brief  Locale access\n @return  A copy of the current locale.\n\n If @c imbue(loc) has previously been called, then this function\n returns @c loc.  Otherwise, it returns a copy of @c std::locale(),\n the global C++ locale.\u0000\u0000\u0000\u0001ï¿½\u0019\u0003\u001aï¿½\u0019\u00034ï¿½3tÊ±MÎ¥ï¿½\u0003ï¿½$A\u0006\u0005\u0000\u0000\u0000\u0000ï¿½C]Gg3\u001binline constexpr std::_Ios_Fmtflags std::operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)\u0000HR\u0012\u0001R\u0004R\u0016ï¿½\u0002\u0004\u0001Q\u0004Sï¿½\u0000\u0000\u0000\u0002ï¿½rï¿½V?$ï¿½|ï¿½Jï¿½A\u0000\f\u0003\u0000\u0000\u0000\u0002g*g,ï¿½$@\u0001ï¿½\u00026ï¿½\u00028ï¿½$@\u0001ï¿½bRï¿½DUYï¿½inline const std::_Ios_Openmode &std::operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)\u0000BL\u0014\u0001ï¿½\u0004ï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½:\u0000\u0000\u0000\u0002ï¿½ \b\r\u000eï¿½cï¿½\u0012ï¿½\u0017ï¿½'<\u000bN\u000e\u0001ï¿½*ï¿½,ï¿½\u0011ï¿½\u001cï¿½R\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½LP:ï¿½cï¿½inline constexpr std::_Ios_Fmtflags std::operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)\u0000HR\u0012\u0001V\u0004V\u0016ï¿½\u0002\u0004\u0001U\u0004Wï¿½\u0000\u0000\u0000\u0002ï¿½MÔ\u0019\u0004ï¿½.ï¿½Éï¿½cï¿½\u0000\f\u0003\u0000\u0000\u0000\u0002c*c,ï¿½$@\u0001ï¿½D\u0004@ï¿½D\u0004Bï¿½$@\u0001ï¿½^ï¿½inline std::ios_base &std::left(std::ios_base &__base)\u0000,6\b\u0001ï¿½\u0004\u0004\u0004ï¿½\u0004\u0004\fï¿½\u0002\u0004\u0001ï¿½\u0003\u0004\u0004ï¿½\b\u0004\u0006\u0000Calls base.setf(ios_base::left, ios_base::adjustfield).\u0000\u0000\u0001ï¿½?Åï¿½\u0014\u0014ï¿½\u0000\u0001ï¿½\u0006\u0004\u0016ï¿½\u0006\u0004\u001eï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½nï¿½\u0000`Mï¿½\u0015ï¿½void std::ios_base::_M_swap(std::ios_base &__rhs) noexcept\u0000\n(\u000e\u0000\u0000\u0000\u0000\u0001ï¿½b\u0014ï¿½nï¿½C\u000e\u0000\u0006\u0000\u0000\u0001ï¿½\u0003\bï¿½\u0003\u0016ï¿½\u0001\u0004\u0001ï¿½\u0003\bï¿½\u0003J\u0000\u0000ï¿½Nï¿½8mï¿½explicit std::ios_base::failure::failure(const char *, const std::error_code &)\u0000\u0012B\u000e\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0001ï¿½\t\u0001\fï¿½\t\u0001\u001aï¿½\u0001\u0004\u0001ï¿½\b\u0001\fï¿½\t\u0001~\u0000\u0000ï¿½\u001dï¿½k\bï¿½\u0010ï¿½Binline constexpr std::_Ios_Iostate std::operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b)\u0000FP\u0012\u0001ï¿½\u0004ï¿½\u0016ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\u0000\u0000\u0000\u0002ï¿½\u001fJï¿½<ï¿½\u001es%ï¿½^ï¿½83\u0000\f\u0003\u0000\u0000\u0000\u0001ï¿½*ï¿½,ï¿½$@\u0001ï¿½)ï¿½SÝ\u001b\u0007ï¿½std::ios_base::_Words::_Words()\u0000\u0000.\f\u0001ï¿½S\u0002\fï¿½S\u0002\u0018ï¿½\u0002\u0004\u0001ï¿½S\u0002\fï¿½S\u0002Z\u0000\u0000\u0000\u0000\u0000\t\u0017\u0000\u0000\u0000\u0000ï¿½\u001b\u0019ï¿½\u0007ï¿½void std::ios_base::_M_dispose_callbacks() throw()\u0000\n((\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½L\u0002\bï¿½L\u00020ï¿½\u0001\u0004\u0001ï¿½K\u0002\bï¿½L\u0002L\u0000\u0000ï¿½L'ï¿½std::streamsize std::ios_base::precision() const\u0000 >\u0012\u0001ï¿½\u0002\bï¿½\u0002\u001aï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u00028\u0000 @brief  Flags access.\n @return  The precision to generate on certain output operations.\n\n Be careful if you try to give a definition of @a precision here; see\n DR 189.\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u0015\u0003ï¿½`^inline const std::_Ios_Fmtflags &std::operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)\u0000BL\u0014\u0001b\u0004b\u0018ï¿½\u0002\u0004\u0001a\u0004c:\u0000\u0000\u0000\u0002ï¿½{+%ï¿½f?mtï¿½Rï¿½4#ï¿½\u0001c*c,ï¿½LP:ï¿½cï¿½\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0002ï¿½\u0002\u001eï¿½\u0002\"ï¿½$@\u0001ï¿½\u0002\u001eï¿½\u0002\"ï¿½$@\u0001ï¿½Pï¿½\bï¿½Wï¿½inline std::ios_base &std::oct(std::ios_base &__base)\u0000,6\u0006\u0001ï¿½%\u0004\u0004ï¿½%\u0004\nï¿½\u0002\u0004\u0001ï¿½$\u0004\u0004ï¿½)\u0004\u0006\u0000Calls base.setf(ios_base::oct, ios_base::basefield).\u0000\u0000\u0001ï¿½\n)ï¿½dï¿½Iï¿½\u0001ï¿½'\u0004\u0016ï¿½'\u0004\u001eï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\u0011ï¿½\u001cï¿½Rinline constexpr std::_Ios_Openmode std::operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b)\u0000HR\u0012\u0001ï¿½\u0004ï¿½\u0016ï¿½\u0002\u0004\u0001\u0004ï¿½\u0000\u0000\u0000\u0002ï¿½ \u0002ï¿½WDï¿½+\rï¿½\u001bï¿½Úï¿½\u0014Æ\u0000\f\u0003\u0000\u0000\u0000\u0001ï¿½*ï¿½,ï¿½$@\u0001ï¿½nx,ï¿½^ï¿½%inline std::error_code std::make_error_code(std::io_errc __e) noexcept\u0000.8\u001e\u0001ï¿½\u0004ï¿½\"ï¿½\u0002\u0004\u0001ï¿½\u0004Ò\u0000\u0000\u0000\u0001ï¿½\bï¿½jvV\u0003ï¿½\u0016\u0002ï¿½\u0016ï¿½*ï¿½cï¿½v`ï¿½\u0003ï¿½$Aï¿½Zï¿½|ï¿½4C\u0010ï¿½Â¥\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½{1HÅREinline constexpr std::_Ios_Iostate std::operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b)\u0000FP\u0012\u0001ï¿½\u0004ï¿½\u0016ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\u0000\u0000\u0000\u0002ï¿½\bï¿½]\u001dNï¿½Iï¿½8ï¿½zYw[\u0000\f\u0003\u0000\u0000\u0000\u0001ï¿½*ï¿½,ï¿½$@\u0001ï¿½3tÊ±MÎ¥ï¿½std::locale::locale(const std::locale &__other) throw()\u0000\u0000\u001a\f\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0001ï¿½\u0019\u0003\u001aï¿½\u0019\u00034ï¿½$A\u0001ï¿½Ebï¿½\u001c\u0000\u001eï¿½xstd::error_code::error_code(_ErrorCodeEnum __e) noexcept\u0000\u0000\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0001ï¿½\t\u0001^ï¿½\t\u0001lï¿½$\u0001\u0001ï¿½~ï¿½9qï¿½long &std::ios_base::iword(int __ix)\u0000\f*\n\u0001ï¿½F\u0003\bï¿½F\u0003\u0012ï¿½\u0002\u0004\u0001ï¿½E\u0003\bï¿½K\u0003\n\u0000 @brief  Access to integer array.\n @param  __ix  Index into the array.\n @return  A reference to an integer associated with the index.\n\n The iword function provides access to an array of integers that can be\n used for any purpose.  The array grows as required to hold the\n supplied index.  All integers in the array are initialized to 0.\n\n The implementation reserves several indices.  You should use xalloc to\n obtain an index that is safe to use.  Also note that since the array\n can grow dynamically, it is not safe to hold onto the reference.\u0000\u0000\u0002ï¿½4ï¿½\u00075 \u0019ï¿½\u0014>C\u0002ï¿½I\u0003*ï¿½I\u0003Dï¿½o;ï¿½XRï¿½N\u0003ï¿½$@ï¿½I\u0003*ï¿½I\u0003Dï¿½o;ï¿½XRï¿½N\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Kï¿½}Z\u001bï¿½\u001avoid std::ios_base::unsetf(std::ios_base::fmtflags __mask)\u0000\n(\f\u0001ï¿½\u0002\bï¿½\u0002\u0014ï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u00028\u0000 @brief  Clearing format flags.\n @param  __mask  The flags to unset.\n\n This function clears @a __mask in the format flags.\u0000\u0000\u0001ï¿½lï¿½\u0006de\u0002ï¿½\u0002\u001eï¿½\u0002\"ï¿½\"ï¿½(@y_ï¿½\u0003ï¿½$@ï¿½\u0002$ï¿½\u0002&ï¿½\u0015Zï¿½\u0012ï¿½>\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\bï¿½\u0003\u0016ï¿½\u0003\"ï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003$ï¿½$@\u0001ï¿½L\u0004\u0016ï¿½L\u0004\"ï¿½$@\u0001ï¿½\"ï¿½(@y_ï¿½inline const std::_Ios_Fmtflags &std::operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)\u0000BL\u0014\u0001f\u0004f\u0018ï¿½\u0002\u0004\u0001e\u0004g:\u0000\u0000\u0000\u0002ï¿½\u0002ï¿½\u0004ï¿½Bï¿½\boï¿½/9l\u0011\u0000\u0001g*g,ï¿½C]Gg3\u001b\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0002ï¿½\u0002\u001eï¿½\u0002\"ï¿½$@\u0001ï¿½\u0002\u001eï¿½\u0002\"ï¿½$@\u0001ï¿½\u0014\u0003ï¿½|ï¿½inline const std::_Ios_Fmtflags &std::operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b)\u0000BL\u0014\u0001j\u0004j\u0018ï¿½\u0002\u0004\u0001i\u0004k:\u0000\u0000\u0000\u0002ï¿½w8ï¿½\u001f/]\\ï¿½D-ï¿½(ï¿½Sï¿½\u0001k*k,ï¿½\u0004ï¿½_2\u0014$B\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½\u0016n0gï¿½)std::ios_base::Init::Init(const std::ios_base::Init &) = default\u0000\u0000*\b\u0001ï¿½y\u0002\fï¿½y\u0002\u0014ï¿½\u0002\u0004\u0001ï¿½y\u0002\fï¿½y\u0002B\u0000\u0000\u0000\u0000\u0000\t\u0005\u0000\u0000\u0000\u0000ï¿½o;ï¿½XRï¿½Nstd::ios_base::_Words &std::ios_base::_M_grow_words(int __index, bool __iword)\u0000.L\u001a\u0000\u0000\u0000\u0000\u0002ï¿½\u0001ï¿½4Ã¦ï¿½Bï¿½Vï¿½\u0001ï¿½\u0000\u0006\u0000\u0000\u0001ï¿½c\u0002\bï¿½c\u0002\"ï¿½\u0001\u0004\u0001ï¿½b\u0002\bï¿½c\u0002X\u0000\u0002ï¿½I\u0003*ï¿½I\u0003Dï¿½$@\u0001ï¿½^\u0003*ï¿½^\u0003Dï¿½$@\u0001ï¿½SiFï¿½\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Ý\rï¿½gï¿½Hï¿½\u0000ï¿½\rK\u001f\u0015ï¿½[\u001finline const std::_Ios_Openmode &std::operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b)\u0000BL\u0014\u0001ï¿½\u0004ï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½:\u0000\u0000\u0000\u0002ï¿½5\u0005<\u0017Gï¿½\u000eï¿½k\u0010ï¿½]a\u0001ï¿½*ï¿½,ï¿½\nï¿½Tt8ï¿½\"\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½Q^ï¿½\u0016ï¿½vstd::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags __fmtfl, std::ios_base::fmtflags __mask)\u00000N\b\u0001ï¿½\u0002\bï¿½\u0002\u0010ï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u0002\n\u0000 @brief  Setting new format flags.\n @param  __fmtfl  Additional flags to set.\n @param  __mask  The flags mask for @a fmtfl.\n @return  The previous format control flags.\n\n This function clears @a mask in the format flags, then sets\n @a fmtfl @c & @a mask.  An example mask is @c ios_base::adjustfield.\u0000\u0000\u0003ï¿½,ï¿½8ï¿½Yï¿½nVï¿½]ï¿½RHyï¿½Wï¿½X\u0004ï¿½\u0002\u001eï¿½\u0002\"ï¿½\"ï¿½(@y_ï¿½\u0003ï¿½$@ï¿½\u0002$ï¿½\u0002&ï¿½\u0015Zï¿½\u0012ï¿½>\u0003ï¿½$@ï¿½\u0002\u001eï¿½\u0002\"ï¿½\u0015\u0003ï¿½`^\u0003ï¿½$@ï¿½\u00026ï¿½\u00028ï¿½C]Gg3\u001b\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\tï¿½\u0003\u0018ï¿½\u0003 ï¿½$@\u0001ï¿½\u0006\u0004\u0016ï¿½\u0006\u0004\u001eï¿½$@\u0001ï¿½\u000e\u0004\u0016ï¿½\u000e\u0004\u001eï¿½$@\u0001ï¿½\u0017\u0004\u0016ï¿½\u0017\u0004\u001eï¿½$@\u0001ï¿½\u001f\u0004\u0016ï¿½\u001f\u0004\u001eï¿½$@\u0001ï¿½'\u0004\u0016ï¿½'\u0004\u001eï¿½$@\u0001ï¿½0\u0004\u0016ï¿½0\u0004\u001eï¿½$@\u0001ï¿½8\u0004\u0016ï¿½8\u0004\u001eï¿½$@\u0001ï¿½D\u0004\u0016ï¿½D\u0004\u001eï¿½$@\u0001ï¿½\nï¿½Tt8ï¿½\"inline constexpr std::_Ios_Openmode std::operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b)\u0000HR\u0012\u0001|\u0004|\u0016ï¿½\u0002\u0004\u0001{\u0004}ï¿½\u0000\u0000\u0000\u0002ï¿½/ï¿½'ï¿½Eï¿½\u0005ï¿½Bï¿½Hï¿½\u0010?\u0000\f\u0003\u0000\u0000\u0000\u0001ï¿½*ï¿½,ï¿½$@\u0001ï¿½5ï¿½\u000659ï¿½_inline constexpr std::_Ios_Openmode std::operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b)\u0000HR\u0012\u0001ï¿½\u0004ï¿½\u0016ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\u0000\u0000\u0000\u0002ï¿½cï¿½8ï¿½Suï¿½Q>ï¿½\u0014\u0000\f\u0003\u0000\u0000\u0000\u0001ï¿½*ï¿½,ï¿½$@\u0001ï¿½=ï¿½\u0007ï¿½sï¿½9std::streamsize std::ios_base::width() const\u0000 >\n\u0001ï¿½\u0002\bï¿½\u0002\u0012ï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u00020\u0000 @brief  Flags access.\n @return  The minimum field width to generate on output operations.\n\n <em>Minimum field width</em> refers to the number of characters.\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Zï¿½Æsï¿½std::locale std::ios_base::imbue(const std::locale &__loc) throw()\u0000\u00186\n\u0000\u0000[27.4.2.3] ios_base locale functions\n\n@brief  Setting a new locale.\n@param  __loc  The new locale.\n@return  The previous locale.\n\nSets the new locale for this stream, and then invokes each callback\nwith imbue_event.\u0000\u0000\u0001ï¿½fï¿½fM\"\u0002Yï¿½\u0000\u0006\u0000\u0000\u0001ï¿½\r\u0003\bï¿½\r\u0003\u0012ï¿½\u0001\u0004\u0001ï¿½\f\u0003\bï¿½\r\u0003L\u0000\u0000ï¿½\u0004ï¿½_2\u0014$Binline constexpr std::_Ios_Fmtflags std::operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b)\u0000HR\u0012\u0001Z\u0004Z\u0016ï¿½\u0002\u0004\u0001Y\u0004[ï¿½\u0000\u0000\u0000\u0002ï¿½\u0015aï¿½wsï¿½\u001af\fï¿½Djï¿½\u0000\f\u0003\u0000\u0000\u0000\u0001k*k,ï¿½$@\u0001ï¿½%zÄï¿½aï¿½int std::ios_base::_Callback_list::_M_remove_reference()\u0000\bF&\u0001ï¿½9\u0002\fï¿½9\u00022ï¿½\u0002\u0004\u0001ï¿½8\u0002\fï¿½C\u0002\u000e\u00000 => OK to delete.\u0000\u0000\u0001ï¿½\t%ï¿½Äï¿½0\u0002ï¿½=\u0002>ï¿½=\u0002tï¿½xB%ï¿½*\u0005ï¿½\u0003ï¿½$@ï¿½=\u0002>ï¿½=\u0002tï¿½xB%ï¿½*\u0005ï¿½\u0003ï¿½$@\u0006\u0017\u0000\u0000\u0000\u0000ï¿½Kï¿½~\u0012ï¿½Ò¼explicit std::ios_base::failure::failure(const std::string &, const std::error_code &)\u0000\u0012B\u000e\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0001ï¿½\u0006\u0001\fï¿½\u0006\u0001\u001aï¿½\u0001\u0004\u0001ï¿½\u0005\u0001\fï¿½\u0006\u0001^\u0000\u0000ï¿½Ý\rï¿½gï¿½Hï¿½virtual const char *std::ios_base::failure::what() const throw()\u0000(X\b\u0000\u0000\u0000\u0001ï¿½SiFï¿½\u0007\u0000\u0000\u0006\u0000\u0000\u0001ï¿½\u0010\u0001\fï¿½\u0010\u0001\u0014ï¿½A\u0014\u0001ï¿½\u000f\u0001\fï¿½\u0010\u00014\u0000\u0000ï¿½\"ï¿½)\u001bR|virtual std::ios_base::failure::~failure() throw()\u0000\u0010@\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½\r\u0001\fï¿½\r\u0001\u000eï¿½A\u0014\u0001ï¿½\f\u0001\fï¿½\r\u00010\u0000\u0000ï¿½\"d)~Dï¿½std::ios_base::fmtflags std::ios_base::flags(std::ios_base::fmtflags __fmtfl)\u00000N\n\u0001ï¿½\u0002\bï¿½\u0002\u0012ï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u0002\n\u0000 @brief  Setting new format flags all at once.\n @param  __fmtfl  The new flags to set.\n @return  The previous format control flags.\n\n This function overwrites all the format flags with @a __fmtfl.\u0000\u0000\u0002ï¿½\u000eï¿½@ï¿½}ï¿½]ï¿½oN\u001f\u0007\u001d$\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½0.ï¿½dï¿½`ï¿½void std::ios_base::register_callback(std::ios_base::event_callback __fn, int __index)\u0000\n(\"\u0000\u0000 @brief  Add the callback __fn with parameter __index.\n @param  __fn  The function to add.\n @param  __index  The integer to pass to the function when invoked.\n\n Registers a function as an event callback with an integer parameter to\n be passed to the function when invoked.  Multiple copies of the\n function are allowed.  If there are multiple callbacks, they are\n invoked in the order they were registered.\u0000\u0000\u0002ï¿½;ï¿½Hï¿½Úï¿½\u0006ß¿ï¿½î\u0000\u0006\u0000\u0000\u0001ï¿½\u001d\u0002\bï¿½\u001d\u0002*ï¿½\u0001\u0004\u0001ï¿½\u001c\u0002\bï¿½\u001d\u0002n\u0000\u0000ï¿½y\fKWï¿½Eï¿½inline std::ios_base &std::showpos(std::ios_base &__base)\u0000,6\u000e\u0001ï¿½\u0003\u0004ï¿½\u0003\u0012ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.setf(ios_base::showpos).\u0000\u0000\u0001ï¿½A3n@Z*X\\\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½\u001cï¿½\u0014m\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½hKï¿½=ï¿½\u001b\u0000\u000bvoid std::ios_base::_M_move(std::ios_base &) noexcept\u0000\n(\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½\u0003\bï¿½\u0003\u0016ï¿½\u0001\u0004\u0001ï¿½\u0003\bï¿½\u0003>\u0000\u0000ï¿½Qï¿½È©ï¿½static bool std::ios_base::sync_with_stdio(bool __sync)\u0000\u00186\u001e\u0000\u0000[27.4.2.4] ios_base static members\n\n@brief  Interaction with the standard C I/O objects.\n@param  __sync  Whether to synchronize or not.\n@return  True if the standard streams were previously synchronized.\n\nThe synchronization referred to is @e only that between the standard\nC facilities (e.g., stdout) and the standard C++ objects (e.g.,\ncout).  User-declared streams are unaffected.  See\nhttps://gcc.gnu.org/onlinedocs/libstdc++/manual/fstreams.html#std.io.filestreams.binary\u0000\u0000\u0001ï¿½B\u0005v\u0000ï¿½\u0000\u0000\u0001ï¿½\u0001\u0003\bï¿½\u0001\u0003&ï¿½\u0001\u0004\u0001ï¿½\u0000\u0003\bï¿½\u0001\u0003N\u0000\u0000ï¿½2Bï¿½inline std::ios_base &std::internal(std::ios_base &__base)\u0000,6\u0010\u0001ï¿½\u0003\u0004ï¿½\u0003\u0014ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0000\u0004\u0006\u0000[27.4.5.2] adjustfield manipulators\n Calls base.setf(ios_base::internal, ios_base::adjustfield).\u0000\u0000\u0001ï¿½\u0003ï¿½+Mwï¿½\u0001ï¿½\u0003\u0018ï¿½\u0003 ï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½|ï¿½yh-\u000eï¿½std::ios_base::_Callback_list::_Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb)\u0000\u0000>\u001c\u0001ï¿½0\u0002\fï¿½0\u0002(ï¿½\u0002\u0004\u0001ï¿½0\u0002\fï¿½2\u0002ï¿½\u0000\u0000\u0000\u0003ï¿½Mï¿½ ï¿½`\u0018,ï¿½1Qï¿½Rï¿½\u0000\t\u0017\u0000\u0000\u0000\u0000ï¿½\u0015Zï¿½\u0012ï¿½>inline constexpr std::_Ios_Fmtflags std::operator~(std::_Ios_Fmtflags __a)\u0000HR\u0012\u0001^\u0004^\u0016ï¿½\u0002\u0004\u0001]\u0004_f\u0000\u0000\u0000\u0001ï¿½QPï¿½\u0012\u001a\u0012f\u0000\f\u0003\u0000\u0000\u0000\u0002ï¿½\u0002$ï¿½\u0002&ï¿½$@\u0001ï¿½\u0002$ï¿½\u0002&ï¿½$@\u0001ï¿½~J\r\u000eï¿½PRstd::ios_base::Init::~Init()\u0000\u0000*\n\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½v\u0002\fï¿½v\u0002\u000eï¿½\u0001\u0004\u0001ï¿½v\u0002\fï¿½v\u0002\u001a\u0000\u0000ï¿½\u0003tï¿½@ï¿½void std::ios_base::_Callback_list::_M_add_reference()\u0000\nH \u0001ï¿½5\u0002\fï¿½5\u0002,ï¿½\u0002\u0004\u0001ï¿½4\u0002\fï¿½5\u0002ï¿½\u0000\u0000\u0000\u0000\u0001ï¿½5\u0002Lï¿½5\u0002vï¿½qï¿½9ï¿½hï¿½\u0003ï¿½$@\u0006\u0017\u0000\u0000\u0000\u0000ï¿½xB%ï¿½*\u0005ï¿½inline _Atomic_word __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)\u0000(>6\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0000\u0001ï¿½=\u0002>ï¿½=\u0002tï¿½$@\u0001ï¿½cï¿½v`ï¿½std::error_code::error_code(int __v, const std::error_category &__cat) noexcept\u0000\u0000\"\u0014\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½*ï¿½$A\u0001ï¿½ DWï¿½\u0014ï¿½\u0019void std::ios_base::_M_init() throw()\u0000\n(\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0001ï¿½i\u0002\bï¿½i\u0002\u0016ï¿½\u0001\u0004\u0001ï¿½h\u0002\bï¿½i\u0002*\u0000\u0000ï¿½+ï¿½^ï¿½std::streamsize std::ios_base::width(std::streamsize __wide)\u0000 >\n\u0001ï¿½\u0002\bï¿½\u0002\u0012ï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u0002\n\u0000 @brief  Changing flags.\n @param  __wide  The new width value.\n @return  The previous value of width().\u0000\u0000\u0002ï¿½e9]xï¿½\nÖºï¿½fEÃ°9\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½Ô´ï¿½Eï¿½std::ios_base::Init::Init()\u0000\u0000*\b\u0000\u0000\u0000\u0000\u0000\u0000\t\u0000\u0000\u0001ï¿½u\u0002\fï¿½u\u0002\u0014ï¿½\u0001\u0004\u0001ï¿½u\u0002\fï¿½u\u0002\u0018\u0000\u0000ï¿½(\u0002ï¿½lï¿½ljstd::ios_base::fmtflags std::ios_base::flags() const\u00000N\n\u0001ï¿½\u0002\bï¿½\u0002\u0012ï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u00020\u0000[27.4.2.2] fmtflags state functions\n\n@brief  Access to format flags.\n@return  The format control flags for both input and output.\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½%ï¿½s\u0005ï¿½Cï¿½inline std::ios_base &std::dec(std::ios_base &__base)\u0000,6\u0006\u0001ï¿½\u0015\u0004\u0004ï¿½\u0015\u0004\nï¿½\u0002\u0004\u0001ï¿½\u0014\u0004\u0004ï¿½\u0019\u0004\u0006\u0000[27.4.5.3] basefield manipulators\n Calls base.setf(ios_base::dec, ios_base::basefield).\u0000\u0000\u0001ï¿½aï¿½\"\u0010ï¿½C\u0001ï¿½\u0017\u0004\u0016ï¿½\u0017\u0004\u001eï¿½Q^ï¿½\u0016ï¿½v\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½3ï¿½\u001fdï¿½inline std::ios_base &std::noshowpos(std::ios_base &__base)\u0000,6\u0012\u0001ï¿½\u0003\u0004ï¿½\u0003\u0016ï¿½\u0002\u0004\u0001ï¿½\u0003\u0004ï¿½\u0003\u0006\u0000Calls base.unsetf(ios_base::showpos).\u0000\u0000\u0001ï¿½\u0005xï¿½\u0015\u0001ï¿½h \u0001ï¿½\u0003\u0016ï¿½\u0003\"ï¿½Kï¿½}Z\u001bï¿½\u001a\u0003ï¿½$@\f\u0003\u0000\u0000\u0000\u0000ï¿½5G[m0_ï¿½Lstd::ios_base::Init &std::ios_base::Init::operator=(const std::ios_base::Init &) = default\u0000*T\u0012\u0001ï¿½z\u0002\u0018ï¿½z\u0002*ï¿½\u0002\u0004\u0001ï¿½z\u0002\fï¿½z\u0002X\u0000\u0000\u0000\u0000\u0000\u0006\u0005\u0000\u0000\u0000\u0000ï¿½\u001cï¿½\u0014mstd::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags __fmtfl)\u00000N\b\u0001ï¿½\u0002\bï¿½\u0002\u0010ï¿½\u0002\u0004\u0001ï¿½\u0002\bï¿½\u0002\n\u0000 @brief  Setting new format flags.\n @param  __fmtfl  Additional flags to set.\n @return  The previous format control flags.\n\n This function sets additional flags in format control.  Flags that\n were previously set remain set.\u0000\u0000\u0002ï¿½dMï¿½\"\u0015ï¿½`\u0014ï¿½ï¿½ZÉ¤\u0001ï¿½\u0002\u001eï¿½\u0002\"ï¿½\u0015\u0003ï¿½`^\u0003ï¿½$@\u0006\u0005\u0000\u0000\u0000\u0007ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½$@\u0001ï¿½\u0003\u0016ï¿½\u0003\u001eï¿½$@\u0001ï¿½\u0003\u0018ï¿½\u0003 ï¿½$@\u0001,ï¿½`ï¿½h\u0017ï¿½\u001aï¿½class std::ios_base::Init {}\u0000\f*\b\u000027.4.2.1.6  Class ios_base::Init\nUsed to initialize standard streams. In theory, g++ could use\n-finit-priority to order this stuff correctly without going\nthrough these machinations.\u0000\u0001ï¿½q\u0002\u0014ï¿½q\u0002\u001cï¿½\u0002\u0004\u0001ï¿½q\u0002\bï¿½\u0002\n\u0000\u0004ï¿½Ô´ï¿½Eï¿½~J\r\u000eï¿½PRï¿½\u0016n0gï¿½)ï¿½5G[m0_ï¿½L\u0000\u0000\u0000\u0005\u0005\u0000\u0000\u0000\u0006ï¿½u\u0002\fï¿½u\u0002\u0014\u0004\u0001ï¿½v\u0002\u000eï¿½v\u0002\u0016\u0004\u0001ï¿½y\u0002\"ï¿½y\u0002*\u0004\u0001ï¿½y\u0002\fï¿½y\u0002\u0014\u0004\u0001ï¿½z\u0002\fï¿½z\u0002\u0014\u0004\u0001ï¿½z\u00028ï¿½z\u0002@\u0004\u0001ï¿½|ï¿½Dï¿½7-ï¿½class std::locale {}\u0000\f\u0016\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0002ï¿½uï¿½aï¿½fï¿½fM\"\u0002Yï¿½\u0005ï¿½f\u0002\bï¿½f\u0002\u0014\u0004\u0001ï¿½\f\u0003\bï¿½\f\u0003\u0014\u0004\u0001ï¿½\r\u0003 ï¿½\r\u0003,\u0004\u0001ï¿½\u0017\u0003\bï¿½\u0017\u0003\u0014\u0004\u0001ï¿½\"\u0003\u0014ï¿½\"\u0003 \u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003ï¿½Bï¿½Vï¿½\u0001ï¿½\tÓï¿½qï¿½B\u0005v\u0000ï¿½KÏQDmjanon enum\u0000\u0000\u0000\u0012\u0000Guaranteed storage.\nThe first 5 iword and pword slots are reserved for internal use.\u0000\u0001ï¿½[\u0002\bï¿½[\u0002\u0010ï¿½\u0002\u0004\u0001ï¿½[\u0002\bï¿½[\u0002F\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u0018ï¿½\u000bï¿½\u001dEnamespace __gnu_cxx {}\u0000\u0014\u0014\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0002ï¿½5\u00026ï¿½5\u0002H\u0004\u0001ï¿½=\u0002(ï¿½=\u0002:\u0004\u0001ï¿½Ø¡aï¿½\fgtypedef int _Atomic_word\u0000\u0018\u0018\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0002ï¿½.\u0002\fï¿½.\u0002$\u0004\u0001ï¿½~\u0002\u001aï¿½~\u00022\u0004\u0001ï¿½\u0014]ï¿½Zï¿½typedef std::ptrdiff_t std::streamsize\u0000.8\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½]ï¿½\bï¿½rï¿½Vï¿½\u0000\u0000\u0000\u0000\nï¿½ \u0002\bï¿½ \u0002\u001c\u0004\u0001ï¿½!\u0002\bï¿½!\u0002\u001c\u0004\u0001ï¿½\u0002\bï¿½\u0002\u001c\u0004\u0001ï¿½\u0002\bï¿½\u0002\u001c\u0004\u0001ï¿½\u0002\u001cï¿½\u00020\u0004\u0001ï¿½\u0002\fï¿½\u0002 \u0004\u0001ï¿½\u0002\bï¿½\u0002\u001c\u0004\u0001ï¿½\u0002\bï¿½\u0002\u001c\u0004\u0001ï¿½\u0002\u0014ï¿½\u0002(\u0004\u0001ï¿½\u0002\fï¿½\u0002 \u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0007ï¿½)A0-ï¿½B\u0004ï¿½\u0004vP@wï¿½DFï¿½,Ü«ï¿½^ï¿½\u0016\u001eï¿½$l\u000f\u0006^ï¿½q_ï¿½iï¿½\u00107ï¿½e9]xï¿½\nÖºï¿½fEÃ°9\u0000ï¿½zï¿½eï¿½\u0002.genum std::ios_base::event {}\u0000\n(\n\u0000Callbacks;\n\n@brief  The set of events that may be passed to an event callback.\n\nerase_event is used during ~ios() and copyfmt().  imbue_event is used\nduring imbue().  copyfmt_event is used during copyfmt().\u0000\u0001ï¿½\u0001\u0012ï¿½\u0001\u001cï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0004\u0002\n\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0001ï¿½gb5ï¿½.ï¿½%\u0007\u0002ï¿½\u0010\u0002Hï¿½\u0010\u0002R\u0004\u0001ï¿½I\u0002,ï¿½I\u00026\u0004\u0001ï¿½3Aï¿½NÌ¸struct std::ios_base::_Words {}\u0000\u000e,\f\u000027.4.2.5  Members for iword/pword storage\u0000\u0001ï¿½O\u0002\u0016ï¿½O\u0002\"ï¿½\u0002\u0004\u0001ï¿½O\u0002\bï¿½T\u0002\n\u0000\u0001ï¿½)ï¿½SÝ\u001b\u0007ï¿½\u0000\u0002ï¿½;\u0006k@eï¿½o\u000b\u0000ï¿½,Ü«ï¿½^ï¿½\u0016\u001eï¿½\u0000\u0017\u0005\u0000\u0000\u0005ï¿½K\u0001\nï¿½*ï¿½oï¿½5\u0011\u0007Aï¿½#ï¿½\u0014>Cï¿½Oï¿½\nï¿½\u0011ï¿½=\u0007ï¿½S\u0002\fï¿½S\u0002\u0018\u0004\u0001ï¿½W\u0002\bï¿½W\u0002\u0014\u0004\u0001ï¿½\\\u0002\bï¿½\\\u0002\u0014\u0004\u0001ï¿½`\u0002\bï¿½`\u0002\u0014\u0004\u0001ï¿½b\u0002\bï¿½b\u0002\u0014\u0004\u0001ï¿½H\u0003\fï¿½H\u0003\u0018\u0004\u0001ï¿½]\u0003\fï¿½]\u0003\u0018\u0004\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\nï¿½\u0006ß¿ï¿½îï¿½Th7x\u0017ï¿½\"ï¿½Ðï¿½Í±ï¿½ ï¿½`\u0018,ï¿½\t%ï¿½Äï¿½0ï¿½\u000f\u0018ï¿½çxï¿½\u0001ï¿½4Ã¦ï¿½ØS]ï¿½$ï¿½4ï¿½\u00075 \u0019ï¿½~ï¿½\u000fÄ±ï¿½\u0000ï¿½_6Gï¿½D}ï¿½typedef long std::streamoff\u0000\u001a$\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0001ï¿½\u0001\"ï¿½\u00014\u0004\u0001ï¿½\u001cï¿½Ê°\u001c\u0001ï¿½struct std::ios_base::_Callback_list {}\u0000\u000e,\u001c\u000027.4.2.6  Members for callbacks\n27.4.2.6  ios_base callbacks\u0000\u0001ï¿½(\u0002\u0016ï¿½(\u00022ï¿½\u0002\u0004\u0001ï¿½(\u0002\bï¿½D\u0002\n\u0000\u0003ï¿½|ï¿½yh-\u000eï¿½\u0003tï¿½@ï¿½%zÄï¿½aï¿½\u0000\u0004ï¿½Xe<nTt>3\u0000ï¿½>yï¿½UNï¿½Th7x\u0017ï¿½\u0000\u0001ï¿½\"ï¿½Ðï¿½Í±ï¿½@\u0001\u0000\u0017\u0005\u0000\u0000\u0003ï¿½Xe<nTt>3ï¿½1Qï¿½Rï¿½zï¿½Ä1ï¿½\n\u0004ï¿½+\u0002\fï¿½+\u0002(\u0004\u0001ï¿½1\u0002\u000eï¿½1\u0002*\u0004\u0001ï¿½0\u0002\fï¿½0\u0002(\u0004\u0001ï¿½F\u0002\nï¿½F\u0002&\u0004\u0001ï¿½%^\u001d3Ç¸Äµclass std::error_code {}\u0000\f\u0016\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0004ï¿½\u0012ï¿½&\u0004\u0001ï¿½\u0016ï¿½*\u0004\u0001ï¿½\u0006\u0001Fï¿½\u0006\u0001Z\u0004\u0001ï¿½\t\u0001Bï¿½\t\u0001V\u0004\u0001ï¿½OÜ±ï¿½\u0019\u001fï¿½template<> struct std::integral_constant<bool, true> {}\u0000$.\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0000\u0000\u0000\u0001ï¿½tÌï¿½\u0004\t\u0001ï¿½kFï¿½)7ï¿½j~using std::true_type = integral_constant<bool, true>\u0000\f\u0016\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½OÜ±ï¿½\u0019\u001fï¿½\u0000\u0000\u0000\u0000\u0001ï¿½tÌ\u0004\u0001ï¿½\u0011\fBï¿½%typedef std::_Ios_Iostate std::ios_base::iostate\u00004R\u000e\u000027.4.2.1.3  Type ios_base::iostate\n\n@brief This is a bitmask type.\n\n@c @a _Ios_Iostate is implementation-defined, but it is valid to\nperform bitwise operations on these values and expect the Right\nThing to happen.  Defined objects of type iostate are:\n- badbit\n- eofbit\n- failbit\n- goodbit\u0000\u0001ï¿½\u00012ï¿½\u0001@ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001@\u0000\u0000\u0000\u0000ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\u0005\u0000\u0000\u0006ï¿½eï¿½\bï¿½×£ï¿½\u0005ï¿½\u0013ï¿½;Pï¿½+ï¿½Mï¿½$ï¿½\u0005~\u0017ï¿½gï¿½]@ï¿½P<eï¿½~\u0019Rï¿½qï¿½9\u0006ï¿½\u0001\"ï¿½\u00010\u0004\u0001ï¿½\u0001\"ï¿½\u00010\u0004\u0001ï¿½\u0001\"ï¿½\u00010\u0004\u0001ï¿½\u0001\"ï¿½\u00010\u0004\u0001ï¿½#\u0002\bï¿½#\u0002\u0016\u0004\u0001ï¿½$\u0002\bï¿½$\u0002\u0016\u0004\u0001ï¿½sï¿½?ï¿½[l=typedef std::streampos streampos\u0000\u0010\u001a\u0012\u0000\u0000\u0001ï¿½\u00016ï¿½\u0001Hï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001H\u0000\u0000\u0000\u0000ï¿½I\rï¿½4{ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½oï¿½\u0007ï¿½\u0007ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\\ï¿½=ï¿½#\u0000\u0000ï¿½]ï¿½\bï¿½rï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\u0006ï¿½\u0017ï¿½bï¿½typedef int std::ios_base::open_mode\u0000\u00186\u0012\u0000\u0000\u0001ï¿½\u0001 ï¿½\u00012ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u00012\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½8ï¿½U\u0013typedef std::_Ios_Seekdir std::ios_base::seekdir\u00004R\u000e\u000027.4.2.1.5  Type ios_base::seekdir\n\n@brief This is an enumerated type.\n\n@c @a _Ios_Seekdir is implementation-defined.  Defined values\nof type seekdir are:\n- beg\n- cur, equivalent to @c SEEK_CUR in the C standard library.\n- end, equivalent to @c SEEK_END in the C standard library.\u0000\u0001ï¿½\u00012ï¿½\u0001@ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001@\u0000\u0000\u0000\u0000ï¿½Vï¿½@0ï¿½\u0017>ï¿½\u0005\u0000\u0000\u0003ï¿½\u001f#mï¿½\u0017\u0015ï¿½Cï¿½\u0006ï¿½Jï¿½wYpSQï¿½\u0003ï¿½\u0001\"ï¿½\u00010\u0004\u0001ï¿½\u0001\"ï¿½\u00010\u0004\u0001ï¿½\u0001\"ï¿½\u00010\u0004\u0001ï¿½Vï¿½@0ï¿½\u0017>enum std::_Ios_Seekdir {}\u0000\n\u0014\u0018\u0000\u0000\u0001ï¿½\u000eï¿½&ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0000\u0000\u0000\u0000\u0000\n\u0003\u0000\u0000\u0000\u0001ï¿½\u0001\u0018ï¿½\u00010\u0004\u0001ï¿½ZÛ­?{ï¿½\u0016ï¿½typedef int std::ios_base::io_state\u0000\u00186\u0010\u0000Annex D.6 (removed in C++17)\u0000\u0001ï¿½\u0001 ï¿½\u00010ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u00010\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½&ï¿½4\u001bï¿½typedef std::streamoff streamoff\u0000\u0010\u001a\u0012\u0000\u0000\u0001ï¿½\u00016ï¿½\u0001Hï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001H\u0000\u0000\u0000\u0000ï¿½_6Gï¿½D}ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½Nlï¿½ï¿½\u001cï¿½\u0016enum std::_Ios_Iostate {}\u0000\n\u0014\u0018\u0000\u0000\u0001ï¿½\u000eï¿½&ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0000\u0000\u0000\u0000\u0000\n\u0003\u0000\u0000\rï¿½\bï¿½]\u001dNï¿½Iï¿½8ï¿½zYw[ï¿½'ï¿½'~ï¿½9ï¿½Kï¿½\u0018ï¿½\u001fJï¿½<ï¿½\u001es%ï¿½^ï¿½83ï¿½t8\u0006t?,\u0007ï¿½y~ï¿½_ï¿½1ï¿½--\u000bï¿½&ï¿½nï¿½Çªï¿½|ï¿½\nï¿½6ï¿½\u0018Pï¿½~ï¿½vï¿½s@\u001aï¿½\u0019ï¿½8ï¿½P\u0004\u0001ï¿½\u0018ï¿½0\u0004\u0001ï¿½<ï¿½T\u0004\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½8ï¿½P\u0004\u0001ï¿½\u0018ï¿½0\u0004\u0001ï¿½<ï¿½T\u0004\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½8ï¿½P\u0004\u0001ï¿½\u0018ï¿½0\u0004\u0001ï¿½<ï¿½T\u0004\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½8ï¿½P\u0004\u0001ï¿½\u0018ï¿½0\u0004\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½\u001eï¿½6\u0004\u0001ï¿½\u001aï¿½2\u0004\u0001ï¿½@ï¿½X\u0004\u0001ï¿½\u001eï¿½6\u0004\u0001ï¿½\u001aï¿½2\u0004\u0001ï¿½@ï¿½X\u0004\u0001ï¿½ ï¿½8\u0004\u0001ï¿½\u001aï¿½2\u0004\u0001ï¿½@ï¿½X\u0004\u0001ï¿½\u0001\u0018ï¿½\u00010\u0004\u0001ï¿½BFï¿½tï¿½eï¿½typedef basic_string<char> std::string\u00006@\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½>ï¿½C\u0016ï¿½Zï¿½\u0000\u0000\u0000\u0001ï¿½.ï¿½\u001eï¿½Ñ`ï¿½\u0002ï¿½\u0002\u0001(ï¿½\u0002\u00014\u0004\u0001ï¿½\u0006\u0001(ï¿½\u0006\u00014\u0004\u0001ï¿½ ï¿½\u0016ï¿½enum std::_Ios_Openmode {}\u0000\n\u0014\u001a\u0000\u0000\u0001n\u000en(ï¿½\u0002\u0004\u0001n\u0004y\n\u0000\u0000\u0000\u0000\u0000\n\u0003\u0000\u0000\rï¿½/ï¿½'ï¿½Eï¿½\u0005ï¿½Bï¿½Hï¿½\u0010?ï¿½ \u0002ï¿½WDï¿½+\rï¿½\u001bï¿½Úï¿½\u0014Æï¿½cï¿½8ï¿½Suï¿½Q>ï¿½\u0014ï¿½wï¿½=ï¿½ \b\r\u000eï¿½cï¿½\u0012ï¿½\u0017ï¿½'<\u000bN\u000eï¿½5\u0005<\u0017Gï¿½\u000eï¿½k\u0010ï¿½]aï¿½\u001aï¿½Wï¿½FHï¿½\u0007ï¿½6N}ï¿½\u0019{8{R\u0004\u0001|\u0018|2\u0004\u0001|>|X\u0004\u0001}\u0016}0\u0004\u00018R\u0004\u0001ï¿½\u0018ï¿½2\u0004\u0001ï¿½>ï¿½X\u0004\u0001ï¿½\u0016ï¿½0\u0004\u0001ï¿½8ï¿½R\u0004\u0001ï¿½\u0018ï¿½2\u0004\u0001ï¿½>ï¿½X\u0004\u0001ï¿½\u0016ï¿½0\u0004\u0001ï¿½8ï¿½R\u0004\u0001ï¿½\u0018ï¿½2\u0004\u0001ï¿½\u0016ï¿½0\u0004\u0001ï¿½\u001eï¿½8\u0004\u0001ï¿½\u001aï¿½4\u0004\u0001ï¿½Bï¿½\\\u0004\u0001ï¿½\u001eï¿½8\u0004\u0001ï¿½\u001aï¿½4\u0004\u0001ï¿½Bï¿½\\\u0004\u0001ï¿½\u001eï¿½8\u0004\u0001ï¿½\u001aï¿½4\u0004\u0001ï¿½Bï¿½\\\u0004\u0001ï¿½\u0001\u0018ï¿½\u00012\u0004\u0001ï¿½I\rï¿½4{ï¿½typedef fpos<mbstate_t> std::streampos\u00000:\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½Eï¿½\u0000\u0000\u0000\u0000\u0001ï¿½\u0001\"ï¿½\u00014\u0004\u0001ï¿½>ï¿½C\u0016ï¿½Zï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\\ï¿½=ï¿½#template<> struct std::is_error_code_enum<std::io_errc> : public std::true_type {}\u0000$.$\u0000\u0000\u0001ï¿½*ï¿½Nï¿½\u0002\u0004\u0001ï¿½\u0004Ì\u0001ï¿½oï¿½\u0007ï¿½\u0007ï¿½\u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½*ï¿½N\u0004\u0001ï¿½Fï¿½=ï¿½~\u0014dtypedef void (*std::ios_base::event_callback)(std::ios_base::event, std::ios_base &, int)\u0000\u001e<\u001c\u0000 @brief  The type of an event callback function.\n @param  __e  One of the members of the event enum.\n @param  __b  Reference to the ios_base object.\n @param  __i  The integer provided when the callback was registered.\n\n Event callbacks are user defined functions that get called during\n several ios_base and basic_ios functions, specifically imbue(),\n copyfmt(), and ~ios().\u0000\u0001ï¿½\u0010\u0002&ï¿½\u0010\u0002Bï¿½\u0002\u0004\u0001ï¿½\u0010\u0002\bï¿½\u0010\u0002ï¿½\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0003ï¿½;ï¿½Hï¿½Úï¿½>yï¿½UNï¿½Mï¿½\u0003ï¿½\u001d\u0002,ï¿½\u001d\u0002H\u0004\u0001ï¿½,\u0002 ï¿½,\u0002<\u0004\u0001ï¿½0\u0002>ï¿½0\u0002Z\u0004\u0001ï¿½kï¿½rEï¿½class std::ios_base::failure : public std::system_error {}\u0000\f*\u000e\u0000\u0000\u0001ï¿½\u0000Bï¿½\u0000Pï¿½\u0002\u0004\u0001ï¿½\u0000\bï¿½\u0011\u0001\n\u0001ï¿½\u000fï¿½_\u0016!ï¿½\u0005ï¿½yï¿½/Bï¿½Kï¿½~\u0012ï¿½Ò¼ï¿½Nï¿½8mï¿½\"ï¿½)\u001bR|ï¿½Ý\rï¿½gï¿½Hï¿½\u0000\u0000\u0000\u0005\u0005\u0000\u0000\u0000\u0004ï¿½\u0002\u0001\fï¿½\u0002\u0001\u001a\u0004\u0001ï¿½\u0006\u0001\fï¿½\u0006\u0001\u001a\u0004\u0001ï¿½\t\u0001\fï¿½\t\u0001\u001a\u0004\u0001ï¿½\r\u0001\u000eï¿½\r\u0001\u001c\u0004\u0001ï¿½R\u0018ï¿½; 'class std::error_category {}\u0000\f\u0016\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0001ï¿½\u0010ï¿½,\u0004\u0001ï¿½\u0003sï¿½l\u0014ï¿½$enum class std::io_errc : int {}\u0000\u0016 \u000e\u0000I/O error code\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½F\u0000\u0000\u0000\u0001ï¿½Gc?ï¿½i5Õº\u0001\u0000\n\u0003\u0000\u0000\u0002ï¿½\bï¿½jvV\u0003ï¿½\u0016ï¿½`Ã·ï¿½\u0004ï¿½Pï¿½^\u0004\u0001ï¿½$ï¿½2\u0004\u0001ï¿½.ï¿½<\u0004\u0001ï¿½\t\u0001^ï¿½\t\u0001l\u0004\u0001ï¿½\u0013\u0011ï¿½\u0007ï¿½enum std::_Ios_Fmtflags {}\u0000\n\u0014\u001a\u0000The following definitions of bitmask types are enums, not ints,\nas permitted (but not required) in the standard, in order to provide\nbetter type safety in iostream calls.  A side effect is that in C++98\nexpressions involving them are not compile-time constants.\u0000\u00018\u000e8(ï¿½\u0002\u0004\u00018\u0004O\n\u0000\u0000\u0000\u0000\u0000\n\u0003\u0000\u0000\rï¿½rï¿½V?$ï¿½|ï¿½Jï¿½Aï¿½MÔ\u0019\u0004ï¿½.ï¿½Éï¿½cï¿½\u0015aï¿½wsï¿½\u001af\fï¿½Djï¿½QPï¿½\u0012\u001a\u0012fï¿½{+%ï¿½f?mtï¿½Rï¿½4#ï¿½\u0002ï¿½\u0004ï¿½Bï¿½\boï¿½/9l\u0011\u0000ï¿½w8ï¿½\u001f/]\\ï¿½D-ï¿½(ï¿½Sï¿½\u0019Q8QR\u0004\u0001R\u0018R2\u0004\u0001R>RX\u0004\u0001S\u0016S0\u0004\u0001U8UR\u0004\u0001V\u0018V2\u0004\u0001V>VX\u0004\u0001W\u0016W0\u0004\u0001Y8YR\u0004\u0001Z\u0018Z2\u0004\u0001Z>ZX\u0004\u0001[\u0016[0\u0004\u0001]8]R\u0004\u0001^\u0018^2\u0004\u0001_\u0016_0\u0004\u0001a\u001ea8\u0004\u0001b\u001ab4\u0004\u0001bBb\\\u0004\u0001e\u001ee8\u0004\u0001f\u001af4\u0004\u0001fBf\\\u0004\u0001i\u001ei8\u0004\u0001j\u001aj4\u0004\u0001jBj\\\u0004\u0001ï¿½T\u0001\u0018ï¿½T\u00012\u0004\u0001ï¿½PMF\r$>class std::error_condition {}\u0000\f\u0016\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0000\u0002ï¿½\u0012ï¿½0\u0004\u0001ï¿½\u0016ï¿½4\u0004\u0001ï¿½Z\bï¿½\u0005ï¿½7ï¿½Jnamespace std {}\u0000\u0014\u0014\u0006\u0000Outline of libstdc++ namespaces.\n\nnamespace std\n{\nnamespace __debug { }\nnamespace __parallel { }\nnamespace __cxx1998 { }\n\nnamespace __detail {\nnamespace __variant { }\t\t\t\t// C++17\n}\n\nnamespace rel_ops { }\n\nnamespace tr1\n{\nnamespace placeholders { }\nnamespace regex_constants { }\nnamespace __detail { }\n}\n\nnamespace tr2 { }\n\nnamespace decimal { }\n\nnamespace chrono { }\t\t\t\t// C++11\nnamespace placeholders { }\t\t\t\t// C++11\nnamespace regex_constants { }\t\t\t// C++11\nnamespace this_thread { }\t\t\t\t// C++11\ninline namespace literals {\t\t\t\t// C++14\ninline namespace chrono_literals { }\t\t// C++14\ninline namespace complex_literals { }\t\t// C++14\ninline namespace string_literals { }\t\t// C++14\ninline namespace string_view_literals { }\t\t// C++17\n}\n}\n\nnamespace abi { }\n\nnamespace __gnu_cxx\n{\nnamespace __detail { }\n}\n\nFor full details see:\nhttp://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html\u0000\u0000\u00000ï¿½C]Gg3\u001bï¿½LP:ï¿½cï¿½\u0004ï¿½_2\u0014$Bï¿½\u0015Zï¿½\u0012ï¿½>ï¿½\u0015\u0003ï¿½`^ï¿½\"ï¿½(@y_ï¿½\u0014\u0003ï¿½|ï¿½\nï¿½Tt8ï¿½\"ï¿½\u0011ï¿½\u001cï¿½Rï¿½5ï¿½\u000659ï¿½_ï¿½/v}ï¿½bRï¿½DUYï¿½\rK\u001f\u0015ï¿½[\u001fï¿½vï¿½_Bhï¿½dï¿½{1HÅREï¿½\u0004ï¿½~ï¿½\u001dï¿½k\bï¿½\u0010ï¿½Bï¿½GLï¿½Iï¿½\u0015ï¿½yï¿½\u0012:ï¿½\u0018ï¿½+ï¿½bï¿½~ï¿½P\u001c.\u00159\nï¿½4C\u0010ï¿½Â¥ï¿½nx,ï¿½^ï¿½%ï¿½Ø©ï¿½~1ï¿½H]ï¿½L\u0016ï¿½8ï¿½Rï¿½\u0011ï¿½×¦ï¿½.ï¿½\u0004\u0002ï¿½0b\u0004\u0006ï¿½=Cï¿½\u0003\u0010`ï¿½+ï¿½vï¿½eï¿½#ï¿½H}ï¿½ï¿½y\fKWï¿½Eï¿½3ï¿½\u001fdï¿½\u0018ï¿½Iï¿½\u001f?ï¿½\u0003\u001aï¿½Bï¿½{}ï¿½)uï¿½2aï¿½qK\fï¿½\nï¿½\u0011ï¿½\u0019ï¿½_ï¿½\u000fï¿½2Bï¿½^ï¿½\tï¿½Zk|pï¿½%ï¿½s\u0005ï¿½Cï¿½\u00133/ï¿½]}ï¿½wï¿½Pï¿½\bï¿½Wï¿½4ï¿½,ï¿½rï¿½&ï¿½mï¿½!ï¿½Ë\fEï¿½[ï¿½\u0016ï¿½Å\u0007ï¿½\u0013\u0011ï¿½\u0007ï¿½ ï¿½\u0016ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½Vï¿½@0ï¿½\u0017>ï¿½\u0003sï¿½l\u0014ï¿½$ï¿½\\ï¿½=ï¿½#ï¿½\fï¿½Zbï¿½)ï¿½wï¿½Uï¿½\u0016\u0001\u0001ï¿½\u0016\u0001ï¿½\u0000p[ï¿½\u0001ï¿½oï¿½`\u000b<\\\u0001ï¿½Od\u0006\u0006\u0005ï¿½7ï¿½\u0001ï¿½D >\u001aSI7ï¿½\u0001ï¿½ \b~}m \u0001ï¿½v\u0018ï¿½[ï¿½3ï¿½\u0001ï¿½Bï¿½Ïï¿½\fï¿½\u0001ï¿½\b3ï¿½Ûï¿½Å\u0001ï¿½(ï¿½Gï¿½|Bï¿½\u0001ï¿½c#y\u001a:\u001dAf\u0001ï¿½c3<ï¿½Èï¿½\u0001ï¿½ru-ï¿½\u0003\u0001ï¿½WÎ¡hï¿½O=ï¿½\u0001ï¿½NUNï¿½Z\u0001ï¿½\u001cï¿½\u0002{2ï¿½_\u001a\u0001ï¿½\u0012Ú»jï¿½_CG\u0001ï¿½oï¿½9ï¿½+ï¿½\u0001ï¿½\u0015ï¿½:\u0005\u0016\u0003t\u0001ï¿½3ï¿½6j}ï¿½l\u0001ï¿½#ï¿½_ï¿½\u0014tï¿½f\u0001ï¿½Sï¿½&\u0002\u0004\u0001ï¿½xï¿½J2}e\u0001ï¿½;ï¿½Nï¿½\u0001ï¿½sï¿½,\u001aï¿½\u0001ï¿½!ï¿½\u0019\u0005\u0019q\u0001ï¿½kï¿½c,\u0019ï¿½\u0001ï¿½@Dï¿½=;\u0001ï¿½\n\u001d\u001acEï¿½Þ\u0001ï¿½\u000eï¿½,.\u0016ï¿½\u0001ï¿½_\u0011ï¿½'ï¿½A\u001d\u0003\u0001ï¿½S\u001cZï¿½v0Oï¿½\u0001ï¿½+\tlï¿½6ï¿½p\u0001ï¿½SKï¿½#ï¿½4ï¿½\u001e\u0001ï¿½jï¿½@ï¿½\u0001ï¿½[ï¿½\u001f*\u0001ï¿½nï¿½sï¿½8:ï¿½\u0001ï¿½fNï¿½Cï¿½\u001f^\u0001ï¿½mï¿½\\Zg=ï¿½\u0001ï¿½\u0019ï¿½_ï¿½\u0002\u0001ï¿½[6)ï¿½Sï¿½\u0001\u0000\u0003\u0000\u00010\u00140\u001a\u0001\u00010\u0000ï¿½R\u0004\u0002\u0000\u0000\u0002ï¿½\u0001\u0018ï¿½\u0001\u001e\u0004\u0001ï¿½\u0001\u0018ï¿½\u0001\u001e\u0004\u0001ï¿½\u000fï¿½_\u0016!ï¿½class std::system_error : public std::runtime_error {}\u0000\f\u0016\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0001ï¿½kï¿½rEï¿½\u0000\u0001ï¿½\u0000dï¿½\u0000|ï¿½\u0004\b\u0001ï¿½Þ£ï¿½3HQtypedef std::_Ios_Fmtflags std::ios_base::fmtflags\u00006T\u0010\u000027.4.2.1.2  Type ios_base::fmtflags\n\n@brief This is a bitmask type.\n\n@c @a _Ios_Fmtflags is implementation-defined, but it is valid to\nperform bitwise operations on these values and expect the Right\nThing to happen.  Defined objects of type fmtflags are:\n- boolalpha\n- dec\n- fixed\n- hex\n- internal\n- left\n- oct\n- right\n- scientific\n- showbase\n- showpoint\n- showpos\n- skipws\n- unitbuf\n- uppercase\n- adjustfield\n- basefield\n- floatfield\u0000\u0001ï¿½T\u00014ï¿½T\u0001Dï¿½\u0002\u0004\u0001ï¿½T\u0001\bï¿½T\u0001D\u0000\u0000\u0000\u0000ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0005\u0000\u0000\u001bï¿½>pZxx<\u001cï¿½(ï¿½\u001aï¿½ftï¿½\u0018(!gTï¿½zÆ¶ï¿½[ï¿½DwFï¿½ ï¿½_5ï¿½sVkN+ï¿½|/ï¿½\t\r\u000bï¿½?ï¿½3dï¿½\u0019ï¿½Ðï¿½l^ï¿½\"ï¿½\u0010ï¿½N\u0003ï¿½B\u0003ï¿½5Íï¿½Å¼ï¿½\u0012J=Eî¼ï¿½\u0003ï¿½\u001bï¿½pbï¿½xï¿½tT\"2ï¿½Wï¿½WNï¿½|ï¿½>ï¿½Rï¿½\u001d@Iï¿½Fï¿½SyKï¿½\u0015ï¿½\u000eï¿½@ï¿½}ï¿½]ï¿½oN\u001f\u0007\u001d$ï¿½dMï¿½\"\u0015ï¿½`\u0014ï¿½ï¿½ZÉ¤ï¿½,ï¿½8ï¿½Yï¿½nVï¿½]ï¿½RHyï¿½Wï¿½Xï¿½lï¿½\u0006de\u001fï¿½W\u0001\"ï¿½W\u00012\u0004\u0001ï¿½Z\u0001\"ï¿½Z\u00012\u0004\u0001ï¿½]\u0001\"ï¿½]\u00012\u0004\u0001ï¿½`\u0001\"ï¿½`\u00012\u0004\u0001ï¿½e\u0001\"ï¿½e\u00012\u0004\u0001ï¿½i\u0001\"ï¿½i\u00012\u0004\u0001ï¿½l\u0001\"ï¿½l\u00012\u0004\u0001ï¿½p\u0001\"ï¿½p\u00012\u0004\u0001ï¿½s\u0001\"ï¿½s\u00012\u0004\u0001ï¿½w\u0001\"ï¿½w\u00012\u0004\u0001ï¿½{\u0001\"ï¿½{\u00012\u0004\u0001ï¿½~\u0001\"ï¿½~\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\"\u0002\bï¿½\"\u0002\u0018\u0004\u0001ï¿½\u0002\bï¿½\u0002\u0018\u0004\u0001ï¿½\u0002\bï¿½\u0002\u0018\u0004\u0001ï¿½\u0002\u0014ï¿½\u0002$\u0004\u0001ï¿½\u0002\fï¿½\u0002\u001c\u0004\u0001ï¿½\u0002\bï¿½\u0002\u0018\u0004\u0001ï¿½\u0002\u0012ï¿½\u0002\"\u0004\u0001ï¿½\u0002\fï¿½\u0002\u001c\u0004\u0001ï¿½\u0002\bï¿½\u0002\u0018\u0004\u0001ï¿½\u0002\u0012ï¿½\u0002\"\u0004\u0001ï¿½\u00026ï¿½\u0002F\u0004\u0001ï¿½\u0002\fï¿½\u0002\u001c\u0004\u0001ï¿½\u0002\u0016ï¿½\u0002&\u0004\u0001ï¿½n!_ï¿½Oï¿½typedef std::_Ios_Openmode std::ios_base::openmode\u00006T\u0010\u000027.4.2.1.4  Type ios_base::openmode\n\n@brief This is a bitmask type.\n\n@c @a _Ios_Openmode is implementation-defined, but it is valid to\nperform bitwise operations on these values and expect the Right\nThing to happen.  Defined objects of type openmode are:\n- app\n- ate\n- binary\n- in\n- out\n- trunc\u0000\u0001ï¿½\u00014ï¿½\u0001Dï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001D\u0000\u0000\u0000\u0000ï¿½ ï¿½\u0016ï¿½\u0005\u0000\u0000\u0006ï¿½!!ï¿½PLï¿½3\bï¿½\u000703ï¿½;~ï¿½\u0016ï¿½(\u0002ï¿½0ï¿½,ï¿½gHï¿½VUï¿½\u000eï¿½,ï¿½dï¿½{\u0018ï¿½dï¿½6\u0006ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½\u0001\"ï¿½\u00012\u0004\u0001ï¿½ ï¿½~Bï¿½typedef int std::ios_base::seek_dir\u0000\u00186\u0010\u0000\u0000\u0001ï¿½\u0001 ï¿½\u00010ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u00010\u0000\u0000\u0000\u0000\u0000ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\fï¿½Zbï¿½class std::ios_base {}\u0000\f\u0016\u0010\u0000 @defgroup io I/O\n\n Nearly all of the I/O classes are parameterized on the type of\n characters they read and write.  (The major exception is ios_base at\n the top of the hierarchy.)  This is a change from pre-Standard\n streams, which were not templates.\n\n For ease of use and compatibility, all of the basic_* I/O-related\n classes are given typedef names for both of the builtin character\n widths (wide and narrow).  The typedefs are the same as the\n pre-Standard names, for example:\n\n @code\n    typedef basic_ifstream<char>  ifstream;\n @endcode\n\n Because properly forward-declaring these classes can be difficult, you\n should not do it yourself.  Instead, include the &lt;iosfwd&gt;\n header, which contains only declarations of all the I/O classes as\n well as the typedefs.  Trying to forward-declare the typedefs\n themselves (e.g., <code>class ostream;</code>) is not valid ISO C++.\n\n For more specific declarations, see\n https://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html#std.io.objects\n\n @{\u0000\u0001ï¿½\u0010ï¿½ ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\u0003\u0006\u0000\u001bï¿½0.ï¿½dï¿½`ï¿½@ï¿½\u001a5ï¿½\u001b\u0019ï¿½\u0007ï¿½o;ï¿½XRï¿½Nï¿½ DWï¿½\u0014ï¿½\u0019ï¿½(\u0002ï¿½lï¿½ljï¿½\"d)~Dï¿½\u001cï¿½\u0014mï¿½Q^ï¿½\u0016ï¿½vï¿½Kï¿½}Z\u001bï¿½\u001aï¿½L'ï¿½xï¿½T\u0017ï¿½Rï¿½=ï¿½\u0007ï¿½sï¿½9ï¿½+ï¿½^ï¿½Qï¿½È©ï¿½Zï¿½Æsï¿½s8ï¿½'lï¿½\u000fvï¿½\u0004ï¿½D\u0013;ï¿½+ï¿½~ï¿½9qï¿½ï¿½Cï¿½;Ú¬ï¿½Õd7ï¿½zï¿½\u001biï¿½Hï¿½kï¿½]ï¿½Aï¿½\u0014Zï¿½Nï¿½uï¿½hKï¿½=ï¿½\u001b\u0000\u000bï¿½nï¿½\u0000`Mï¿½\u0015ï¿½\u0010ï¿½kï¿½rEï¿½ï¿½Þ£ï¿½3HQï¿½\u0011\fBï¿½%ï¿½n!_ï¿½Oï¿½8ï¿½U\u0013ï¿½ZÛ­?{ï¿½\u0016ï¿½\u0006ï¿½\u0017ï¿½bï¿½ ï¿½~Bï¿½ï¿½sï¿½?ï¿½[l=ï¿½&ï¿½4\u001bï¿½zï¿½eï¿½\u0002.gï¿½Fï¿½=ï¿½~\u0014dï¿½\u001cï¿½Ê°\u001c\u0001ï¿½3Aï¿½NÌ¸ï¿½KÏQDmjï¿½`ï¿½h\u0017ï¿½\u001aï¿½\u000bï¿½)A0-ï¿½B\u0004ï¿½\u0004vP@wï¿½DFï¿½\u0000\u0001ï¿½SyKï¿½\u0015ï¿½\u0001ï¿½gï¿½]@ï¿½P<eï¿½\u0001ï¿½~\u0019Rï¿½qï¿½9ï¿½\u0000\u0002ï¿½zï¿½Ä1ï¿½\nï¿½\u0002ï¿½K\u0001\nï¿½\u0000\u0003ï¿½*ï¿½oï¿½\u0000\u0004ï¿½\u000f\u0018ï¿½çxï¿½\u0000\fï¿½5\u0011\u0007Aï¿½#ï¿½\fï¿½uï¿½aï¿½\u0000\r\u0000\u0005\u0003\u0000\u0000\u0019ï¿½b\u0014ï¿½nï¿½C\u000eï¿½\u0016xï¿½)Æ®ï¿½\"zï¿½\u0006ï¿½pï¿½iÏ¨=qï¿½\u001cï¿½Y^X\fï¿½iW(;ï¿½\u0014ï¿½\u0000ï¿½iKï¿½\u000eï¿½A3n@Z*X\\ï¿½\u0005xï¿½\u0015\u0001ï¿½h ï¿½gm\u0017ï¿½W]ï¿½TB(\u0018ï¿½]ï¿½Í¶S\u0015ï¿½0!ï¿½\u001eG4,@ï¿½11ï¿½<\u001fï¿½Hï¿½vï¿½5\u0014@ï¿½\u0003ï¿½+Mwï¿½?Åï¿½\u0014\u0014ï¿½\u0000ï¿½Fï¿½0ï¿½^ï¿½aï¿½\"\u0010ï¿½Cï¿½1\rï¿½<ï¿½\n)ï¿½dï¿½Iï¿½|ï¿½(ï¿½Kï¿½\u0013pNï¿½\u0018fï¿½+\u001dJnï¿½jï¿½Dï¿½\u0015ï¿½vd\f^ï¿½\u0010\u0002^ï¿½\u0010\u0002n\u0004\u0001ï¿½,\u0002\fï¿½,\u0002\u001c\u0004\u0001ï¿½0\u0002*ï¿½0\u0002:\u0004\u0001ï¿½s\u0002&ï¿½s\u00026\u0004\u0001ï¿½k\u0003\u001aï¿½k\u0003*\u0004\u0001ï¿½n\u0003\bï¿½n\u0003\u0018\u0004\u0001ï¿½z\u0003&ï¿½z\u00036\u0004\u0001ï¿½z\u0003\bï¿½z\u0003\u0018\u0004\u0001ï¿½|\u0003\bï¿½|\u0003\u0018\u0004\u0001ï¿½}\u0003(ï¿½}\u00038\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003(\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003(\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003(\u0004\u0001ï¿½\u0003 ï¿½\u00030\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u001cï¿½\u0003,\u0004\u0001ï¿½\u0003$ï¿½\u00034\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003&\u0004\u0001ï¿½\u0003 ï¿½\u00030\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u001aï¿½\u0003*\u0004\u0001ï¿½\u0003$ï¿½\u00034\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003(\u0004\u0001ï¿½\u0003 ï¿½\u00030\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u001cï¿½\u0003,\u0004\u0001ï¿½\u0003$ï¿½\u00034\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0014ï¿½\u0003$\u0004\u0001ï¿½\u0003 ï¿½\u00030\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003(\u0004\u0001ï¿½\u0003$ï¿½\u00034\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003 ï¿½\u00030\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003&\u0004\u0001ï¿½\u0003$ï¿½\u00034\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003(\u0004\u0001ï¿½\u0003 ï¿½\u00030\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u001cï¿½\u0003,\u0004\u0001ï¿½\u0003$ï¿½\u00034\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0014ï¿½\u0003$\u0004\u0001ï¿½\u0003\"ï¿½\u00032\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003(\u0004\u0001ï¿½\u0003&ï¿½\u00036\u0004\u0001ï¿½\u0003\u0012ï¿½\u0003\"\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003&\u0004\u0001ï¿½\u0003\"ï¿½\u00032\u0004\u0001ï¿½\u0003Jï¿½\u0003Z\u0004\u0001ï¿½\u0003\u0004\u0012ï¿½\u0003\u0004\"\u0004\u0001ï¿½\u0004\u0004\u000eï¿½\u0004\u0004\u001e\u0004\u0001ï¿½\u0006\u0004 ï¿½\u0006\u00040\u0004\u0001ï¿½\u0006\u0004@ï¿½\u0006\u0004P\u0004\u0001ï¿½\u000b\u0004\u0012ï¿½\u000b\u0004\"\u0004\u0001ï¿½\f\u0004\u0010ï¿½\f\u0004 \u0004\u0001ï¿½\u000e\u0004 ï¿½\u000e\u00040\u0004\u0001ï¿½\u000e\u0004Bï¿½\u000e\u0004R\u0004\u0001ï¿½\u0014\u0004\u0012ï¿½\u0014\u0004\"\u0004\u0001ï¿½\u0015\u0004\fï¿½\u0015\u0004\u001c\u0004\u0001ï¿½\u0017\u0004 ï¿½\u0017\u00040\u0004\u0001ï¿½\u0017\u0004>ï¿½\u0017\u0004N\u0004\u0001ï¿½\u001c\u0004\u0012ï¿½\u001c\u0004\"\u0004\u0001ï¿½\u001d\u0004\fï¿½\u001d\u0004\u001c\u0004\u0001ï¿½\u001f\u0004 ï¿½\u001f\u00040\u0004\u0001ï¿½\u001f\u0004>ï¿½\u001f\u0004N\u0004\u0001ï¿½$\u0004\u0012ï¿½$\u0004\"\u0004\u0001ï¿½%\u0004\fï¿½%\u0004\u001c\u0004\u0001ï¿½'\u0004 ï¿½'\u00040\u0004\u0001ï¿½'\u0004>ï¿½'\u0004N\u0004\u0001ï¿½-\u0004\u0012ï¿½-\u0004\"\u0004\u0001ï¿½.\u0004\u0010ï¿½.\u0004 \u0004\u0001ï¿½0\u0004 ï¿½0\u00040\u0004\u0001ï¿½0\u0004Bï¿½0\u0004R\u0004\u0001ï¿½5\u0004\u0012ï¿½5\u0004\"\u0004\u0001ï¿½6\u0004\u001aï¿½6\u0004*\u0004\u0001ï¿½8\u0004 ï¿½8\u00040\u0004\u0001ï¿½8\u0004Lï¿½8\u0004\\\u0004\u0001ï¿½A\u0004\u0012ï¿½A\u0004\"\u0004\u0001ï¿½B\u0004\u0016ï¿½B\u0004&\u0004\u0001ï¿½D\u0004 ï¿½D\u00040\u0004\u0001ï¿½D\u0004Dï¿½D\u0004T\u0004\u0001ï¿½D\u0004pï¿½D\u0004ï¿½\u0004\u0001ï¿½I\u0004\u0012ï¿½I\u0004\"\u0004\u0001ï¿½J\u0004\u001eï¿½J\u0004.\u0004\u0001ï¿½L\u0004$ï¿½L\u00044\u0004\u0001ï¿½Eï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ï¿½\n)ï¿½dï¿½Iï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½%\u0004 ï¿½%\u0004,ï¿½\u0002\u0004\u0001ï¿½%\u0004\fï¿½%\u0004,ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½'\u0004\bï¿½'\u0004\u0014\u0004\u0001ï¿½(\u0004\u0016ï¿½(\u0004\"\u0004\u0001ï¿½aï¿½\"\u0010ï¿½Cstd::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0015\u0004 ï¿½\u0015\u0004,ï¿½\u0002\u0004\u0001ï¿½\u0015\u0004\fï¿½\u0015\u0004,ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0017\u0004\bï¿½\u0017\u0004\u0014\u0004\u0001ï¿½\u0018\u0004\u0016ï¿½\u0018\u0004\"\u0004\u0001ï¿½Fï¿½0ï¿½^ï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\f\u0004$ï¿½\f\u00040ï¿½\u0002\u0004\u0001ï¿½\f\u0004\u0010ï¿½\f\u00040ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u000e\u0004\bï¿½\u000e\u0004\u0014\u0004\u0001ï¿½\u000f\u0004\u0016ï¿½\u000f\u0004\"\u0004\u0001ï¿½?Åï¿½\u0014\u0014ï¿½\u0000std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0004\u0004\"ï¿½\u0004\u0004.ï¿½\u0002\u0004\u0001ï¿½\u0004\u0004\u000eï¿½\u0004\u0004.ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0006\u0004\bï¿½\u0006\u0004\u0014\u0004\u0001ï¿½\u0007\u0004\u0016ï¿½\u0007\u0004\"\u0004\u0001ï¿½<\u001fï¿½Hï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003(ï¿½\u00034ï¿½\u0002\u0004\u0001ï¿½\u0003\u0014ï¿½\u00034ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\nï¿½\u0003\u0016\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003$\u0004\u0001ï¿½\u001eG4,@ï¿½11std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u00030ï¿½\u0003<ï¿½\u0002\u0004\u0001ï¿½\u0003\u001cï¿½\u0003<ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½Í¶S\u0015ï¿½0!ï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003,ï¿½\u00038ï¿½\u0002\u0004\u0001ï¿½\u0003\u0018ï¿½\u00038ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½TB(\u0018ï¿½]ï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003*ï¿½\u00036ï¿½\u0002\u0004\u0001ï¿½\u0003\u0016ï¿½\u00036ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½gm\u0017ï¿½W]ï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003&ï¿½\u00032ï¿½\u0002\u0004\u0001ï¿½\u0003\u0012ï¿½\u00032ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½iW(;ï¿½\u0014ï¿½\u0000std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003,ï¿½\u00038ï¿½\u0002\u0004\u0001ï¿½\u0003\u0018ï¿½\u00038ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½\u001cï¿½Y^X\fstd::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003.ï¿½\u0003:ï¿½\u0002\u0004\u0001ï¿½\u0003\u001aï¿½\u0003:ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½\"zï¿½\u0006ï¿½pï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u00030ï¿½\u0003<ï¿½\u0002\u0004\u0001ï¿½\u0003\u001cï¿½\u0003<ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½~ï¿½\u000fÄ±ï¿½int __ix\u0000\b\b\b\u0000\u0000\u0001ï¿½[\u0003\u001cï¿½[\u0003$ï¿½\u0002\u0004\u0001ï¿½[\u0003\u0014ï¿½[\u0003$ï¿½\u0006\u0000\u0000\u0003ï¿½]\u0003Dï¿½]\u0003L\f\u0001ï¿½^\u0003\u001aï¿½^\u0003\"\f\u0001ï¿½^\u0003Fï¿½^\u0003N\f\u0001ï¿½\u0014>Cstd::ios_base::_Words &__word\u0000..\fstd::ios_base::_Words &__word = ((unsigned)__ix < (unsigned)_M_word_size)\n\t\t\t? _M_word[__ix] : _M_grow_words(__ix, true)\u0000\u0000\u0001ï¿½H\u0003\u001cï¿½H\u0003(\u0002\u0001ï¿½H\u0003\fï¿½I\u0003\\ï¿½3Aï¿½NÌ¸\r\u0006\u0000\u0000\u0001ï¿½J\u0003\u001aï¿½J\u0003&\u0004\u0001ï¿½4ï¿½\u00075 \u0019ï¿½int __ix\u0000\b\b\b\u0000\u0000\u0001ï¿½F\u0003\u001cï¿½F\u0003$ï¿½\u0002\u0004\u0001ï¿½F\u0003\u0014ï¿½F\u0003$ï¿½\u0006\u0000\u0000\u0003ï¿½H\u0003Dï¿½H\u0003L\f\u0001ï¿½I\u0003\u001aï¿½I\u0003\"\f\u0001ï¿½I\u0003Fï¿½I\u0003N\f\u0001ï¿½fï¿½fM\"\u0002Yï¿½const std::locale &__loc\u0000&&\n\u0000\u0000\u0001ï¿½\r\u00030ï¿½\r\u0003:ï¿½\u0002\u0004\u0001ï¿½\r\u0003\u0014ï¿½\r\u0003:ï¿½|ï¿½Dï¿½7-ï¿½\u0006\u0000\u0000\u0000ï¿½B\u0005vbool __sync\u0000\n\n\fbool __sync = true\u0000\u0000\u0001ï¿½\u0001\u00032ï¿½\u0001\u0003>ï¿½\u0002\u0004\u0001ï¿½\u0001\u0003(ï¿½\u0001\u0003Lï¿½\u0000\u0000\u0000ï¿½fEÃ°9std::streamsize __old\u0000  \nstd::streamsize __old = _M_width\u0000\u0000\u0001ï¿½\u0002\"ï¿½\u0002,\u0002\u0001ï¿½\u0002\fï¿½\u0002Bï¿½\r\u0006\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002$\f\u0001ï¿½e9]xï¿½\nÖºstd::streamsize __wide\u0000  \f\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00026ï¿½\u0002\u0004\u0001ï¿½\u0002\u0014ï¿½\u00026ï¿½\u0006\u0000\u0000\u0001ï¿½\u0002\"ï¿½\u0002.\f\u0001ï¿½iï¿½\u00107std::streamsize __old\u0000  \nstd::streamsize __old = _M_precision\u0000\u0000\u0001ï¿½\u0002\"ï¿½\u0002,\u0002\u0001ï¿½\u0002\fï¿½\u0002Jï¿½\r\u0006\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002$\f\u0001ï¿½$l\u000f\u0006^ï¿½q_std::streamsize __prec\u0000  \f\u0000\u0000\u0001ï¿½\u00022ï¿½\u0002>ï¿½\u0002\u0004\u0001ï¿½\u0002\u001cï¿½\u0002>ï¿½\u0006\u0000\u0000\u0001ï¿½\u0002*ï¿½\u00026\f\u0001ï¿½lï¿½\u0006destd::ios_base::fmtflags __mask\u000000\f\u0000\u0000\u0001ï¿½\u0002(ï¿½\u00024ï¿½\u0002\u0004\u0001ï¿½\u0002\u0016ï¿½\u00024ï¿½Þ£ï¿½3HQï¿½\u0006\u0000\u0000\u0001ï¿½\u0002&ï¿½\u00022\f\u0001ï¿½,ï¿½8std::ios_base::fmtflags __fmtfl\u000000\u000e\u0000\u0000\u0001ï¿½\u0002$ï¿½\u00022ï¿½\u0002\u0004\u0001ï¿½\u0002\u0012ï¿½\u00022ï¿½Þ£ï¿½3HQï¿½\u0006\u0000\u0000\u0001ï¿½\u0002&ï¿½\u00024ï¿½\u0001ï¿½RHyï¿½Wï¿½Xstd::ios_base::fmtflags __old\u000000\nstd::ios_base::fmtflags __old = _M_flags\u0000\u0000\u0001ï¿½\u0002\u001eï¿½\u0002(\u0002\u0001ï¿½\u0002\fï¿½\u0002>ï¿½Þ£ï¿½3HQ\r\u0006\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002$\f\u0001ï¿½`\u0014ï¿½ï¿½ZÉ¤std::ios_base::fmtflags __old\u000000\nstd::ios_base::fmtflags __old = _M_flags\u0000\u0000\u0001ï¿½\u0002\u001eï¿½\u0002(\u0002\u0001ï¿½\u0002\fï¿½\u0002>ï¿½Þ£ï¿½3HQ\r\u0006\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002$\f\u0001ï¿½\tÓï¿½qï¿½static bool std::ios_base::Init::_S_synced_with_stdio\u0000\u0018B(\u0000\u0000\u0000ï¿½\b\u0005\u0002\u0001ï¿½\u0002&ï¿½\u0002Nï¿½\u0001\u0004\u0001ï¿½\u0002\fï¿½\u0002N\u0000ï¿½ØS]ï¿½$ï¿½static _Atomic_word std::ios_base::Init::_S_refcount\u0000(R\u0016\u0000\u0000\u0000ï¿½\b\u0005\u0002\u0001ï¿½~\u00024ï¿½~\u0002Jï¿½\u0001\u0004\u0001ï¿½~\u0002\fï¿½~\u0002J\u0000ï¿½uï¿½aï¿½std::locale std::ios_base::_M_ios_locale\u0000\u00186\u001a\u0000Members for locale and locale caching.\u0000\u0001ï¿½f\u0002\u0018ï¿½f\u00022ï¿½\u0002\u0004\u0001ï¿½f\u0002\bï¿½f\u00022ï¿½|ï¿½Dï¿½7-ï¿½\b\u0005\u0000\u0000\u0002ï¿½\u0019\u0003\u001aï¿½\u0019\u00034\u0004\u0001ï¿½$\u0003\u001aï¿½$\u00034\u0004\u0001ï¿½\u0001ï¿½4Ã¦ï¿½int __index\u0000\b\b\u000e\u0000\u0000\u0001ï¿½c\u0002,ï¿½c\u0002:ï¿½\u0002\u0004\u0001ï¿½c\u0002$ï¿½c\u0002:ï¿½\u0006\u0000\u0000\u0000ï¿½5\u0011\u0007Aï¿½#ï¿½std::ios_base::_Words *std::ios_base::_M_word\u0000.L\u000e\u0000\u0000\u0001ï¿½`\u0002\u001aï¿½`\u0002(ï¿½\u0002\u0004\u0001ï¿½`\u0002\bï¿½`\u0002(ï¿½3Aï¿½NÌ¸\b\u0005\u0000\u0000\u0002ï¿½I\u0003\nï¿½I\u0003\u0018\f\u0001ï¿½^\u0003\nï¿½^\u0003\u0018\f\u0001ï¿½*ï¿½oï¿½std::ios_base::_Words std::ios_base::_M_local_word[8]\u0000,J\u001a\u0000\u0000\u0001ï¿½\\\u0002\u0018ï¿½\\\u00022ï¿½\u0002\u0004\u0001ï¿½\\\u0002\bï¿½\\\u0002Zï¿½3Aï¿½NÌ¸\b\u0005\u0000\u0000\u0000ï¿½a\u001547ï¿½pMstd::ios_base::_S_local_word_size = 8\u0000\u0000\u001e$\u0000\u0000\u0001ï¿½[\u0002\u0016ï¿½[\u0002:ï¿½\u0002\u0004\u0001ï¿½[\u0002\u0016ï¿½[\u0002Bï¿½KÏQDmj\u0016\u0005\u0000\u0000\u0001ï¿½\\\u00024ï¿½\\\u0002X\u0004\u0001ï¿½K\u0001\nï¿½std::ios_base::_Words std::ios_base::_M_word_zero\u0000,J\u0018\u0000Only for failed iword/pword calls.\u0000\u0001ï¿½W\u0002\u0018ï¿½W\u00020ï¿½\u0002\u0004\u0001ï¿½W\u0002\bï¿½W\u00020ï¿½3Aï¿½NÌ¸\b\u0005\u0000\u0000\u0000ï¿½;\u0006k@eï¿½o\u000bvoid *std::ios_base::_Words::_M_pword\u0000\f:\u0010\u0000\u0000\u0001ï¿½Q\u0002\u0018ï¿½Q\u0002(ï¿½\u0002\u0004\u0001ï¿½Q\u0002\fï¿½Q\u0002(\u0000\b\u0017\u0000\u0000\u0002ï¿½S\u0002\"ï¿½S\u00022\u0014\u0001ï¿½_\u0003(ï¿½_\u00038\u0004\u0001ï¿½gb5ï¿½.ï¿½%\u0007std::ios_base::event __ev\u0000**\b\u0000\u0000\u0001ï¿½I\u00028ï¿½I\u0002@ï¿½\u0002\u0004\u0001ï¿½I\u0002,ï¿½I\u0002@ï¿½zï¿½eï¿½\u0002.gï¿½\u0006\u0000\u0000\u0000ï¿½zï¿½Ä1ï¿½\nstd::ios_base::_Callback_list *std::ios_base::_M_callbacks\u0000>\\\u0018\u0000\u0000\u0001ï¿½F\u0002*ï¿½F\u0002Bï¿½\u0002\u0004\u0001ï¿½F\u0002\nï¿½F\u0002Bï¿½\u001cï¿½Ê°\u001c\u0001ï¿½\b\u0005\u0000\u0000\u0000ï¿½1Qï¿½Rï¿½std::ios_base::_Callback_list *__cb\u0000>>\b\u0000\u0000\u0001ï¿½1\u0002.ï¿½1\u00026ï¿½\u0002\u0004\u0001ï¿½1\u0002\u000eï¿½1\u00026ï¿½\u001cï¿½Ê°\u001c\u0001ï¿½\t\u0000\u0000\u0001ï¿½2\u0002 ï¿½2\u0002(\f\u0001ï¿½ ï¿½`\u0018,ï¿½int __index\u0000\b\b\u000e\u0000\u0000\u0001ï¿½0\u0002pï¿½0\u0002~ï¿½\u0002\u0004\u0001ï¿½0\u0002hï¿½0\u0002~ï¿½\t\u0000\u0000\u0001ï¿½2\u0002Zï¿½2\u0002h\f\u0001ï¿½Mï¿½ios_base::event_callback __fn\u000022\b\u0000\u0000\u0001ï¿½0\u0002\\ï¿½0\u0002dï¿½\u0002\u0004\u0001ï¿½0\u0002*ï¿½0\u0002dï¿½Fï¿½=ï¿½~\u0014dï¿½\t\u0000\u0000\u0001ï¿½2\u0002:ï¿½2\u0002B\f\u0001ï¿½>yï¿½UNios_base::event_callback std::ios_base::_Callback_list::_M_fn\u00002p\n\u0000\u0000\u0001ï¿½,\u0002>ï¿½,\u0002Hï¿½\u0002\u0004\u0001ï¿½,\u0002\fï¿½,\u0002Hï¿½Fï¿½=ï¿½~\u0014d\b\u0017\u0000\u0000\u0001ï¿½2\u0002.ï¿½2\u00028\u0014\u0001ï¿½Xe<nTt>3std::ios_base::_Callback_list *std::ios_base::_Callback_list::_M_next\u0000>|\u000e\u0000Data Members\u0000\u0001ï¿½+\u0002.ï¿½+\u0002<ï¿½\u0002\u0004\u0001ï¿½+\u0002\fï¿½+\u0002<ï¿½\u001cï¿½Ê°\u001c\u0001ï¿½\b\u0017\u0000\u0000\u0001ï¿½2\u0002\u0010ï¿½2\u0002\u001e\u0014\u0001ï¿½~\u0019Rï¿½qï¿½9std::ios_base::iostate std::ios_base::_M_streambuf_state\u0000.L$\u0000\u0000\u0001ï¿½$\u0002\u001aï¿½$\u0002>ï¿½\u0002\u0004\u0001ï¿½$\u0002\bï¿½$\u0002>ï¿½\u0011\fBï¿½%\b\u0005\u0000\u0000\u0000ï¿½gï¿½]@ï¿½P<estd::ios_base::iostate std::ios_base::_M_exception\u0000.L\u0018\u0000\u0000\u0001ï¿½#\u0002\u001aï¿½#\u00022ï¿½\u0002\u0004\u0001ï¿½#\u0002\bï¿½#\u00022ï¿½\u0011\fBï¿½%\b\u0005\u0000\u0000\u0000ï¿½;ï¿½Hï¿½Úï¿½std::ios_base::event_callback __fn\u0000<<\b\u0000\u0000\u0001ï¿½\u001d\u0002Jï¿½\u001d\u0002Rï¿½\u0002\u0004\u0001ï¿½\u001d\u0002,ï¿½\u001d\u0002Rï¿½Fï¿½=ï¿½~\u0014dï¿½\u0006\u0000\u0000\u0000ï¿½î§ï¿½\u0002bï¿½std::ios_base::copyfmt_event\u0000\u0000\u001e\u001astd::ios_base::copyfmt_event = 2\u0000\u0000\u0001ï¿½\u0003\u0002\fï¿½\u0003\u0002&ï¿½\u0002\u0004\u0001ï¿½\u0003\u0002\fï¿½\u0003\u0002&ï¿½zï¿½eï¿½\u0002.g\u0016\u0005\u0000\u0000\u0000ï¿½1ï¿½\u001fNHï¿½'ï¿½std::ios_base::imbue_event\u0000\u0000\u001e\u0016std::ios_base::imbue_event = 1\u0000\u0000\u0001ï¿½\u0002\u0002\fï¿½\u0002\u0002\"ï¿½\u0002\u0004\u0001ï¿½\u0002\u0002\fï¿½\u0002\u0002\"ï¿½zï¿½eï¿½\u0002.g\u0016\u0005\u0000\u0000\u0000ï¿½0ï¿½lï¿½gistd::ios_base::erase_event\u0000\u0000\u001e\u0016std::ios_base::erase_event = 0\u0000\u0000\u0001ï¿½\u0001\u0002\fï¿½\u0001\u0002\"ï¿½\u0002\u0004\u0001ï¿½\u0001\u0002\fï¿½\u0001\u0002\"ï¿½zï¿½eï¿½\u0002.g\u0016\u0005\u0000\u0000\u0000ï¿½wYpSQï¿½static const std::ios_base::seekdir std::ios_base::end\u0000Hf\u0006static const std::ios_base::seekdir std::ios_base::end = _S_end\u0000Request a seek relative to the current end of the sequence.\u0000\u0000ï¿½8ï¿½U\u0013\b\u0005\u0002\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001L\u0000ï¿½\u0006ï¿½Jstatic const std::ios_base::seekdir std::ios_base::cur\u0000Hf\u0006static const std::ios_base::seekdir std::ios_base::cur = _S_cur\u0000Request a seek relative to the current position within the sequence.\u0000\u0000ï¿½8ï¿½U\u0013\b\u0005\u0002\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001L\u0000ï¿½\u0005ï¿½Bï¿½Hï¿½\u0010?std::_Ios_Openmode __b\u0000&&\u0006\u0000\u0000\u0001|Z|`ï¿½\u0002\u0004\u0001|>|`ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001}ï¿½}ï¿½\f\u0001ï¿½\n\u001d\u001acEï¿½Þstd::_S_ios_openmode_max = __INT_MAX__\u0000\u0000\n&\u0000\u0000\u0001w\fw2ï¿½\u0002\u0004\u0001w\fwNï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0000ï¿½!ï¿½\u0019\u0005\u0019qstd::_S_out = 1L << 4\u0000\u0000\n\f\u0000\u0000\u0001t\ft\u0018ï¿½\u0002\u0004\u0001t\ft0ï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Bï¿½\u0001N\u0004\u0001ï¿½\u0001ï¿½'sï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u001eï¿½L@\u0001ï¿½Dï¿½\u0015ï¿½vd\fstd::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½J\u00042ï¿½J\u0004>ï¿½\u0002\u0004\u0001ï¿½J\u0004\u001eï¿½J\u0004>ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½L\u0004\bï¿½L\u0004\u0014\u0004\u0001ï¿½M\u0004\u0016ï¿½M\u0004\"\u0004\u0001ï¿½\u000bkï¿½}ï¿½\u001bï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005ï¿½\u0001\fï¿½\u0001B@\u0001ï¿½\u0001\fï¿½\u0001B@\u0001ï¿½\u0001\fï¿½\u0001B@\u0001ï¿½\u0001\fï¿½\u0001B@\u0001ï¿½\u0001\fï¿½\u0001B@\u0001ï¿½;ï¿½Nï¿½std::_S_bin = 1L << 2\u0000\u0000\n\f\u0000\u0000\u0001r\fr\u0018ï¿½\u0002\u0004\u0001r\fr0ï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Fï¿½\u0001R\u0004\u0001ï¿½y~ï¿½_ï¿½1std::_Ios_Iostate &__a\u0000&&\u0006\u0000\u0000\u0001ï¿½6ï¿½<ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½<ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0002ï¿½\u0016ï¿½\u001c\u0014\u0001ï¿½\"ï¿½(\f\u0001ï¿½Oï¿½\nï¿½\u0011ï¿½=std::ios_base::_Words &__word\u0000..\fstd::ios_base::_Words &__word = ((unsigned)__ix < (unsigned)_M_word_size)\n\t\t\t? _M_word[__ix] : _M_grow_words(__ix, false)\u0000\u0000\u0001ï¿½]\u0003\u001cï¿½]\u0003(\u0002\u0001ï¿½]\u0003\fï¿½^\u0003^ï¿½3Aï¿½NÌ¸\r\u0006\u0000\u0000\u0001ï¿½_\u0003\u001aï¿½_\u0003&\u0004\u0001ï¿½Sï¿½&\u0002\u0004std::_S_app = 1L << 0\u0000\u0000\n\f\u0000\u0000\u0001p\fp\u0018ï¿½\u0002\u0004\u0001p\fp0ï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Bï¿½\u0001N\u0004\u0001ï¿½D >\u001aSI7ï¿½std::_S_internal = 1L << 4\u0000\u0000\n\u0016\u0000\u0000\u0001>\f>\"ï¿½\u0002\u0004\u0001>\f>8ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0002IZIp\u0004\u0001ï¿½e\u0001Pï¿½e\u0001f\u0004\u0001ï¿½\boï¿½/9l\u0011\u0000std::_Ios_Fmtflags __b\u0000&&\u0006\u0000\u0000\u0001f^fdï¿½\u0002\u0004\u0001fBfdï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001g.g4\f\u0001ï¿½[ï¿½\u001f*std::_S_ios_iostate_max = __INT_MAX__\u0000\u0000\n$\u0000\u0000\u0001ï¿½\fï¿½0ï¿½\u0002\u0004\u0001ï¿½\fï¿½Lï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0016\u0003\u0000\u0000\u0000ï¿½Iï¿½8ï¿½zYw[std::_Ios_Iostate __b\u0000$$\u0006\u0000\u0000\u0001ï¿½Vï¿½\\ï¿½\u0002\u0004\u0001ï¿½<ï¿½\\ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½\f\u0001ï¿½Rï¿½4#ï¿½std::_Ios_Fmtflags __b\u0000&&\u0006\u0000\u0000\u0001b^bdï¿½\u0002\u0004\u0001bBbdï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001c.c4\f\u0001ï¿½{+%ï¿½f?mtstd::_Ios_Fmtflags &__a\u0000((\u0006\u0000\u0000\u0001b8b>ï¿½\u0002\u0004\u0001b\u001ab>ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0002c\u0016c\u001c\u0014\u0001c\"c(\f\u0001ï¿½{\u0018ï¿½dï¿½6static const std::ios_base::openmode std::ios_base::trunc\u0000Jh\nstatic const std::ios_base::openmode std::ios_base::trunc = _S_trunc\u0000Truncate an existing stream when opening.  Default for @c ofstream.\u0000\u0000ï¿½n!_ï¿½Oï¿½\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001>ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001T\u0000ï¿½kï¿½c,\u0019ï¿½std::_S_trunc = 1L << 5\u0000\u0000\n\u0010\u0000\u0000\u0001u\fu\u001cï¿½\u0002\u0004\u0001u\fu4ï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Dï¿½\u0001T\u0004\u0001ï¿½Bï¿½Vï¿½\u0001ï¿½bool __iword\u0000\n\n\u000e\u0000\u0000\u0001ï¿½c\u0002Hï¿½c\u0002Vï¿½\u0002\u0004\u0001ï¿½c\u0002>ï¿½c\u0002Vï¿½\u0006\u0000\u0000\u0000ï¿½,Ü«ï¿½^ï¿½\u0016\u001elong std::ios_base::_Words::_M_iword\u0000\n8\u0010\u0000\u0000\u0001ï¿½R\u0002\u0016ï¿½R\u0002&ï¿½\u0002\u0004\u0001ï¿½R\u0002\fï¿½R\u0002&ï¿½\b\u0017\u0000\u0000\u0002ï¿½S\u0002<ï¿½S\u0002L\u0014\u0001ï¿½J\u0003(ï¿½J\u00038\u0004\u0001ï¿½\u001af\fï¿½Djï¿½std::_Ios_Fmtflags __b\u0000&&\u0006\u0000\u0000\u0001ZZZ`ï¿½\u0002\u0004\u0001Z>Z`ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001[ï¿½[ï¿½\f\u0001ï¿½\u0012Ú»jï¿½_CGstd::_S_basefield = _S_dec | _S_oct | _S_hex\u0000\u0000\n\u0018\u0000\u0000\u0001J\fJ$ï¿½\u0002\u0004\u0001J\fJ\\ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Pï¿½\u0001h\u0004\u0001ï¿½\u0015aï¿½wsï¿½std::_Ios_Fmtflags __a\u0000&&\u0006\u0000\u0000\u0001Z4Z:ï¿½\u0002\u0004\u0001Z\u0018Z:ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001[T[Z\f\u0001ï¿½sï¿½,\u001aï¿½std::_S_in = 1L << 3\u0000\u0000\n\n\u0000\u0000\u0001s\fs\u0016ï¿½\u0002\u0004\u0001s\fs.ï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001@ï¿½\u0001J\u0004\u0001ï¿½\u0016xï¿½)Æ®std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003,ï¿½\u00038ï¿½\u0002\u0004\u0001ï¿½\u0003\u0018ï¿½\u00038ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½Éï¿½cï¿½std::_Ios_Fmtflags __b\u0000&&\u0006\u0000\u0000\u0001VZV`ï¿½\u0002\u0004\u0001V>V`ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001Wï¿½Wï¿½\f\u0001ï¿½Suï¿½Q>ï¿½\u0014std::_Ios_Openmode __b\u0000&&\u0006\u0000\u0000\u0001ï¿½Zï¿½`ï¿½\u0002\u0004\u0001ï¿½>ï¿½`ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½\f\u0001ï¿½\u0002ï¿½\u0004ï¿½Bstd::_Ios_Fmtflags &__a\u0000((\u0006\u0000\u0000\u0001f8f>ï¿½\u0002\u0004\u0001f\u001af>ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0002g\u0016g\u001c\u0014\u0001g\"g(ï¿½\u0001ï¿½MÔ\u0019\u0004ï¿½.std::_Ios_Fmtflags __a\u0000&&\u0006\u0000\u0000\u0001V4V:ï¿½\u0002\u0004\u0001V\u0018V:ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001WTWZ\f\u0001ï¿½w8ï¿½\u001f/]\\ï¿½std::_Ios_Fmtflags &__a\u0000((\u0006\u0000\u0000\u0001j8j>ï¿½\u0002\u0004\u0001j\u001aj>ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0002k\u0016k\u001c\u0014\u0001k\"k(\f\u0001ï¿½\u0005xï¿½\u0015\u0001ï¿½h std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003,ï¿½\u00038ï¿½\u0002\u0004\u0001ï¿½\u0003\u0018ï¿½\u00038ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½\u0019ï¿½Ðstatic const std::ios_base::fmtflags std::ios_base::scientific\u0000Jh\u0014static const std::ios_base::fmtflags std::ios_base::scientific = _S_scientific\u0000Generates floating-point output in scientific notation.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½s\u00014ï¿½s\u0001Hï¿½\u0001\u0004\u0001ï¿½s\u0001\bï¿½s\u0001j\u0002ï¿½8\u00044ï¿½8\u0004H\f\u0001ï¿½D\u0004Xï¿½D\u0004l\f\u0001ï¿½#ï¿½_ï¿½\u0014tï¿½fstd::_S_ios_fmtflags_min = ~__INT_MAX__\u0000\u0000\n&\u0000\u0000\u0001N\fN2ï¿½\u0002\u0004\u0001N\fNPï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0000ï¿½cï¿½8ï¿½std::_Ios_Openmode __a\u0000&&\u0006\u0000\u0000\u0001ï¿½4ï¿½:ï¿½\u0002\u0004\u0001ï¿½\u0018ï¿½:ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½Tï¿½Z\f\u0001ï¿½\u0003ï¿½+Mwï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003*ï¿½\u00036ï¿½\u0002\u0004\u0001ï¿½\u0003\u0016ï¿½\u00036ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\nï¿½\u0003\u0016\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003$\u0004\u0001ï¿½\t%ï¿½Äï¿½0int __res\u0000\b\b\nint __res = __gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1)\u0000\u0000\u0001ï¿½=\u0002\u0018ï¿½=\u0002\"\u0002\u0001ï¿½=\u0002\u0010ï¿½=\u0002ï¿½\r\u0006\u0000\u0000\u0002ï¿½>\u0002\u0018ï¿½>\u0002\"\f\u0001ï¿½B\u0002\u001eï¿½B\u0002(\f\u0001ï¿½mï¿½\\Zg=ï¿½std::_S_cur = _GLIBCXX_STDIO_SEEK_CUR\u0000\u0000\n\f\u0000\u0000\u0001ï¿½\fï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\fï¿½Lï¿½Vï¿½@0ï¿½\u0017>\u0016\u0003\u0000\u0000\u0001ï¿½\u0001@ï¿½\u0001L\u0004\u0001ï¿½@Dï¿½=;std::_S_ios_openmode_end = 1L << 16\u0000\u0000\n&\u0000\u0000\u0001v\fv2ï¿½\u0002\u0004\u0001v\fvHï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0000ï¿½~ï¿½vï¿½std::_Ios_Iostate &__a\u0000&&\u0006\u0000\u0000\u0001ï¿½6ï¿½<ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½<ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0002ï¿½\u0016ï¿½\u001c\u0014\u0001ï¿½\"ï¿½(\f\u0001ï¿½\u0006ß¿ï¿½îint __index\u0000\b\b\u000e\u0000\u0000\u0001ï¿½\u001d\u0002^ï¿½\u001d\u0002lï¿½\u0002\u0004\u0001ï¿½\u001d\u0002Vï¿½\u001d\u0002lï¿½\u0006\u0000\u0000\u0000ï¿½\u000eï¿½,.\u0016ï¿½std::_S_ios_openmode_min = ~__INT_MAX__\u0000\u0000\n&\u0000\u0000\u0001x\fx2ï¿½\u0002\u0004\u0001x\fxPï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0000ï¿½\"ï¿½Ðï¿½Í±_Atomic_word std::ios_base::_Callback_list::_M_refcount\u0000\u001aX\u0016\u00000 means one reference.\u0000\u0001ï¿½.\u0002(ï¿½.\u0002>ï¿½\u0002\u0004\u0001ï¿½.\u0002\fï¿½.\u0002>ï¿½\b\u0017\u0000\u0000\u0003ï¿½2\u0002nï¿½2\u0002ï¿½\u0014\u0001ï¿½5\u0002zï¿½5\u0002ï¿½\u0001ï¿½=\u0002xï¿½=\u0002ï¿½\u0001ï¿½_5ï¿½sVkN+static const std::ios_base::fmtflags std::ios_base::left\u0000Jh\bstatic const std::ios_base::fmtflags std::ios_base::left = _S_left\u0000Adds fill characters on the right (final positions) of certain\ngenerated output.  (I.e., the thing you print is flush left.)\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½i\u00014ï¿½i\u0001<ï¿½\u0001\u0004\u0001ï¿½i\u0001\bï¿½i\u0001^\u0001ï¿½\u0006\u00044ï¿½\u0006\u0004<\f\u0001ï¿½ \u0002ï¿½WDï¿½+\rstd::_Ios_Openmode __a\u0000&&\u0006\u0000\u0000\u0001ï¿½4ï¿½:ï¿½\u0002\u0004\u0001ï¿½\u0018ï¿½:ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½Tï¿½Z\f\u0001ï¿½\u0002ï¿½,ï¿½*ï¿½o\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½@\u0002\u0018ï¿½@\u0002d@\u0001ï¿½rIï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002ï¿½\bï¿½4@\u0001ï¿½\u0000\bï¿½\u00004@\u0001ï¿½c#y\u001a:\u001dAfstd::_S_showpoint = 1L << 10\u0000\u0000\n\u0018\u0000\u0000\u0001D\fD$ï¿½\u0002\u0004\u0001D\fD<ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½{\u0001Pï¿½{\u0001h\u0004\u0001ï¿½|ï¿½(ï¿½Kï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½.\u0004$ï¿½.\u00040ï¿½\u0002\u0004\u0001ï¿½.\u0004\u0010ï¿½.\u00040ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½0\u0004\bï¿½0\u0004\u0014\u0004\u0001ï¿½1\u0004\u0016ï¿½1\u0004\"\u0004\u0001ï¿½SyKï¿½\u0015ï¿½std::ios_base::fmtflags std::ios_base::_M_flags\u00000N\u0010\u0000\u0000\u0001ï¿½\"\u0002\u001cï¿½\"\u0002,ï¿½\u0002\u0004\u0001ï¿½\"\u0002\bï¿½\"\u0002,ï¿½Þ£ï¿½3HQ\b\u0005\u0000\u0000\tï¿½\u0002\u001aï¿½\u0002*\f\u0001ï¿½\u0002.ï¿½\u0002>\f\u0001ï¿½\u0002\fï¿½\u0002\u001c\u0014\u0001ï¿½\u0002.ï¿½\u0002>\f\u0001ï¿½\u0002\fï¿½\u0002\u001c\u001c\u0001ï¿½\u0002.ï¿½\u0002>\f\u0001ï¿½\u0002\fï¿½\u0002\u001c\u001c\u0001ï¿½\u0002\fï¿½\u0002\u001c\u001c\u0001ï¿½\u0002\fï¿½\u0002\u001c\u001c\u0001ï¿½\u0002ï¿½\u0019\u0015l&ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u001eï¿½L@\u0001ï¿½--\u000bï¿½&ï¿½nstd::_Ios_Iostate __b\u0000$$\u0006\u0000\u0000\u0001ï¿½Zï¿½`ï¿½\u0002\u0004\u0001ï¿½@ï¿½`ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½.ï¿½4\f\u0001ï¿½\u0015ï¿½:\u0005\u0016\u0003tstd::_S_ios_fmtflags_end = 1L << 16\u0000\u0000\n&\u0000\u0000\u0001L\fL2ï¿½\u0002\u0004\u0001L\fLHï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0000ï¿½5\u0005<\u0017Gï¿½\u000estd::_Ios_Openmode &__a\u0000((\u0006\u0000\u0000\u0001ï¿½8ï¿½>ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½>ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0002ï¿½\u0016ï¿½\u001c\u0014\u0001ï¿½\"ï¿½(ï¿½\u0001ï¿½\u0013pNï¿½\u0018fï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½6\u0004.ï¿½6\u0004:ï¿½\u0002\u0004\u0001ï¿½6\u0004\u001aï¿½6\u0004:ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½8\u0004\bï¿½8\u0004\u0014\u0004\u0001ï¿½9\u0004\u0016ï¿½9\u0004\"\u0004\u0001ï¿½Yï¿½nVï¿½]std::ios_base::fmtflags __mask\u000000\f\u0000\u0000\u0001ï¿½\u0002Hï¿½\u0002Tï¿½\u0002\u0004\u0001ï¿½\u00026ï¿½\u0002Tï¿½Þ£ï¿½3HQï¿½\u0006\u0000\u0000\u0002ï¿½\u0002&ï¿½\u00022\f\u0001ï¿½\u0002:ï¿½\u0002F\f\u0001ï¿½dMï¿½\"\u0015ï¿½std::ios_base::fmtflags __fmtfl\u000000\u000e\u0000\u0000\u0001ï¿½\u0002$ï¿½\u00022ï¿½\u0002\u0004\u0001ï¿½\u0002\u0012ï¿½\u00022ï¿½Þ£ï¿½3HQï¿½\u0006\u0000\u0000\u0001ï¿½\u0002$ï¿½\u00022\f\u0001ï¿½Th7x\u0017ï¿½int std::ios_base::_Callback_list::_M_index\u0000\bF\u0010\u0000\u0000\u0001ï¿½-\u0002\u0018ï¿½-\u0002(ï¿½\u0002\u0004\u0001ï¿½-\u0002\fï¿½-\u0002(ï¿½\b\u0017\u0000\u0000\u0001ï¿½2\u0002Hï¿½2\u0002X\u0014\u0001ï¿½wï¿½Uï¿½\u0016\u0001std::_S_boolalpha = 1L << 0\u0000\u0000\n\u0018\u0000\u0000\u0001:\f:$ï¿½\u0002\u0004\u0001:\f::ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½W\u0001Pï¿½W\u0001h\u0004\u0001ï¿½n\u001cX=%\u0007,_IOS_BASE_H\u0000\u0000\u0000\u0016#define _IOS_BASE_H 1\u0000\u0000\u0001\"\u0010\"&\u0002\u0001\"\u0010\"*\u0000ï¿½\u0001\u0000\u0000\u0000ï¿½]ï¿½oN\u001f\u0007\u001d$std::ios_base::fmtflags __old\u000000\nstd::ios_base::fmtflags __old = _M_flags\u0000\u0000\u0001ï¿½\u0002\u001eï¿½\u0002(\u0002\u0001ï¿½\u0002\fï¿½\u0002>ï¿½Þ£ï¿½3HQ\r\u0006\u0000\u0000\u0001ï¿½\u0002\u001aï¿½\u0002$\f\u0001ï¿½(ï¿½Gï¿½|Bï¿½std::_S_showbase = 1L << 9\u0000\u0000\n\u0016\u0000\u0000\u0001C\fC\"ï¿½\u0002\u0004\u0001C\fC8ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½w\u0001Pï¿½w\u0001f\u0004\u0001ï¿½\u000eï¿½@ï¿½}ï¿½std::ios_base::fmtflags __fmtfl\u000000\u000e\u0000\u0000\u0001ï¿½\u0002&ï¿½\u00024ï¿½\u0002\u0004\u0001ï¿½\u0002\u0014ï¿½\u00024ï¿½Þ£ï¿½3HQï¿½\u0006\u0000\u0000\u0001ï¿½\u0002\"ï¿½\u00020\f\u0001ï¿½zÆ¶ï¿½[static const std::ios_base::fmtflags std::ios_base::hex\u0000Jh\u0006static const std::ios_base::fmtflags std::ios_base::hex = _S_hex\u0000Converts integer input or generates integer output in hexadecimal base.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½`\u00014ï¿½`\u0001:ï¿½\u0001\u0004\u0001ï¿½`\u0001\bï¿½`\u0001\\\u0001ï¿½\u001f\u00044ï¿½\u001f\u0004:\f\u0001ï¿½vï¿½5\u0014@std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003,ï¿½\u00038ï¿½\u0002\u0004\u0001ï¿½\u0003\u0018ï¿½\u00038ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\nï¿½\u0003\u0016\u0004\u0001ï¿½\u0003\u0018ï¿½\u0003$\u0004\u0001ï¿½×£ï¿½\u0005static const std::ios_base::iostate std::ios_base::eofbit\u0000Hf\fstatic const std::ios_base::iostate std::ios_base::eofbit = _S_eofbit\u0000Indicates that an input operation reached the end of an input sequence.\u0000\u0000ï¿½\u0011\fBï¿½%\b\u0005\u0002\u0001ï¿½\u00012ï¿½\u0001>ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001V\u0000ï¿½D-ï¿½(ï¿½Sï¿½std::_Ios_Fmtflags __b\u0000&&\u0006\u0000\u0000\u0001j^jdï¿½\u0002\u0004\u0001jBjdï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001k.k4\f\u0001ï¿½u~Jtï¿½a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006M8MN@\u0001N:NP@\u0001w8wN@\u0001x:xP@\u0001ï¿½6ï¿½L@\u0001ï¿½8ï¿½N@\u0001ï¿½\u001f#mï¿½\u0017\u0015ï¿½Cstatic const std::ios_base::seekdir std::ios_base::beg\u0000Hf\u0006static const std::ios_base::seekdir std::ios_base::beg = _S_beg\u0000Request a seek relative to the beginning of the stream.\u0000\u0000ï¿½8ï¿½U\u0013\b\u0005\u0002\u0001ï¿½\u00012ï¿½\u00018ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001L\u0000ï¿½\u0015É¨Ìº\u0001ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\fQ\u0012Q6@\u0001U\u0012U6@\u0001Y\u0012Y6@\u0001]\u0012]6@\u0001{\u0012{6@\u0001\u00126@\u0001ï¿½\u0012ï¿½6@\u0001ï¿½\u0012ï¿½6@\u0001ï¿½\u0012ï¿½6@\u0001ï¿½\u0012ï¿½6@\u0001ï¿½\u0012ï¿½6@\u0001ï¿½\u0012ï¿½6@\u0001ï¿½!!ï¿½PLï¿½3\bstatic const std::ios_base::openmode std::ios_base::app\u0000Jh\u0006static const std::ios_base::openmode std::ios_base::app = _S_app\u0000Seek to end before each write.\u0000\u0000ï¿½n!_ï¿½Oï¿½\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001:ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001N\u0000ï¿½+ï¿½[vÉ·ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00012\u00002@@\u0001ï¿½+\u001dJnï¿½jï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½B\u0004*ï¿½B\u00046ï¿½\u0002\u0004\u0001ï¿½B\u0004\u0016ï¿½B\u00046ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½D\u0004\bï¿½D\u0004\u0014\u0004\u0001ï¿½E\u0004\u0016ï¿½E\u0004\"\u0004\u0001ï¿½\u0010ï¿½Eï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00010\u001c0B@\u0001ï¿½A3n@Z*X\\std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003(ï¿½\u00034ï¿½\u0002\u0004\u0001ï¿½\u0003\u0014ï¿½\u00034ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½c3<ï¿½Èï¿½std::_S_showpos = 1L << 11\u0000\u0000\n\u0014\u0000\u0000\u0001E\fE ï¿½\u0002\u0004\u0001E\fE8ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½~\u0001Pï¿½~\u0001d\u0004\u0001ï¿½iÏ¨=qï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u0003*ï¿½\u00036ï¿½\u0002\u0004\u0001ï¿½\u0003\u0016ï¿½\u00036ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½[6)ï¿½Sï¿½std::_S_ios_seekdir_end = 1L << 16\u0000\u0000\n$\u0000\u0000\u0001ï¿½\fï¿½0ï¿½\u0002\u0004\u0001ï¿½\fï¿½Fï¿½Vï¿½@0ï¿½\u0017>\u0016\u0003\u0000\u0000\u0000ï¿½\u000f\u0018ï¿½çxï¿½int std::ios_base::_M_word_size\u0000\b&\u0018\u0000Allocated storage.\u0000\u0001ï¿½_\u0002\u0014ï¿½_\u0002,ï¿½\u0002\u0004\u0001ï¿½_\u0002\bï¿½_\u0002,ï¿½\b\u0005\u0000\u0000\u0002ï¿½H\u0003fï¿½H\u0003~\f\u0001ï¿½]\u0003fï¿½]\u0003~\f\u0001ï¿½Uï¿½Hï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½Q\u0004\u0000ï¿½Q\u0004<@\u0001ï¿½\u0019ï¿½_ï¿½\u0002std::_S_end = _GLIBCXX_STDIO_SEEK_END\u0000\u0000\n\f\u0000\u0000\u0001ï¿½\fï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\fï¿½Lï¿½Vï¿½@0ï¿½\u0017>\u0016\u0003\u0000\u0000\u0001ï¿½\u0001@ï¿½\u0001L\u0004\u0001ï¿½\u0016\u0001ï¿½\u0000p[ï¿½std::_S_dec = 1L << 1\u0000\u0000\n\f\u0000\u0000\u0001;\f;\u0018ï¿½\u0002\u0004\u0001;\f;0ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0002J,J8\u0004\u0001ï¿½Z\u0001Pï¿½Z\u0001\\\u0004\u0001ï¿½\u001cï¿½\u0002{2ï¿½_\u001astd::_S_adjustfield = _S_left | _S_right | _S_internal\u0000\u0000\n\u001c\u0000\u0000\u0001I\fI(ï¿½\u0002\u0004\u0001I\fIpï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Pï¿½\u0001l\u0004\u0001ï¿½/ï¿½'ï¿½Eï¿½std::_Ios_Openmode __a\u0000&&\u0006\u0000\u0000\u0001|4|:ï¿½\u0002\u0004\u0001|\u0018|:ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001}T}Z\f\u0001ï¿½|ï¿½Jï¿½Astd::_Ios_Fmtflags __b\u0000&&\u0006\u0000\u0000\u0001RZR`ï¿½\u0002\u0004\u0001R>R`ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001Sï¿½Sï¿½\f\u0001ï¿½Od\u0006\u0006\u0005ï¿½7ï¿½std::_S_hex = 1L << 3\u0000\u0000\n\f\u0000\u0000\u0001=\f=\u0018ï¿½\u0002\u0004\u0001=\f=0ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0002JPJ\\\u0004\u0001ï¿½`\u0001Pï¿½`\u0001\\\u0004\u0001ï¿½\\ï¿½'pTPp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½<\u0002\u0010ï¿½<\u0002^@\u0001ï¿½DwFï¿½ ï¿½static const std::ios_base::fmtflags std::ios_base::internal\u0000Jh\u0010static const std::ios_base::fmtflags std::ios_base::internal = _S_internal\u0000Adds fill characters at a designated internal point in certain\ngenerated output, or identical to @c right if no such point is\ndesignated.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½e\u00014ï¿½e\u0001Dï¿½\u0001\u0004\u0001ï¿½e\u0001\bï¿½e\u0001f\u0001ï¿½\u00036ï¿½\u0003F\f\u0001ï¿½NUNï¿½Zstd::_S_uppercase = 1L << 14\u0000\u0000\n\u0018\u0000\u0000\u0001H\fH$ï¿½\u0002\u0004\u0001H\fH<ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Pï¿½\u0001h\u0004\u0001ï¿½?ï¿½3dï¿½static const std::ios_base::fmtflags std::ios_base::right\u0000Jh\nstatic const std::ios_base::fmtflags std::ios_base::right = _S_right\u0000Adds fill characters on the left (initial positions) of certain\ngenerated output.  (I.e., the thing you print is flush right.)\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½p\u00014ï¿½p\u0001>ï¿½\u0001\u0004\u0001ï¿½p\u0001\bï¿½p\u0001`\u0001ï¿½\u000e\u00044ï¿½\u000e\u0004>\f\u0001ï¿½WÎ¡hï¿½O=ï¿½std::_S_unitbuf = 1L << 13\u0000\u0000\n\u0014\u0000\u0000\u0001G\fG ï¿½\u0002\u0004\u0001G\fG8ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Pï¿½\u0001d\u0004\u0001ï¿½\u001bï¿½Úï¿½\u0014Æstd::_Ios_Openmode __b\u0000&&\u0006\u0000\u0000\u0001ï¿½Zï¿½`ï¿½\u0002\u0004\u0001ï¿½>ï¿½`ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½\f\u0001ï¿½N\u0003ï¿½B\u0003ï¿½static const std::ios_base::fmtflags std::ios_base::showpoint\u0000Jh\u0012static const std::ios_base::fmtflags std::ios_base::showpoint = _S_showpoint\u0000Generates a decimal-point character unconditionally in generated\nfloating-point output.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½{\u00014ï¿½{\u0001Fï¿½\u0001\u0004\u0001ï¿½{\u0001\bï¿½{\u0001h\u0002ï¿½\u00034ï¿½\u0003F\f\u0001ï¿½\u00038ï¿½\u0003J\f\u0001ï¿½\u0014Ó2ï¿½!ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0000\u0014ï¿½\u0000@@\u0001ï¿½\u000bï¿½y=Bï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b*\b*\u001e@\u0001ï¿½\bï¿½\u001e@\u0001ï¿½\bï¿½\u001e@\u0001ï¿½\u0004\u0001\bï¿½\u0004\u0001\u001e@\u0001ï¿½\u0001\bï¿½\u0001\u001e@\u0001ï¿½x\u0002\bï¿½x\u0002\u001e@\u0001ï¿½p\u0003\bï¿½p\u0003\u001e@\u0001ï¿½<\u0004\bï¿½<\u0004\u001e@\u0001ï¿½Çªï¿½|ï¿½\nstd::_Ios_Iostate &__a\u0000&&\u0006\u0000\u0000\u0001ï¿½6ï¿½<ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½<ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0002ï¿½\u0016ï¿½\u001c\u0014\u0001ï¿½\"ï¿½(ï¿½\u0001ï¿½wï¿½=std::_Ios_Openmode __a\u0000&&\u0006\u0000\u0000\u0001ï¿½4ï¿½:ï¿½\u0002\u0004\u0001ï¿½\u0018ï¿½:ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½Vï¿½\\\f\u0001ï¿½Kï¿½\u0018ï¿½std::_Ios_Iostate __b\u0000$$\u0006\u0000\u0000\u0001ï¿½Vï¿½\\ï¿½\u0002\u0004\u0001ï¿½<ï¿½\\ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½\f\u0001ï¿½)A0-ï¿½B\u0004std::streamsize std::ios_base::_M_precision\u0000 >\u0018\u0000\u0000\u0001ï¿½ \u0002 ï¿½ \u00028ï¿½\u0002\u0004\u0001ï¿½ \u0002\bï¿½ \u00028ï¿½\b\u0005\u0000\u0000\u0003ï¿½\u0002\u001aï¿½\u00022\f\u0001ï¿½\u00022ï¿½\u0002J\f\u0001ï¿½\u0002\fï¿½\u0002$\u0014\u0001ï¿½6ï¿½\u0018Pï¿½std::_Ios_Iostate __b\u0000$$\u0006\u0000\u0000\u0001ï¿½Zï¿½`ï¿½\u0002\u0004\u0001ï¿½@ï¿½`ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½.ï¿½4\f\u0001ï¿½ \b\r\u000eï¿½cï¿½\u0012std::_Ios_Openmode &__a\u0000((\u0006\u0000\u0000\u0001ï¿½8ï¿½>ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½>ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0002ï¿½\u0016ï¿½\u001c\u0014\u0001ï¿½\"ï¿½(\f\u0001ï¿½\u0017ï¿½'<\u000bN\u000estd::_Ios_Openmode __b\u0000&&\u0006\u0000\u0000\u0001ï¿½^ï¿½dï¿½\u0002\u0004\u0001ï¿½Bï¿½dï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½.ï¿½4\f\u0001ï¿½\u0013ï¿½;Pï¿½+ï¿½static const std::ios_base::iostate std::ios_base::failbit\u0000Hf\u000estatic const std::ios_base::iostate std::ios_base::failbit = _S_failbit\u0000Indicates that an input operation failed to read the expected\ncharacters, or that an output operation failed to generate the\ndesired characters.\u0000\u0000ï¿½\u0011\fBï¿½%\b\u0005\u0002\u0001ï¿½\u00012ï¿½\u0001@ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001Z\u0000ï¿½iKï¿½\u000eï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u00030ï¿½\u0003<ï¿½\u0002\u0004\u0001ï¿½\u0003\u001cï¿½\u0003<ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u0003\bï¿½\u0003\u0014\u0004\u0001ï¿½\u0003\u0016ï¿½\u0003\"\u0004\u0001ï¿½\bï¿½jvV\u0003ï¿½\u0016std::io_errc __e\u0000\u001a\u001a\u0006\u0000\u0000\u0001ï¿½4ï¿½:ï¿½\u0002\u0004\u0001ï¿½$ï¿½:ï¿½\u0003sï¿½l\u0014ï¿½$ï¿½\f\u0000\u0000\u0001ï¿½Nï¿½T\f\u0001ï¿½_\u0011ï¿½'ï¿½A\u001d\u0003std::_S_goodbit = 0\u0000\u0000\n\u0014\u0000\u0000\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½,ï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Fï¿½\u0001Z\u0004\u0001ï¿½QPï¿½\u0012\u001a\u0012fstd::_Ios_Fmtflags __a\u0000&&\u0006\u0000\u0000\u0001^4^:ï¿½\u0002\u0004\u0001^\u0018^:ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001_V_\\\f\u0001ï¿½3ï¿½6j}ï¿½lstd::_S_ios_fmtflags_max = __INT_MAX__\u0000\u0000\n&\u0000\u0000\u0001M\fM2ï¿½\u0002\u0004\u0001M\fMNï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0000ï¿½\u001aï¿½Wï¿½FHï¿½std::_Ios_Openmode &__a\u0000((\u0006\u0000\u0000\u0001ï¿½8ï¿½>ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½>ï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0002ï¿½\u0016ï¿½\u001c\u0014\u0001ï¿½\"ï¿½(\f\u0001ï¿½S\u001cZï¿½v0Oï¿½std::_S_badbit = 1L << 0\u0000\u0000\n\u0012\u0000\u0000\u0001ï¿½\fï¿½\u001eï¿½\u0002\u0004\u0001ï¿½\fï¿½6ï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Dï¿½\u0001V\u0004\u0001ï¿½\u001es%ï¿½^ï¿½83std::_Ios_Iostate __b\u0000$$\u0006\u0000\u0000\u0001ï¿½Vï¿½\\ï¿½\u0002\u0004\u0001ï¿½<ï¿½\\ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½\f\u0001ï¿½>pZxx<\u001cstatic const std::ios_base::fmtflags std::ios_base::boolalpha\u0000Jh\u0012static const std::ios_base::fmtflags std::ios_base::boolalpha = _S_boolalpha\u0000Insert/extract @c bool in alphabetic rather than numeric format.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½W\u00014ï¿½W\u0001Fï¿½\u0001\u0004\u0001ï¿½W\u0001\bï¿½W\u0001h\u0002ï¿½\u00034ï¿½\u0003F\f\u0001ï¿½\u00038ï¿½\u0003J\f\u0001ï¿½oï¿½`\u000b<\\std::_S_fixed = 1L << 2\u0000\u0000\n\u0010\u0000\u0000\u0001<\f<\u001cï¿½\u0002\u0004\u0001<\f<4ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0002KNK^\u0004\u0001ï¿½]\u0001Pï¿½]\u0001`\u0004\u0001ï¿½,ï¿½gHï¿½VUstatic const std::ios_base::openmode std::ios_base::in\u0000Jh\u0004static const std::ios_base::openmode std::ios_base::in = _S_in\u0000Open for input.  Default for @c ifstream and fstream.\u0000\u0000ï¿½n!_ï¿½Oï¿½\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u00018ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001J\u0000ï¿½\u0007ï¿½6N}ï¿½std::_Ios_Openmode __b\u0000&&\u0006\u0000\u0000\u0001ï¿½^ï¿½dï¿½\u0002\u0004\u0001ï¿½Bï¿½dï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½.ï¿½4\f\u0001ï¿½SKï¿½#ï¿½4ï¿½\u001estd::_S_failbit = 1L << 2\u0000\u0000\n\u0014\u0000\u0000\u0001ï¿½\fï¿½ ï¿½\u0002\u0004\u0001ï¿½\fï¿½6ï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Fï¿½\u0001Z\u0004\u0001ï¿½jï¿½@ï¿½std::_S_ios_iostate_end = 1L << 16\u0000\u0000\n$\u0000\u0000\u0001ï¿½\fï¿½0ï¿½\u0002\u0004\u0001ï¿½\fï¿½Fï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0016\u0003\u0000\u0000\u0000ï¿½nï¿½sï¿½8:ï¿½std::_S_ios_iostate_min = ~__INT_MAX__\u0000\u0000\n$\u0000\u0000\u0001ï¿½\fï¿½0ï¿½\u0002\u0004\u0001ï¿½\fï¿½Nï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0016\u0003\u0000\u0000\u0000ï¿½\bï¿½]\u001dNstd::_Ios_Iostate __a\u0000$$\u0006\u0000\u0000\u0001ï¿½2ï¿½8ï¿½\u0002\u0004\u0001ï¿½\u0018ï¿½8ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½Rï¿½X\f\u0001ï¿½b\u0014ï¿½nï¿½C\u000estd::ios_base &__rhs\u0000\u001e\u001e\n\u0000\u0000\u0001ï¿½\u0003,ï¿½\u00036ï¿½\u0002\u0004\u0001ï¿½\u0003\u0018ï¿½\u00036ï¿½\fï¿½Zbï¿½\u0006\u0000\u0000\u0000ï¿½|ï¿½>ï¿½Rï¿½static const std::ios_base::fmtflags std::ios_base::basefield\u0000Jh\u0012static const std::ios_base::fmtflags std::ios_base::basefield = _S_basefield\u0000A mask of dec|oct|hex.  Useful for the 2-arg form of @c setf.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001Fï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001h\u0003ï¿½\u0017\u0004Rï¿½\u0017\u0004d\f\u0001ï¿½\u001f\u0004Rï¿½\u001f\u0004d\f\u0001ï¿½'\u0004Rï¿½'\u0004d\f\u0001ï¿½\u001fJï¿½<ï¿½std::_Ios_Iostate __a\u0000$$\u0006\u0000\u0000\u0001ï¿½2ï¿½8ï¿½\u0002\u0004\u0001ï¿½\u0018ï¿½8ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½Rï¿½X\f\u0001ï¿½\u0003ï¿½\u001bï¿½pbï¿½static const std::ios_base::fmtflags std::ios_base::unitbuf\u0000Jh\u000estatic const std::ios_base::fmtflags std::ios_base::unitbuf = _S_unitbuf\u0000Flushes output after each output operation.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001Bï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001d\u0002ï¿½\u00036ï¿½\u0003D\f\u0001ï¿½\u0003:ï¿½\u0003H\f\u0001ï¿½ru-ï¿½\u0003std::_S_skipws = 1L << 12\u0000\u0000\n\u0012\u0000\u0000\u0001F\fF\u001eï¿½\u0002\u0004\u0001F\fF6ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Pï¿½\u0001b\u0004\u0001ï¿½t8\u0006t?,\u0007ï¿½std::_Ios_Iostate __a\u0000$$\u0006\u0000\u0000\u0001ï¿½2ï¿½8ï¿½\u0002\u0004\u0001ï¿½\u0018ï¿½8ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½Tï¿½Z\f\u0001ï¿½s@\u001aï¿½std::_Ios_Iostate __b\u0000$$\u0006\u0000\u0000\u0001ï¿½Zï¿½`ï¿½\u0002\u0004\u0001ï¿½@ï¿½`ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½.ï¿½4\f\u0001ï¿½xï¿½tT\"2static const std::ios_base::fmtflags std::ios_base::uppercase\u0000Jh\u0012static const std::ios_base::fmtflags std::ios_base::uppercase = _S_uppercase\u0000Replaces certain lowercase letters with their uppercase equivalents\nin generated output.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001Fï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001h\u0002ï¿½\u00034ï¿½\u0003F\f\u0001ï¿½\u00038ï¿½\u0003J\f\u0001ï¿½oï¿½9ï¿½+ï¿½std::_S_floatfield = _S_scientific | _S_fixed\u0000\u0000\n\u001a\u0000\u0000\u0001K\fK&ï¿½\u0002\u0004\u0001K\fK^ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Pï¿½\u0001j\u0004\u0001ï¿½\u0016ï¿½(\u0002ï¿½0ï¿½static const std::ios_base::openmode std::ios_base::binary\u0000Jh\fstatic const std::ios_base::openmode std::ios_base::binary = _S_bin\u0000Perform input and output in binary mode (as opposed to text mode).\nThis is probably not what you think it is; see\nhttps://gcc.gnu.org/onlinedocs/libstdc++/manual/fstreams.html#std.io.filestreams.binary\u0000\u0000ï¿½n!_ï¿½Oï¿½\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001@ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001R\u0000ï¿½\b3ï¿½Ûï¿½Åstd::_S_scientific = 1L << 8\u0000\u0000\n\u001a\u0000\u0000\u0001B\fB&ï¿½\u0002\u0004\u0001B\fB<ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0002K.KH\u0004\u0001ï¿½s\u0001Pï¿½s\u0001j\u0004\u0001ï¿½fNï¿½Cï¿½\u001f^std::_S_beg = 0\u0000\u0000\n\f\u0000\u0000\u0001ï¿½\fï¿½\u0018ï¿½\u0002\u0004\u0001ï¿½\fï¿½ ï¿½Vï¿½@0ï¿½\u0017>\u0016\u0003\u0000\u0000\u0001ï¿½\u0001@ï¿½\u0001L\u0004\u0001ï¿½Gc?ï¿½i5Õºstd::io_errc::stream = 1\u0000\u0000\u001c\f\u0000\u0000\u0001ï¿½.ï¿½:ï¿½\u0002\u0004\u0001ï¿½.ï¿½Bï¿½\u0003sï¿½l\u0014ï¿½$\u0016\n\u0000\u0000\u0001ï¿½\t\u0001pï¿½\t\u0001|\u0004\u0001ï¿½Bï¿½Ïï¿½\fï¿½std::_S_right = 1L << 7\u0000\u0000\n\u0010\u0000\u0000\u0001A\fA\u001cï¿½\u0002\u0004\u0001A\fA4ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0002IDIT\u0004\u0001ï¿½p\u0001Pï¿½p\u0001`\u0004\u0001ï¿½ \b~}m std::_S_left = 1L << 5\u0000\u0000\n\u000e\u0000\u0000\u0001?\f?\u001aï¿½\u0002\u0004\u0001?\f?2ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0002I0I>\u0004\u0001ï¿½i\u0001Pï¿½i\u0001^\u0004\u0001ï¿½+\tlï¿½6ï¿½pstd::_S_eofbit = 1L << 1\u0000\u0000\n\u0012\u0000\u0000\u0001ï¿½\fï¿½\u001eï¿½\u0002\u0004\u0001ï¿½\fï¿½6ï¿½Nlï¿½ï¿½\u001cï¿½\u0016\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Dï¿½\u0001V\u0004\u0001ï¿½`Ã·ï¿½std::io_errc __e\u0000\u001a\u001a\u0006\u0000\u0000\u0001ï¿½>ï¿½Dï¿½\u0002\u0004\u0001ï¿½.ï¿½Dï¿½\u0003sï¿½l\u0014ï¿½$ï¿½\f\u0000\u0000\u0001ï¿½Xï¿½^\f\u0001ï¿½.ï¿½\u001eï¿½Ñ`ï¿½const std::string &__str\u0000&&\n\u0000\u0000\u0001ï¿½\u0002\u00018ï¿½\u0002\u0001Bï¿½\u0002\u0004\u0001ï¿½\u0002\u0001\u001cï¿½\u0002\u0001Bï¿½BFï¿½tï¿½eï¿½\t\u0000\u0000\u0000ï¿½rï¿½V?$ï¿½std::_Ios_Fmtflags __a\u0000&&\u0006\u0000\u0000\u0001R4R:ï¿½\u0002\u0004\u0001R\u0018R:ï¿½\u0013\u0011ï¿½\u0007ï¿½\f\u0000\u0000\u0001STSZ\f\u0001ï¿½ftï¿½\u0018(!gTstatic const std::ios_base::fmtflags std::ios_base::fixed\u0000Jh\nstatic const std::ios_base::fmtflags std::ios_base::fixed = _S_fixed\u0000Generate floating-point output in fixed-point notation.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½]\u00014ï¿½]\u0001>ï¿½\u0001\u0004\u0001ï¿½]\u0001\bï¿½]\u0001`\u0002ï¿½0\u00044ï¿½0\u0004>\f\u0001ï¿½D\u00044ï¿½D\u0004>\f\u0001ï¿½xï¿½J2}estd::_S_ate = 1L << 1\u0000\u0000\n\f\u0000\u0000\u0001q\fq\u0018ï¿½\u0002\u0004\u0001q\fq0ï¿½ ï¿½\u0016ï¿½\u0016\u0003\u0000\u0000\u0001ï¿½\u0001Bï¿½\u0001N\u0004\u0001ï¿½|/ï¿½\t\r\u000bï¿½static const std::ios_base::fmtflags std::ios_base::oct\u0000Jh\u0006static const std::ios_base::fmtflags std::ios_base::oct = _S_oct\u0000Converts integer input or generates integer output in octal base.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½l\u00014ï¿½l\u0001:ï¿½\u0001\u0004\u0001ï¿½l\u0001\bï¿½l\u0001\\\u0001ï¿½'\u00044ï¿½'\u0004:\f\u0001ï¿½v\u0018ï¿½[ï¿½3ï¿½std::_S_oct = 1L << 6\u0000\u0000\n\f\u0000\u0000\u0001@\f@\u0018ï¿½\u0002\u0004\u0001@\f@0ï¿½\u0013\u0011ï¿½\u0007ï¿½\u0016\u0003\u0000\u0000\u0002J>JJ\u0004\u0001ï¿½l\u0001Pï¿½l\u0001\\\u0004\u0001ï¿½l^ï¿½\"ï¿½\u0010ï¿½static const std::ios_base::fmtflags std::ios_base::showbase\u0000Jh\u0010static const std::ios_base::fmtflags std::ios_base::showbase = _S_showbase\u0000Generates a prefix indicating the numeric base of generated integer\noutput.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½w\u00014ï¿½w\u0001Dï¿½\u0001\u0004\u0001ï¿½w\u0001\bï¿½w\u0001f\u0002ï¿½\u00034ï¿½\u0003D\f\u0001ï¿½\u00038ï¿½\u0003H\f\u0001ï¿½1\rï¿½<ï¿½std::ios_base &__base\u0000\u001e\u001e\f\u0000\u0000\u0001ï¿½\u001d\u0004 ï¿½\u001d\u0004,ï¿½\u0002\u0004\u0001ï¿½\u001d\u0004\fï¿½\u001d\u0004,ï¿½\fï¿½Zbï¿½\f\u0000\u0000\u0002ï¿½\u001f\u0004\bï¿½\u001f\u0004\u0014\u0004\u0001ï¿½ \u0004\u0016ï¿½ \u0004\"\u0004\u0001ï¿½(ï¿½\u001aï¿½static const std::ios_base::fmtflags std::ios_base::dec\u0000Jh\u0006static const std::ios_base::fmtflags std::ios_base::dec = _S_dec\u0000Converts integer input or generates integer output in decimal base.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½Z\u00014ï¿½Z\u0001:ï¿½\u0001\u0004\u0001ï¿½Z\u0001\bï¿½Z\u0001\\\u0001ï¿½\u0017\u00044ï¿½\u0017\u0004:\f\u0001ï¿½\u000703ï¿½;~static const std::ios_base::openmode std::ios_base::ate\u0000Jh\u0006static const std::ios_base::openmode std::ios_base::ate = _S_ate\u0000Open and seek to end immediately after opening.\u0000\u0000ï¿½n!_ï¿½Oï¿½\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001:ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001N\u0000ï¿½\u0012J=Eî¼static const std::ios_base::fmtflags std::ios_base::skipws\u0000Jh\fstatic const std::ios_base::fmtflags std::ios_base::skipws = _S_skipws\u0000Skips leading white space before certain input operations.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001@ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001b\u0002ï¿½\u00034ï¿½\u0003@\f\u0001ï¿½\u00038ï¿½\u0003D\f\u0001ï¿½Wï¿½WNstatic const std::ios_base::fmtflags std::ios_base::adjustfield\u0000Jh\u0016static const std::ios_base::fmtflags std::ios_base::adjustfield = _S_adjustfield\u0000A mask of left|right|internal.  Useful for the 2-arg form of @c setf.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001Jï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001l\u0003ï¿½\u0003^ï¿½\u0003t\f\u0001ï¿½\u0006\u0004Tï¿½\u0006\u0004j\f\u0001ï¿½\u000e\u0004Vï¿½\u000e\u0004l\f\u0001ï¿½\u0004vP@wï¿½DFstd::streamsize std::ios_base::_M_width\u0000 >\u0010\u0000\u0000\u0001ï¿½!\u0002 ï¿½!\u00020ï¿½\u0002\u0004\u0001ï¿½!\u0002\bï¿½!\u00020ï¿½\b\u0005\u0000\u0000\u0003ï¿½\u0002\u001aï¿½\u0002*\f\u0001ï¿½\u00022ï¿½\u0002B\f\u0001ï¿½\u0002\fï¿½\u0002\u001c\u0014\u0001ï¿½'ï¿½'~ï¿½9ï¿½std::_Ios_Iostate __a\u0000$$\u0006\u0000\u0000\u0001ï¿½2ï¿½8ï¿½\u0002\u0004\u0001ï¿½\u0018ï¿½8ï¿½Nlï¿½ï¿½\u001cï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½Rï¿½X\f\u0001ï¿½\u001d@Iï¿½Fstatic const std::ios_base::fmtflags std::ios_base::floatfield\u0000Jh\u0014static const std::ios_base::fmtflags std::ios_base::floatfield = _S_floatfield\u0000A mask of scientific|fixed.  Useful for the 2-arg form of @c setf.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001Hï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001j\u0004ï¿½0\u0004Vï¿½0\u0004j\f\u0001ï¿½8\u0004`ï¿½8\u0004t\f\u0001ï¿½D\u0004ï¿½D\u0004ï¿½\f\u0001ï¿½L\u00048ï¿½L\u0004L\f\u0001ï¿½5Íï¿½Å¼static const std::ios_base::fmtflags std::ios_base::showpos\u0000Jh\u000estatic const std::ios_base::fmtflags std::ios_base::showpos = _S_showpos\u0000Generates a + sign in non-negative generated numeric output.\u0000\u0000ï¿½Þ£ï¿½3HQ\b\u0005\u0002\u0001ï¿½~\u00014ï¿½~\u0001Bï¿½\u0001\u0004\u0001ï¿½~\u0001\bï¿½~\u0001d\u0002ï¿½\u00034ï¿½\u0003B\f\u0001ï¿½\u00038ï¿½\u0003F\f\u0001ï¿½eï¿½\bï¿½static const std::ios_base::iostate std::ios_base::badbit\u0000Hf\fstatic const std::ios_base::iostate std::ios_base::badbit = _S_badbit\u0000Indicates a loss of integrity in an input or output sequence (such\nas an irrecoverable read error from a file).\u0000\u0000ï¿½\u0011\fBï¿½%\b\u0005\u0002\u0001ï¿½\u00012ï¿½\u0001>ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001V\u0000ï¿½k\u0010ï¿½]astd::_Ios_Openmode __b\u0000&&\u0006\u0000\u0000\u0001ï¿½^ï¿½dï¿½\u0002\u0004\u0001ï¿½Bï¿½dï¿½ ï¿½\u0016ï¿½\f\u0000\u0000\u0001ï¿½.ï¿½4\f\u0001ï¿½Mï¿½$ï¿½\u0005~\u0017ï¿½static const std::ios_base::iostate std::ios_base::goodbit\u0000Hf\u000estatic const std::ios_base::iostate std::ios_base::goodbit = _S_goodbit\u0000Indicates all is well.\u0000\u0000ï¿½\u0011\fBï¿½%\b\u0005\u0002\u0001ï¿½\u00012ï¿½\u0001@ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001Z\u0000ï¿½\u000eï¿½,ï¿½dï¿½static const std::ios_base::openmode std::ios_base::out\u0000Jh\u0006static const std::ios_base::openmode std::ios_base::out = _S_out\u0000Open for output.  Default for @c ofstream and fstream.\u0000\u0000ï¿½n!_ï¿½Oï¿½\b\u0005\u0002\u0001ï¿½\u00014ï¿½\u0001:ï¿½\u0001\u0004\u0001ï¿½\u0001\bï¿½\u0001N\u0000"}],"crc32":3449915881,"timestamp":1704214356,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]