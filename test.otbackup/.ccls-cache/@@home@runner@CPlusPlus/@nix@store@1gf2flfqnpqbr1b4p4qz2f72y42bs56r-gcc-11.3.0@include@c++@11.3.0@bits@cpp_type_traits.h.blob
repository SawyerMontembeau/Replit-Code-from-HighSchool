[{"ops":[{"insert":"*\u0000\u0002\u0002\u0001\u0001\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cpp_type_traits.h\u0000/home/runner/CPlusPlus/main.cpp\u0000\u0016clang\u0000/home/runner/CPlusPlus/main.cpp\u0000-idirafter\u0000/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0\u0000-isystem\u0000/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu\u0000-frandom-seed=xj94mglrnw\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-isystem\u0000/nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1/include\u0000-isystem\u0000/nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3/include\u0000-isystem\u0000/nix/store/wnjh1hzv9vqyyh46m9x2h26idib5kbx8-compiler-rt-libc-12.0.1-dev/include\u0000-working-directory=/home/runner/CPlusPlus/\u0000ï¿½/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ostream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/initializer_list\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdlib\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/cpu_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/type_traits\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/ctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream_insert.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clock_t.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdarg.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timespec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/mbstate_t.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno-base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct___jmp_buf_tag.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/locale.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthread_stack_min-dynamic.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/char_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/debug.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stddef.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__mbstate_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/single_threaded.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stringfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ios\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iostream\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/clockid_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes-arch.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/numeric_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_timeval.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwctype\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++config.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/new\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_classes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++locale.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/stdint.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-intn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdc-predef.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ostream.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/byteswap.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/long-double.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/predefined_ops.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cerrno\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/std_abs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitflags.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features-time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_construct.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/features.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cwchar\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/os_defines.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_forced.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/iosfwd\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/locale.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/concept_check.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdio\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/system_error\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/postypes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/charconv.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdint-uintn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/pthreadtypes.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/new_allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/types.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/locale_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_defines.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/uintn-identity.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timesize.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/memoryfwd.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/wint_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wctype.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/alloc_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/localefwd.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm/errno.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_algobase.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/thread-shared-types.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/cxxabi_init_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sched.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/waitstatus.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_itimerspec.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_tm.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ptr_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdio.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/exception_ptr.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/string\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/istream.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/atomic_word.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/ios_base.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/cookie_io_functions_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/clocale\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/select.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/gthr-default.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdio_lim.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn-common.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/typeinfo\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/sched.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/range_access.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/alloc_traits.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wordsize.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/string_conversions.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/timex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/typesizes.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/pthread.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++allocator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/setjmp.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functexcept.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/streambuf\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/timer_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cctype\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endianness.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/stdlib-float.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__sigset_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/exception\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/floatn.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/sys/cdefs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/type_traits.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_string.tcc\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/functional_hash.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/ctype_inline.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/backward/binders.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/debug/assertions.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/istream\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/locale_facets.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/alloca.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/time64.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_pair.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_mutex.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/struct_rwlock.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/atomic_wide_counter.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/wchar.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/endian.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_iterator_base_funcs.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/move.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/time_t.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/error_constants.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/asm-generic/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/gnu/stubs-64.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/libc-header-start.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/stl_function.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdint.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/basic_ios.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf_iterator.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/FILE.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/wctype-wchar.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/stdexcept\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/nested_exception.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__FILE.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/cstdint\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/struct_sched_param.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/time.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/ext/atomicity.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/streambuf.tcc\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/__fpos64_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/types/error_t.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/bits/cpu-set.h\u0000\u0002/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/bits/hash_bytes.h\u0000\u0002/nix/store/i38jcxrwa4fxk2b7acxircpi399kyixw-linux-headers-6.0/include/linux/errno.h\u0000\u0002/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdlib.h\u0000\u0002/nix/store/lhdb04f0by4qnvhhwbk64zpm70fw5piy-clang-14.0.6-lib/lib/clang/14.0.6/include/__stddef_max_align_t.h\u0000\u0002\u0001H/nix/store/1gf2flfqnpqbr1b4p4qz2f72y42bs56r-gcc-11.3.0/include/c++/11.3.0/x86_64-unknown-linux-gnu/bits/c++config.h\u0000\bï¿½\u0000ï¿½\fï¿½\u000f\u0001\u0000ï¿½\u0011\u0001\fï¿½\u0012\u0001\u0000ï¿½\u0014\u0001\fï¿½\u0015\u0001\u0000ï¿½\u0017\u0001\fï¿½\u0001\u0000ï¿½\u0001\u001eï¿½\u0001\u0000ï¿½\u0001\fï¿½\u0001\u0000ï¿½\u0001\nï¿½\n\u0002\u0000ï¿½\u001e\u0002\f\u0001ï¿½\nï¿½\u0002Vï¿½inline _Iterator std::__miter_base(_Iterator __it)\u0000\",\u0018\u0001ï¿½/\u0002\bï¿½/\u0002 ï¿½\u0002\u0004\u0001ï¿½.\u0002\bï¿½0\u0002(\u0000Fallback implementation of the function in bits/stl_iterator.h used to\nremove the move_iterator wrapper.\u0000\u0000\u0001ï¿½\u000fï¿½dy[ï¿½\u0000\f\u0003\u0000\u0000\u0000\u0000ï¿½JÑçµï¿½\u001e_Iterator\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½,\u0002(ï¿½,\u0002:\u0001\u0001ï¿½,\u0002\u0016ï¿½,\u0002:\u0000\u0001ï¿½\u000fï¿½dy[ï¿½\u0002ï¿½.\u0002\u0016ï¿½.\u0002(\u0004\u0001ï¿½/\u0002\"ï¿½/\u00024\u0004\u0001ï¿½Nï¿½u\u0003ï¿½\u0014ï¿½typedef std::__false_type std::__is_move_iterator::__type\u00004f\f\u0000\u0000\u0001ï¿½'\u00026ï¿½'\u0002Bï¿½\u0002\u0004\u0001ï¿½'\u0002\fï¿½'\u0002B\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½.ï¿½]ï¿½Ø\u0000anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½&\u0002\fï¿½&\u0002\u0014ï¿½\u0002\u0004\u0001ï¿½&\u0002\fï¿½&\u00024\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½%\u0016ï¿½[J\u0012ï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½#\u0002(ï¿½#\u0002.ï¿½\u0001\u0004\u0001ï¿½#\u0002\u0016ï¿½#\u0002.\u0000\u0000\u0000ï¿½Uï¿½\u001cOï¿½()\u000e_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½\u0005\u0002Hï¿½\u0005\u0002N\u0004\u0001ï¿½a\\ï¿½Gï¿½_Up\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0001Dï¿½\u0001Jï¿½\u0001\u0004\u0001ï¿½\u00012ï¿½\u0001J\u0000\u0000\u0002ï¿½\u0001ï¿½\u0001ï¿½\u0004\u0001ï¿½\u0001\u00020ï¿½\u0001\u00026\u0004\u0001ï¿½P\bÏï¿½-ï¿½struct std::__is_memcmp_ordered_with {}\u0000\u000e\u00180\u0000Whether two types can be compared using memcmp.\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001Fï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0002\u0002\n\u0000\u0000\u0002ï¿½7ï¿½\u0012ï¿½\u0011\\jï¿½a\\ï¿½Gï¿½\u0000\u0000\u0017\u0003\u0000\u0001ï¿½N\u0002ï¿½|*ï¿½\u0000\u0001ï¿½\u0005\u0002\u0016ï¿½\u0005\u0002F\u0004\u0001ï¿½7ï¿½\u0012ï¿½\u0011\\jï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0001(ï¿½\u0001.ï¿½\u0001\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001.\u0000\u0000\u0002ï¿½\u0001jï¿½\u0001p\u0004\u0001ï¿½\u0000\u0002lï¿½\u0000\u0002r\u0004\u0001ï¿½/J\n3h0m\u001d_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½\u0001>ï¿½\u0001D\u0004\u0001ï¿½p\u001c9sï¿½S;\"template <typename _Tp> struct std::__is_memcmp_ordered<_Tp, false> {}\u0000>H&\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001<ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\n\u0001ï¿½\u0016ï¿½e8ï¿½S1'\u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½\u0016ï¿½e8ï¿½S1'struct std::__is_memcmp_ordered {}\u0000\u000e\u0018&\u0000Whether memcmp can be used to determine ordering for a type\ne.g. in std::lexicographical_compare or three-way comparisons.\nTrue for unsigned integer-like types where comparing each byte in turn\nas an unsigned char yields the right result. This is true for all\nunsigned integers on big endian targets, but only unsigned narrow\ncharacter types (and std::byte) on little endian targets.\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001<ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001\n\u0000\u0000\u0001ï¿½o(ï¿½zï¿½D\u0000\u0000\u0017\u0003\u0000\u0001ï¿½p\u001c9sï¿½S;\"\u0000\u0003ï¿½\u0001\u0016ï¿½\u0001<\u0004\u0001ï¿½\u0000\u0002Dï¿½\u0000\u0002j\u0004\u0001ï¿½\u0001\u0002\bï¿½\u0001\u0002.\u0004\u0001ï¿½vm@-~\u0018Du_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0003ï¿½\u0001Tï¿½\u0001Z\u0004\u0001ï¿½\u0001<ï¿½\u0001B\u0004\u0001ï¿½\u0001Hï¿½\u0001N\u0004\u0001ï¿½Ã®36\u001ci;I_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0003ï¿½\u0001Tï¿½\u0001Z\u0004\u0001ï¿½\u00010ï¿½\u00016\u0004\u0001ï¿½\u0001<ï¿½\u0001B\u0004\u0001ï¿½N\u0002ï¿½|*ï¿½template <typename _Tp, typename _Up> struct std::__is_memcmp_ordered_with<_Tp, _Up, false> {}\u0000Zd0\u0000\u0000\u0001ï¿½\u0005\u0002\u0016ï¿½\u0005\u0002Fï¿½\u0002\u0004\u0001ï¿½\u0004\u0002\u0004ï¿½\b\u0002\n\u0001ï¿½P\bÏï¿½-ï¿½\u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½Qï¿½ytemplate <typename _Tp> struct std::__memcmpable<_Tp *, _Tp *> : __is_nonvolatile_trivially_copyable<_Tp> {}\u0000>H\u0018\u0000OK to use memcmp with pointers to trivially copyable types.\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001.ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\u000e\u0001ï¿½_ï¿½Ò \u0010ï¿½ï¿½\u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½ÔER\u0019ï¿½\u001b_Iter2\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0001Jï¿½\u0001Vï¿½\u0001\u0004\u0001ï¿½\u00018ï¿½\u0001V\u0000\u0000\u0000ï¿½_ï¿½Ò \u0010ï¿½ï¿½struct std::__memcmpable {}\u0000\u000e\u0018\u0018\u0000Whether two iterator types can be used with memcmp.\nThis trait only says it's well-formed to use memcmp, not that it\ngives the right answer for a given algorithm. So for example, std::equal\nneeds to add additional checks that the types are integers or pointers,\nbecause other trivially copyable types can overload operator==.\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001.ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001\n\u0000\u0000\u0003ï¿½u/4Dï¿½Vï¿½ÔER\u0019ï¿½\u001bï¿½\u001dï¿½\"ï¿½\u0000\u0000\u0017\u0003\u0000\u0003ï¿½Qï¿½yï¿½4xï¿½]4\u0010ï¿½K)\u0015gT-ï¿½_\u0000\u0003ï¿½\u0001\u0016ï¿½\u0001.\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001.\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001.\u0004\u0001ï¿½F?ï¿½P8\u0005anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u00014\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½i1ï¿½]R_InputIter\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0001Tï¿½\u0001hï¿½\u0001\u0004\u0001ï¿½\u0001Bï¿½\u0001h\u0000\u0000\u0000ï¿½\u000bï¿½ï¿½_OutputIter\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0001(ï¿½\u0001>ï¿½\u0001\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001>\u0000\u0000\u0000ï¿½@ï¿½Ep\u001b\b_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½\u0001pï¿½\u0001v\u0004\u0001ï¿½i.ï¿½ÈKï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½Oï¿½\u001dÓ§ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u0001j\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½3ï¿½PCUï¿½\u0005dstruct std::__is_nonvolatile_trivially_copyable {}\u0000\u000e\u0018F\u0000A type that is safe for use with memcpy, memmove, memcmp etc.\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001\\ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001\n\u0000\u0000\u0002ï¿½`U>ï¿½gï¿½Oï¿½\u001dÓ§ï¿½\u0000\u0000\u0017\u0003\u0000\u0001ï¿½[ï¿½\u000f\u0014ï¿½\u0000\u0006ï¿½\u0001\u0016ï¿½\u0001\\\u0004\u0001ï¿½\u0001\fï¿½\u0001Rï¿½\u0004\b\u0001ï¿½\u0001\fï¿½\u0001Rï¿½\u0004\b\u0001ï¿½\u0001\fï¿½\u0001Rï¿½\u0004\b\u0001ï¿½\u0001\fï¿½\u0001Rï¿½\u0004\b\u0001ï¿½\u0001\fï¿½\u0001Rï¿½\u0004\b\u0001ï¿½`U>ï¿½g_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0001(ï¿½\u0001.ï¿½\u0001\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001.\u0000\u0000\u0001ï¿½\u0001^ï¿½\u0001d\u0004\u0001ï¿½\u00181e,ï¿½\n\u001fï¿½typedef std::__true_type std::__is_byte<unsigned char>::__type\u00002p\f\u0000\u0000\u0001ï¿½\u00014ï¿½\u0001@ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½c\u0010ï¿½|\tanon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u001dï¿½\"ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u00014\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½\"mOï¿½$Vtypedef std::__true_type std::__is_integer<unsigned short>::__type\u00002x\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½Iï¿½\\wï¿½Cï¿½\\typedef std::__true_type std::__is_integer<short>::__type\u00002f\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½cdï¿½vanon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½oï¿½\tï¿½\u0018&template<> struct std::__is_integer<short> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½cdï¿½vï¿½Iï¿½\\wï¿½Cï¿½\\\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½\nï¿½&ï¿½\\*\u001atemplate<> struct std::__is_integer<int> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½&ï¿½=z+K\u0006lï¿½q,ï¿½/ï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½yï¿½<\u0005ï¿½9^template<> struct std::__is_integer<long> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½cï¿½f\nuï¿½\u0000\u0014ï¿½~\f\u0010\u0011\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½rRï¿½zß:Wtypedef std::__true_type std::__is_integer<long long>::__type\u00002n\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½cï¿½\u001dx7ï¿½template<> struct std::__is_integer<char16_t> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½1ï¿½[u[w^ï¿½\u0017ï¿½lnï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½s\u001bOï¿½i<ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½7\u0001\fï¿½7\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½7\u0001\fï¿½7\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½KroX; struct std::__memcpyable {}\u0000\u000e\u0018\u0018\u0000Whether two iterator types can be used with memcpy/memmove.\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001.ï¿½\u0002\u0004\u0001ï¿½\u0001\bï¿½\u0001\n\u0000\u0000\u0003ï¿½\u000bï¿½ï¿½i1ï¿½]Rï¿½F?ï¿½P8\u0005\u0000\u0000\u0017\u0003\u0000\u0002ï¿½+Rï¿½bï¿½\fGï¿½/3\tï¿½\u0000\u0002ï¿½\u0001\u0016ï¿½\u0001.\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001.\u0004\u0001ï¿½uï¿½\fï¿½lÞï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½1ï¿½(ï¿½wtemplate<> struct std::__is_integer<unsigned int> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½|\u0002_`ï¿½B|ï¿½Xï¿½\u001e\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½nï¿½\tmï¿½âtypedef std::__true_type std::__is_integer<wchar_t>::__type\u00002j\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½]ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u0007#@\u00025ï¿½ ï¿½typedef std::__true_type std::__is_integer<unsigned char>::__type\u00002v\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½ ï¿½Ã=ï¿½\u0011ï¿½typedef std::__true_type std::__is_integer<__int128>::__type\u00002l\f\u0000\u0000\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>ï¿½\u0002\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001\u000e\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0001ï¿½\u0003\u00014ï¿½\u0003\u0001@@\u0000ï¿½Oï¿½\u0010S\\?x_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0003ï¿½\u0001Tï¿½\u0001Z\u0004\u0001ï¿½\u00010ï¿½\u00016\u0004\u0001ï¿½\u0001Hï¿½\u0001N\u0004\u0001ï¿½&ï¿½=z+K\u0006lanon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½Ç½mtypedef std::__true_type std::__is_floating<double>::__type\u00002j\f\u0000\u0000\u0001ï¿½1\u00014ï¿½1\u0001@ï¿½\u0002\u0004\u0001ï¿½1\u0001\fï¿½1\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\fGï¿½/3\tï¿½template <typename _Tp> struct std::__memcpyable<_Tp *, const _Tp *> : __is_nonvolatile_trivially_copyable<_Tp> {}\u0000>H\u0018\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001.ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\u000e\u0001ï¿½KroX; \u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½N\u0015\u0006ï¿½Ï«ï¿½_anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½Nï¿½Lï¿½/ï¿½template<> struct std::__is_integer<unsigned char> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½N\u0015\u0006ï¿½Ï«ï¿½_ï¿½\u0007#@\u00025ï¿½ ï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½Zsï¿½mstruct std::__is_void {}\u0000\u000e\u0018\u0012\u0000Holds if the template-argument is a void type.\u0000\u0001m\u0016m(ï¿½\u0002\u0004\u0001m\bq\n\u0000\u0000\u0003ï¿½&CQVÉ\fï¿½\u000e4ï¿½\u0015\u000e$Yï¿½\u001cï¿½\u0000\u0000\u0017\u0003\u0000\u0001ï¿½|ï¿½\u0003\u0000\u0000ï¿½4ï¿½\u000fï¿½ttemplate<> struct std::__is_integer<signed char> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½{ï¿½\bjï¿½\u001bï¿½\u001b7QËï¿½\u0004]\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½&CQVÉ\f_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001l(l.ï¿½\u0001\u0004\u0001l\u0016l.\u0000\u0000\u0000ï¿½+Rï¿½bï¿½template <typename _Tp> struct std::__memcpyable<_Tp *, _Tp *> : __is_nonvolatile_trivially_copyable<_Tp> {}\u0000>H\u0018\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001.ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\u000e\u0001ï¿½KroX; \u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½.3ï¿½5ï¿½Ñ£typedef std::__true_type std::__is_integer<char>::__type\u00002d\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½5ï¿½=ï¿½Î(anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>ï¿½\u0002\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001\u000e\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0001ï¿½\u0002\u0001\fï¿½\u0002\u0001\u0014@\u0000ï¿½vï¿½)WÍ¥ï¿½*typedef std::__false_type std::__is_pointer::__type\u00004Z\f\u0000\u0000\u0001ï¿½B\u00016ï¿½B\u0001Bï¿½\u0002\u0004\u0001ï¿½B\u0001\fï¿½B\u0001B\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½u/4Dï¿½Vï¿½_Iter1\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0001(ï¿½\u00014ï¿½\u0001\u0004\u0001ï¿½\u0001\u0016ï¿½\u00014\u0000\u0000\u0000ï¿½\f\u000bï¿½Bï¿½<typedef std::__true_type std::__is_integer<bool>::__type\u00002d\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½k\u0016>PYï¿½\u001e}template<> struct std::__is_integer<char> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½cï¿½v\u0011ï¿½\u0005ï¿½.3ï¿½5ï¿½Ñ£\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½QC\u0004Rï¿½\u0005\u001aanon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½vï¿½Wï¿½template<> struct std::__is_integer<bool> {}\u0000$.\u0018\u0000Thirteen specializations (yes there are eleven standard integer\ntypes; <em>long long</em> and <em>unsigned long long</em> are\nsupported as extensions).  Up to four target-specific __int<N>\ntypes are supported as well.\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½QC\u0004Rï¿½\u0005\u001aï¿½\f\u000bï¿½Bï¿½<\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½4xï¿½]4\u0010ï¿½template <typename _Tp> struct std::__memcmpable<const _Tp *, _Tp *> : __is_nonvolatile_trivially_copyable<_Tp> {}\u0000>H\u0018\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001.ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\u000e\u0001ï¿½_ï¿½Ò \u0010ï¿½ï¿½\u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½4ï¿½\u001cï¿½wD\u0013Ctypedef std::__false_type std::__is_integer::__type\u00004Z\f\u0000\u0000\u0001ï¿½6ï¿½Bï¿½\u0002\u0004\u0001ï¿½\fï¿½B\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½\bI\u0010ï¿½[struct std::__is_move_iterator {}\u0000\u000e\u0018$\u0000Move iterator type\u0000\u0001ï¿½$\u0002\u0016ï¿½$\u0002:ï¿½\u0002\u0004\u0001ï¿½$\u0002\bï¿½(\u0002\n\u0000\u0000\u0003ï¿½%\u0016ï¿½[J\u0012ï¿½.ï¿½]ï¿½Ø\u0000ï¿½Nï¿½u\u0003ï¿½\u0014ï¿½\u0000\u0000\u0017\u0003\u0000\u0000\u0000\u0000ï¿½zï¿½&ï¿½\u001bstruct std::__are_same {}\u0000\u000e\u0018\u0014\u0000Compare for equality of types.\u0000\u0001^\u0016^*ï¿½\u0002\u0004\u0001^\bb\n\u0000\u0000\u0002ï¿½oï¿½\"ï¿½N\u0005ï¿½Ol{ï¿½[\tï¿½;\u0000\u0000\u0017\u0003\u0000\u0001ï¿½\u0012\"Û³6\b\u0000\u0001e\u0016e*\u0004\u0001ï¿½\u0010ï¿½\u0003_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001}(}.ï¿½\u0001\u0004\u0001}\u0016}.\u0000\u0000\u0000ï¿½Pï¿½bfÆï¿½typedef std::__true_type std::__truth_type<true>::__type\u00002d\f\u0000\u0000\u0001Q4Q@ï¿½\u0002\u0004\u0001Q\fQ@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u001aï¿½}ï¿½P\u0004struct std::__traitor {}\u0000\u000e\u0018\u0012\u0000N.B. The conversions to bool are needed due to the issue\nexplained in c++/19404.\u0000\u0001V\u0016V(ï¿½\u0002\u0004\u0001V\bZ\n\u0000\u0000\u0004ï¿½\u001d0:ï¿½V@Bï¿½uï¿½\u0002ï¿½xï¿½;ï¿½.yï¿½_ï¿½f\u0005\u0017\f\u0016%ï¿½\u0000\u0000\u0017\u0003\u0000\u0002ï¿½]ï¿½Æibï¿½Gï¿½3zï¿½\u0000\u0002ï¿½Q\u0001\u001aï¿½Q\u0001,ï¿½\u0004\b\u0001ï¿½Y\u0001\u001aï¿½Y\u0001,ï¿½\u0004\b\u0001ï¿½\u0015\u000e$Yï¿½\u001cï¿½typedef std::__false_type std::__is_void::__type\u00004T\f\u0000\u0000\u0001p6pBï¿½\u0002\u0004\u0001p\fpB\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½\b\u000fï¿½\u0018v5ï¿½Banon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½Eï¿½Eï¿½ß#template<> struct std::__is_integer<unsigned __int128> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>ï¿½\u0002\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001\u000e\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½!ï¿½&rÝï¿½jï¿½Sï¿½cw\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0002ï¿½\u0006\u0001\u0016ï¿½\u0006\u0001.@\u0000ï¿½\r\u0001\u0000ï¿½\r\u0001>\u0004\u0001ï¿½R-\u001c3ï¿½=Ntemplate<> struct std::__is_byte<unsigned char> {}\u0000$.\u0012\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\n\u0001ï¿½\u000eï¿½y/H\u0002\u0000\u0002ï¿½c\u0010ï¿½|\tï¿½\u00181e,ï¿½\n\u001fï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001(\u0004\u0001ï¿½lï¿½Iï¿½Mï¿½\u0006template<> struct std::__is_byte<char> {}\u0000$.\u0012\u0000\u0000\u0001ï¿½~\u0001\u0016ï¿½~\u0001(ï¿½\u0002\u0004\u0001ï¿½}\u0001\u0004ï¿½\u0001\n\u0001ï¿½\u000eï¿½y/H\u0002\u0000\u0002ï¿½<\u0016Cï¿½&\u0006ï¿½`ï¿½Uï¿½\u0016S\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½~\u0001\u0016ï¿½~\u0001(\u0004\u0001ï¿½xK3ï¿½typedef std::__false_type std::__truth_type::__type\u00004Z\f\u0000\u0000\u0001M6MBï¿½\u0002\u0004\u0001M\fMB\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0001Y\\Yh\u0004\u0001ï¿½[ï¿½\u000f\u0014ï¿½template <typename _Tp> struct std::__is_nonvolatile_trivially_copyable<volatile _Tp> {}\u0000>HF\u0000Cannot use memcpy/memmove/memcmp on volatile types even if they are\ntrivially copyable, so ensure __memcpyable<volatile int*, volatile int*>\nand similar will be false.\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001\\ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\n\u0001ï¿½3ï¿½PCUï¿½\u0005d\u0000\u0001ï¿½i.ï¿½ÈKï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½\u0010\u0004ï¿½4 ï¿½typedef std::__true_type std::__is_floating<float>::__type\u00002h\f\u0000\u0000\u0001ï¿½*\u00014ï¿½*\u0001@ï¿½\u0002\u0004\u0001ï¿½*\u0001\fï¿½*\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u001d0:ï¿½V@B_Sp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001U\"U(ï¿½\u0001\u0004\u0001U\u0016U(\u0000\u0000\u0001X8X>\u0004\u0001ï¿½FÍ¦ï¿½\u0017ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001v\fv\u0014ï¿½\u0002\u0004\u0001v\fv4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½C\u000fÌ¶ Iï¿½typedef std::__true_type std::__is_char<char>::__type\u00002^\f\u0000\u0000\u0001ï¿½j\u00014ï¿½j\u0001@ï¿½\u0002\u0004\u0001ï¿½j\u0001\fï¿½j\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½f\u0005\u0017\f\u0016%ï¿½typedef typename __truth_type<__value>::__type __type\u0000LP\f\u0000\u0000\u0001YjYvï¿½\u0002\u0004\u0001Y\fYv\u0000\u0000\u0000\u0000\u0000ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½}ï¿½/\u000bdï¿½template<> struct std::__is_integer<char32_t> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½>ï¿½zï¿½2ï¿½@Kqï¿½Dï¿½3\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½^ï¿½$\u0012ï¿½Hï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0002e,e2\u0004\u0001e6e<\u0004\u0001ï¿½Gï¿½$ï¿½\u0014Htemplate<> struct std::__is_char<char> {}\u0000$.\u0012\u0000\u0000\u0001ï¿½g\u0001\u0016ï¿½g\u0001(ï¿½\u0002\u0004\u0001ï¿½f\u0001\u0004ï¿½k\u0001\n\u0001ï¿½Q\u0017ï¿½\u0002Â¹\u000b\u0003\u0000\u0002ï¿½sï¿½\"ï¿½2ï¿½C\u000fÌ¶ Iï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½g\u0001\u0016ï¿½g\u0001(\u0004\u0001ï¿½gï¿½Xï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½oï¿½\"ï¿½N\u0005ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001`\f`\u0014ï¿½\u0002\u0004\u0001`\f`4\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½Xï¿½\u001etypedef std::__true_type std::__is_integer<unsigned int>::__type\u00002t\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½{ï¿½\bjï¿½\u001banon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½uï¿½\u0002ï¿½xï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001U8U>ï¿½\u0001\u0004\u0001U,U>\u0000\u0000\u0001XdXj\u0004\u0001ï¿½\u000fï¿½]ï¿½Þ\u0017ï¿½template<> struct std::__truth_type<true> {}\u0000$.\u0018\u0000\u0000\u0001P\u0016P.ï¿½\u0002\u0004\u0001O\u0004QF\u0001ï¿½}ï¿½~sSgï¿½\u0000\u0001ï¿½Pï¿½bfÆï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001P\u0016P.\u0004\u0001ï¿½8{0ï¿½\nï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½v\u0001(ï¿½v\u0001.ï¿½\u0001\u0004\u0001ï¿½v\u0001\u0016ï¿½v\u0001.\u0000\u0000\u0000ï¿½Å(ï¿½%\\\f3struct std::iterator_traits\u0000\u000e\u0018\u001e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0017\u0000\u0001ï¿½\u00018ï¿½\u0001Vï¿½\u0001\u0004\u0001ï¿½\u0001*ï¿½\u0001V\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½struct std::__true_type {}\u0000\u000e\u0018\u0016\u0000\u0000\u0001H\u0012H(ï¿½\u0002\u0004\u0001H\u0004H0\u0000\u0000\u0000\u0000\u0000\u0017\u0003\u0000\u0000\u0000\u001eQ\u001cQ2\u0004\u0001h\u001ch2\u0004\u0001w\u001cw2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\u001cï¿½2\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>\u0004\u0001ï¿½\u0003\u0001\u001cï¿½\u0003\u00012@\u0000ï¿½\t\u0001\u001cï¿½\t\u00012@\u0000ï¿½*\u0001\u001cï¿½*\u00012\u0004\u0001ï¿½1\u0001\u001cï¿½1\u00012\u0004\u0001ï¿½8\u0001\u001cï¿½8\u00012\u0004\u0001ï¿½I\u0001\u001cï¿½I\u00012\u0004\u0001ï¿½j\u0001\u001cï¿½j\u00012\u0004\u0001ï¿½r\u0001\u001cï¿½r\u00012\u0004\u0001ï¿½\u0001\u001cï¿½\u00012\u0004\u0001ï¿½\u0001\u001cï¿½\u00012\u0004\u0001ï¿½\u0001\u001cï¿½\u00012\u0004\u0001ï¿½M\u0018\u000fï¿½template<> struct std::__is_integer<unsigned long long> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½NfTuh}ï¿½>ï¿½Xï¿½{yï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½\u0017ï¿½*ï¿½qÂ¤struct std::__false_type {}\u0000\u000e\u0018\u0018\u0000\u0000\u0001I\u0012I*ï¿½\u0002\u0004\u0001I\u0004I2\u0000\u0000\u0000\u0000\u0000\u0017\u0003\u0000\u0000\u0000\tM\u001cM4\u0004\u0001a\u001ca4\u0004\u0001p\u001cp4\u0004\u0001ï¿½\u001cï¿½4\u0004\u0001ï¿½\"\u0001\u001cï¿½\"\u00014\u0004\u0001ï¿½B\u0001\u001cï¿½B\u00014\u0004\u0001ï¿½c\u0001\u001cï¿½c\u00014\u0004\u0001ï¿½z\u0001\u001cï¿½z\u00014\u0004\u0001ï¿½'\u0002\u001cï¿½'\u00024\u0004\u0001ï¿½\u001fÑ¿ï¿½$Ê²\rtemplate<> struct std::__is_integer<unsigned short> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½uï¿½\fï¿½lÞï¿½\"mOï¿½$V\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½Ol{ï¿½[\tï¿½;typedef std::__false_type std::__are_same::__type\u00004V\f\u0000\u0000\u0001a6aBï¿½\u0002\u0004\u0001a\faB\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½\u0012\"Û³6\btemplate <typename _Tp> struct std::__are_same<_Tp, _Tp> {}\u0000>H\u0014\u0000\u0000\u0001e\u0016e*ï¿½\u0002\u0004\u0001d\u0004i\n\u0001ï¿½zï¿½&ï¿½\u001b\u0000\u0002ï¿½|Æ©t\f\"Øï¿½\nï¿½f\u0013ï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½o(ï¿½zï¿½D_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u0001(ï¿½\u0001.ï¿½\u0001\u0004\u0001ï¿½\u0001\u0016ï¿½\u0001.\u0000\u0000\u0003ï¿½\u0001\u0016ï¿½\u0001\u001c\u0004\u0001ï¿½\u0001Dï¿½\u0001J\u0004\u0001ï¿½\u0001Xï¿½\u0001^\u0004\u0001ï¿½)\u001dï¿½~ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½)\u0001\fï¿½)\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½)\u0001\fï¿½)\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½|Æ©t\f\"Øanon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001g\fg\u0014ï¿½\u0002\u0004\u0001g\fg4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½Z\bï¿½\u0005ï¿½7ï¿½Jnamespace std {}\u0000\u0014\u0014\u0006\u0000Outline of libstdc++ namespaces.\n\nnamespace std\n{\nnamespace __debug { }\nnamespace __parallel { }\nnamespace __cxx1998 { }\n\nnamespace __detail {\nnamespace __variant { }\t\t\t\t// C++17\n}\n\nnamespace rel_ops { }\n\nnamespace tr1\n{\nnamespace placeholders { }\nnamespace regex_constants { }\nnamespace __detail { }\n}\n\nnamespace tr2 { }\n\nnamespace decimal { }\n\nnamespace chrono { }\t\t\t\t// C++11\nnamespace placeholders { }\t\t\t\t// C++11\nnamespace regex_constants { }\t\t\t// C++11\nnamespace this_thread { }\t\t\t\t// C++11\ninline namespace literals {\t\t\t\t// C++14\ninline namespace chrono_literals { }\t\t// C++14\ninline namespace complex_literals { }\t\t// C++14\ninline namespace string_literals { }\t\t// C++14\ninline namespace string_view_literals { }\t\t// C++17\n}\n}\n\nnamespace abi { }\n\nnamespace __gnu_cxx\n{\nnamespace __detail { }\n}\n\nFor full details see:\nhttp://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html\u0000\u0000\u0000\u0001ï¿½\nï¿½\u0002Vï¿½9ï¿½mï¿½-x72ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½}ï¿½~sSgï¿½\u000fï¿½]ï¿½Þ\u0017ï¿½\u001aï¿½}ï¿½P\u0004ï¿½zï¿½&ï¿½\u001bï¿½\u0012\"Û³6\bï¿½Zsï¿½mï¿½|ï¿½\u0003ï¿½j\u0019ï¿½^\u0006ï¿½vï¿½Wï¿½k\u0016>PYï¿½\u001e}ï¿½4ï¿½\u000fï¿½tï¿½Nï¿½Lï¿½/ï¿½>ï¿½=o&ï¿½8ï¿½cï¿½\u001dx7ï¿½}ï¿½/\u000bdï¿½oï¿½\tï¿½\u0018&ï¿½\u001fÑ¿ï¿½$Ê²\rï¿½\nï¿½&ï¿½\\*\u001aï¿½1ï¿½(ï¿½wï¿½yï¿½<\u0005ï¿½9^ï¿½\u0018ï¿½sï¿½aiï¿½Ã¹\u0013ï¿½M\u0018\u000fï¿½a\u0010.ï¿½R{ï¿½Nï¿½Eï¿½Eï¿½ß#ï¿½\u0011\u0010ï¿½+ï¿½fï¿½(ï¿½\u000b?.2ï¿½\u0012ï¿½\nï¿½Ýï¿½pNï¿½N \f\u0001\u0002ï¿½jï¿½\u0011}\u0007ï¿½]ï¿½Æibï¿½Gï¿½3zï¿½Q\u0017ï¿½\u0002Â¹\u000b\u0003ï¿½Gï¿½$ï¿½\u0014Hï¿½\u000e`ï¿½\u0013ï¿½\u0017ï¿½\u000eï¿½y/H\u0002ï¿½lï¿½Iï¿½Mï¿½\u0006ï¿½[Z6Û¾ï¿½R-\u001c3ï¿½=Nï¿½Å(ï¿½%\\\f3ï¿½3ï¿½PCUï¿½\u0005dï¿½[ï¿½\u000f\u0014ï¿½KroX; ï¿½+Rï¿½bï¿½\fGï¿½/3\tï¿½_ï¿½Ò \u0010ï¿½ï¿½Qï¿½yï¿½4xï¿½]4\u0010ï¿½K)\u0015gT-ï¿½_ï¿½\u0016ï¿½e8ï¿½S1'ï¿½p\u001c9sï¿½S;\"ï¿½P\bÏï¿½-ï¿½N\u0002ï¿½|*ï¿½\bI\u0010ï¿½[\u0000\u0000\u0003\u0000\u0001D\u0014D\u001a\u0001\u0001D\u0000ï¿½3\u0002\u0002\u0000\u0000\u0000ï¿½\nï¿½f\u0013ï¿½typedef std::__true_type std::__are_same<type-parameter-0-0, type-parameter-0-0>::__type\u00002ï¿½\f\u0000\u0000\u0001h4h@ï¿½\u0002\u0004\u0001h\fh@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u001b7QËï¿½\u0004]typedef std::__true_type std::__is_integer<signed char>::__type\u00002r\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½sï¿½\"ï¿½2anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½i\u0001\fï¿½i\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½i\u0001\fï¿½i\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u000e4anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001o\fo\u0014ï¿½\u0002\u0004\u0001o\fo4\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½wsFï¿½zB\ftypedef std::__true_type std::__is_void<void>::__type\u00002^\f\u0000\u0000\u0001w4w@ï¿½\u0002\u0004\u0001w\fw@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½OVPï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½>\u0001(ï¿½>\u0001.ï¿½\u0001\u0004\u0001ï¿½>\u0001\u0016ï¿½>\u0001.\u0000\u0000\u0000ï¿½@Kqï¿½Dï¿½3typedef std::__true_type std::__is_integer<char32_t>::__type\u00002l\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½|ï¿½\u0003template<> struct std::__is_void<void> {}\u0000$.\u0012\u0000\u0000\u0001t\u0016t(ï¿½\u0002\u0004\u0001s\u0004x\n\u0001ï¿½Zsï¿½m\u0000\u0002ï¿½FÍ¦ï¿½\u0017ï¿½wsFï¿½zB\f\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001t\u0016t(\u0004\u0001ï¿½\u0000\u0014ï¿½~\f\u0010\u0011typedef std::__true_type std::__is_integer<long>::__type\u00002d\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½j\u0019ï¿½^\u0006ï¿½struct std::__is_integer {}\u0000\u000e\u0018\u0018\u0000Integer types\u0000\u0001~\u0016~.ï¿½\u0002\u0004\u0001~\bï¿½\n\u0000\u0000\u0003ï¿½\u0010ï¿½\u0003ï¿½\b\u000fï¿½\u0018v5ï¿½Bï¿½4ï¿½\u001cï¿½wD\u0013C\u0000\u0000\u0017\u0003\u0000\u0011ï¿½vï¿½Wï¿½k\u0016>PYï¿½\u001e}ï¿½4ï¿½\u000fï¿½tï¿½Nï¿½Lï¿½/ï¿½>ï¿½=o&ï¿½8ï¿½cï¿½\u001dx7ï¿½}ï¿½/\u000bdï¿½oï¿½\tï¿½\u0018&ï¿½\u001fÑ¿ï¿½$Ê²\rï¿½\nï¿½&ï¿½\\*\u001aï¿½1ï¿½(ï¿½wï¿½yï¿½<\u0005ï¿½9^ï¿½\u0018ï¿½sï¿½aiï¿½Ã¹\u0013ï¿½M\u0018\u000fï¿½a\u0010.ï¿½R{ï¿½Nï¿½Eï¿½Eï¿½ß#\u0000\u0001ï¿½Q\u0001.ï¿½Q\u0001F\u0004\u0001ï¿½9ï¿½\u0017^\u0007anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½}ï¿½~sSgï¿½struct std::__truth_type {}\u0000\u000e\u0018\u0018\u0000\u0000\u0001L\u0016L.ï¿½\u0002\u0004\u0001L\bMH\u0000\u0000\u0001ï¿½xK3ï¿½\u0000\u0000\u0017\u0003\u0000\u0001ï¿½\u000fï¿½]ï¿½Þ\u0017ï¿½\u0000\u0001Y.YF\u0004\u0001ï¿½\u001dï¿½mï¿½hAtypedef std::__true_type std::__is_char<wchar_t>::__type\u00002d\f\u0000\u0000\u0001ï¿½r\u00014ï¿½r\u0001@ï¿½\u0002\u0004\u0001ï¿½r\u0001\fï¿½r\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u0019ï¿½6ï¿½,_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½F\u00010ï¿½F\u00016\u0004\u0001ï¿½cï¿½f\nuï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u0011\u0010ï¿½+ï¿½fstruct std::__is_floating {}\u0000\u000e\u0018\u001a\u0000Floating point types\u0000\u0001ï¿½\u001f\u0001\u0016ï¿½\u001f\u00010ï¿½\u0002\u0004\u0001ï¿½\u001f\u0001\bï¿½#\u0001\n\u0000\u0000\u0003ï¿½Vï¿½Y\tï¿½Fï¿½\u001eÅï¿½\u0013ï¿½,ï¿½Dï¿½66\u0000\u0000\u0017\u0003\u0000\u0003ï¿½(ï¿½\u000b?.2ï¿½\u0012ï¿½\nï¿½Ýï¿½pNï¿½\u0000\u0001ï¿½Q\u0001Tï¿½Q\u0001n\u0004\u0001ï¿½\u0017ï¿½lnï¿½typedef std::__true_type std::__is_integer<char16_t>::__type\u00002l\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½|\u0002_`ï¿½B|anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u0012ï¿½\nï¿½template<> struct std::__is_floating<double> {}\u0000$.\u001a\u0000\u0000\u0001ï¿½.\u0001\u0016ï¿½.\u00010ï¿½\u0002\u0004\u0001ï¿½-\u0001\u0004ï¿½2\u0001\n\u0001ï¿½\u0011\u0010ï¿½+ï¿½f\u0000\u0002ï¿½fAï¿½\b8ï¿½Rï¿½Ç½m\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½.\u0001\u0016ï¿½.\u00010\u0004\u0001ï¿½NfTuh}ï¿½>anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½>ï¿½zï¿½2ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½tï¿½=ï¿½Zï¿½typedef std::__true_type std::__is_pointer<type-parameter-0-0 *>::__type\u00002ï¿½\f\u0000\u0000\u0001ï¿½I\u00014ï¿½I\u0001@ï¿½\u0002\u0004\u0001ï¿½I\u0001\fï¿½I\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½a\u0010.ï¿½R{ï¿½Ntemplate<> struct std::__is_integer<__int128> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>ï¿½\u0002\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001\u000e\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½5ï¿½=ï¿½Î(ï¿½ ï¿½Ã=ï¿½\u0011ï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0002ï¿½\u0000\u0001\u0016ï¿½\u0000\u0001.@\u0000ï¿½\r\u0001\u0000ï¿½\r\u0001>\u0004\u0001ï¿½jï¿½\u0011}\u0007ï¿½template <typename _Tp> struct std::__is_pointer<_Tp *> {}\u0000>H\u0018\u0000\u0000\u0001ï¿½F\u0001\u0016ï¿½F\u0001.ï¿½\u0002\u0004\u0001ï¿½E\u0001\u0004ï¿½J\u0001\n\u0001ï¿½N \f\u0001\u0002ï¿½\u0000\u0002ï¿½\u000eï¿½Qï¿½\u0006ï¿½tï¿½=ï¿½Zï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½,ï¿½Dï¿½66typedef std::__false_type std::__is_floating::__type\u00004\\\f\u0000\u0000\u0001ï¿½\"\u00016ï¿½\"\u0001Bï¿½\u0002\u0004\u0001ï¿½\"\u0001\fï¿½\"\u0001B\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½Nï¿½6Zï¿½~M_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½_\u0001(ï¿½_\u0001.ï¿½\u0001\u0004\u0001ï¿½_\u0001\u0016ï¿½_\u0001.\u0000\u0000\u0000ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005ï¿½-g\u001fNiÔï¿½tï¿½LgÂ³ï¿½\u0011;ï¿½`Eï¿½{ï¿½[.`ï¿½Rï¿½\u0001Xï¿½^6ï¿½\u0000ï¿½!ï¿½&rÝanon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>ï¿½\u0002\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001\u000e\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0001ï¿½\b\u0001\fï¿½\b\u0001\u0014@\u0000ï¿½=ï¿½ \f\u000f_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0003ï¿½\u0001Tï¿½\u0001Z\u0004\u0001ï¿½\u00010ï¿½\u00016\u0004\u0001ï¿½\u0001Hï¿½\u0001N\u0004\u0001ï¿½jï¿½Sï¿½cwtypedef std::__true_type std::__is_integer<unsigned __int128>::__type\u00002~\f\u0000\u0000\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>ï¿½\u0002\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001\u000e\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0001ï¿½\t\u00014ï¿½\t\u0001@@\u0000ï¿½H\u0019^ï¿½_Up\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0001ï¿½\u0005\u0002Rï¿½\u0005\u0002X\u0004\u0001ï¿½Vï¿½Y\tï¿½Fï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½\u001e\u0001(ï¿½\u001e\u0001.ï¿½\u0001\u0004\u0001ï¿½\u001e\u0001\u0016ï¿½\u001e\u0001.\u0000\u0000\u0000ï¿½1ï¿½[u[w^ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u0018ï¿½sï¿½template<> struct std::__is_integer<unsigned long> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½gï¿½Xï¿½Tï¿½<ï¿½Erï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½\u001eÅï¿½\u0013ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½!\u0001\fï¿½!\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½!\u0001\fï¿½!\u00014\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½1ï¿½2$\u000fï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0000\u0000\u0000\u0003ï¿½\u0001Tï¿½\u0001Z\u0004\u0001ï¿½\u00010ï¿½\u00016\u0004\u0001ï¿½\u0001<ï¿½\u0001B\u0004\u0001ï¿½(ï¿½\u000b?.2ï¿½template<> struct std::__is_floating<float> {}\u0000$.\u001a\u0000three specializations (float, double and 'long double')\u0000\u0001ï¿½'\u0001\u0016ï¿½'\u00010ï¿½\u0002\u0004\u0001ï¿½&\u0001\u0004ï¿½+\u0001\n\u0001ï¿½\u0011\u0010ï¿½+ï¿½f\u0000\u0002ï¿½)\u001dï¿½~ï¿½\u0010\u0004ï¿½4 ï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½'\u0001\u0016ï¿½'\u00010\u0004\u0001ï¿½>ï¿½=o&ï¿½8template<> struct std::__is_integer<wchar_t> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½]ï¿½nï¿½\tmï¿½â\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½fAï¿½\b8ï¿½Ranon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½0\u0001\fï¿½0\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½0\u0001\fï¿½0\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½Xï¿½{yï¿½typedef std::__true_type std::__is_integer<unsigned long long>::__type\u00002ï¿½\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½Ýï¿½pNï¿½template<> struct std::__is_floating<long double> {}\u0000$.\u001a\u0000\u0000\u0001ï¿½5\u0001\u0016ï¿½5\u00010ï¿½\u0002\u0004\u0001ï¿½4\u0001\u0004ï¿½9\u0001\n\u0001ï¿½\u0011\u0010ï¿½+ï¿½f\u0000\u0002ï¿½s\u001bOï¿½i<ï¿½&ï¿½Yï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½5\u0001\u0016ï¿½5\u00010\u0004\u0001ï¿½Tï¿½<ï¿½Erï¿½typedef std::__true_type std::__is_integer<unsigned long>::__type\u00002v\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½&ï¿½Yï¿½typedef std::__true_type std::__is_floating<long double>::__type\u00002t\f\u0000\u0000\u0001ï¿½8\u00014ï¿½8\u0001@ï¿½\u0002\u0004\u0001ï¿½8\u0001\fï¿½8\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u000e`ï¿½\u0013ï¿½\u0017template<> struct std::__is_char<wchar_t> {}\u0000$.\u0012\u0000\u0000\u0001ï¿½o\u0001\u0016ï¿½o\u0001(ï¿½\u0002\u0004\u0001ï¿½n\u0001\u0004ï¿½s\u0001\n\u0001ï¿½Q\u0017ï¿½\u0002Â¹\u000b\u0003\u0000\u0002ï¿½Óªï¿½Êï¿½iï¿½\u001dï¿½mï¿½hA\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½o\u0001\u0016ï¿½o\u0001(\u0004\u0001ï¿½\u000eï¿½Qï¿½\u0006ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½H\u0001\fï¿½H\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½H\u0001\fï¿½H\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½N \f\u0001\u0002ï¿½struct std::__is_pointer {}\u0000\u000e\u0018\u0018\u0000Pointer types\u0000\u0001ï¿½?\u0001\u0016ï¿½?\u0001.ï¿½\u0002\u0004\u0001ï¿½?\u0001\bï¿½C\u0001\n\u0000\u0000\u0003ï¿½OVPï¿½\u0013jï¿½1+`]ï¿½vï¿½)WÍ¥ï¿½*\u0000\u0000\u0017\u0003\u0000\u0001ï¿½jï¿½\u0011}\u0007ï¿½\u0000\u0002ï¿½F\u0001\u0016ï¿½F\u0001.\u0004\u0001ï¿½Y\u0001Zï¿½Y\u0001r\u0004\u0001ï¿½\u0018ï¿½'ï¿½\u0003ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½b\u0001\fï¿½b\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½b\u0001\fï¿½b\u00014\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½]ï¿½Æibï¿½Gstruct std::__is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp>> {}\u0000\u000e\u0018\u001e\u0000An arithmetic type is an integer type or a floating point type\u0000\u0001ï¿½P\u0001\u0016ï¿½P\u00014ï¿½\u0002\u0004\u0001ï¿½P\u0001\bï¿½R\u0001\u000e\u0001ï¿½\u001aï¿½}ï¿½P\u0004\u0000\u0001ï¿½l;ï¿½\u0015ï¿½\u0000\u0000\u0017\u0003\u0000\u0000\u0000\u0001ï¿½Y\u0001.ï¿½Y\u0001L\u0004\u0001ï¿½{ï¿½:t\u0018nMï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½W\u0001(ï¿½W\u0001.ï¿½\u0001\u0004\u0001ï¿½W\u0001\u0016ï¿½W\u0001.\u0000\u0000\u0002ï¿½Y\u0001Nï¿½Y\u0001T\u0004\u0001ï¿½Y\u0001tï¿½Y\u0001z\u0004\u0001ï¿½aiï¿½Ã¹\u0013ï¿½template<> struct std::__is_integer<long long> {}\u0000$.\u0018\u0000\u0000\u0001ï¿½\u0016ï¿½.ï¿½\u0002\u0004\u0001ï¿½\u0004ï¿½\n\u0001ï¿½j\u0019ï¿½^\u0006ï¿½\u0000\u0002ï¿½9ï¿½\u0017^\u0007ï¿½rRï¿½zß:W\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0016ï¿½.\u0004\u0001ï¿½3zï¿½struct std::__is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp>> {}\u0000\u000e\u0018\u0016\u0000A scalar type is an arithmetic type or a pointer type\u0000\u0001ï¿½X\u0001\u0016ï¿½X\u0001,ï¿½\u0002\u0004\u0001ï¿½X\u0001\bï¿½Z\u0001\u000e\u0001ï¿½\u001aï¿½}ï¿½P\u0004\u0000\u0001ï¿½{ï¿½:t\u0018nMï¿½\u0000\u0000\u0017\u0003\u0000\u0000\u0000\u0000ï¿½Q\u0017ï¿½\u0002Â¹\u000b\u0003struct std::__is_char {}\u0000\u000e\u0018\u0012\u0000For use in std::copy and std::find overloads for streambuf iterators.\u0000\u0001ï¿½`\u0001\u0016ï¿½`\u0001(ï¿½\u0002\u0004\u0001ï¿½`\u0001\bï¿½d\u0001\n\u0000\u0000\u0003ï¿½Nï¿½6Zï¿½~Mï¿½\u0018ï¿½'ï¿½\u0003ï¿½Ù¸Q%ï¿½\u0000\u0000\u0017\u0003\u0000\u0002ï¿½Gï¿½$ï¿½\u0014Hï¿½\u000e`ï¿½\u0013ï¿½\u0017\u0000\u0000ï¿½Óªï¿½Êï¿½ianon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½q\u0001\fï¿½q\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½q\u0001\fï¿½q\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u0013jï¿½1+`]anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½A\u0001\fï¿½A\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½A\u0001\fï¿½A\u00014\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½Ù¸Q%ï¿½typedef std::__false_type std::__is_char::__type\u00004T\f\u0000\u0000\u0001ï¿½c\u00016ï¿½c\u0001Bï¿½\u0002\u0004\u0001ï¿½c\u0001\fï¿½c\u0001B\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½cï¿½v\u0011ï¿½\u0005anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\fï¿½\u0014ï¿½\u0002\u0004\u0001ï¿½\fï¿½4\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½q,ï¿½/ï¿½typedef std::__true_type std::__is_integer<int>::__type\u00002b\f\u0000\u0000\u0001ï¿½4ï¿½@ï¿½\u0002\u0004\u0001ï¿½\fï¿½@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½\u000eï¿½y/H\u0002struct std::__is_byte {}\u0000\u000e\u0018\u0012\u0000\u0000\u0001ï¿½w\u0001\u0016ï¿½w\u0001(ï¿½\u0002\u0004\u0001ï¿½w\u0001\bï¿½{\u0001\n\u0000\u0000\u0003ï¿½8{0ï¿½\nï¿½'ï¿½\tï¿½1_\u0001ï¿½\u0015Vï¿½zï¿½\u0000\u0000\u0017\u0003\u0000\u0003ï¿½lï¿½Iï¿½Mï¿½\u0006ï¿½[Z6Û¾ï¿½R-\u001c3ï¿½=N\u0000\u0001ï¿½\u0001\u0002ï¿½\u0001\u0014\u0004\u0001ï¿½'ï¿½\tï¿½1_\u0001anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½y\u0001\fï¿½y\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½y\u0001\fï¿½y\u00014\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½;ï¿½.yï¿½_ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001X\fX\u0014ï¿½\u0002\u0004\u0001X\fXï¿½\u0000\u0000\u0000\u0000\u0000\n\u0017\u0000\u0000\u0000\u0000ï¿½\u0015Vï¿½zï¿½typedef std::__false_type std::__is_byte::__type\u00004T\f\u0000\u0000\u0001ï¿½z\u00016ï¿½z\u0001Bï¿½\u0002\u0004\u0001ï¿½z\u0001\fï¿½z\u0001B\u0000\u0000\u0000\u0000ï¿½\u0017ï¿½*ï¿½qÂ¤ï¿½\u0017\u0000\u0000\u0000\u0000ï¿½<\u0016Cï¿½&\u0006ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½K)\u0015gT-ï¿½_template <typename _Tp> struct std::__memcmpable<_Tp *, const _Tp *> : __is_nonvolatile_trivially_copyable<_Tp> {}\u0000>H\u0018\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001.ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\u000e\u0001ï¿½_ï¿½Ò \u0010ï¿½ï¿½\u0000\u0000\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0000ï¿½`ï¿½Uï¿½\u0016Stypedef std::__true_type std::__is_byte<char>::__type\u00002^\f\u0000\u0000\u0001ï¿½\u00014ï¿½\u0001@ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u0000ï¿½[Z6Û¾template<> struct std::__is_byte<signed char> {}\u0000$.\u0012\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u0004ï¿½\u0001\n\u0001ï¿½\u000eï¿½y/H\u0002\u0000\u0002ï¿½~ï¿½ã_ï¿½\u0005ï¿½]ï¿½\u0000\u0000\u0005\u0003\u0000\u0000\u0000\u0001ï¿½\u0001\u0016ï¿½\u0001(\u0004\u0001ï¿½l;ï¿½\u0015ï¿½_Tp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u0001ï¿½O\u0001(ï¿½O\u0001.ï¿½\u0001\u0004\u0001ï¿½O\u0001\u0016ï¿½O\u0001.\u0000\u0000\u0002ï¿½Q\u0001Hï¿½Q\u0001N\u0004\u0001ï¿½Q\u0001pï¿½Q\u0001v\u0004\u0001ï¿½~ï¿½ã_ï¿½anon enum\u0000\u0000\u0000\u0012\u0000\u0000\u0001ï¿½\u0001\fï¿½\u0001\u0014ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u00014\u0000\u0000\u0000\u0000\u0000\n\u0005\u0000\u0000\u0000\u0000ï¿½\u0005ï¿½]ï¿½typedef std::__true_type std::__is_byte<signed char>::__type\u00002l\f\u0000\u0000\u0001ï¿½\u00014ï¿½\u0001@ï¿½\u0002\u0004\u0001ï¿½\u0001\fï¿½\u0001@\u0000\u0000\u0000\u0000ï¿½mï¿½-x72ï¿½\u0005\u0000\u0000\u0000\u00009ï¿½\u000fï¿½dy[ï¿½_Iterator __it\u0000\u0014\u0014\b\u0000\u0000\u0001ï¿½/\u00026ï¿½/\u0002>ï¿½\u0002\u0004\u0001ï¿½/\u0002\"ï¿½/\u0002>ï¿½JÑçµï¿½\u001eï¿½\f\u0000\u0000\u0001ï¿½0\u0002\u001aï¿½0\u0002\"\u0004\u0001ï¿½\u0001Xï¿½^6ï¿½static const bool std::__is_memcmp_ordered_with<type-parameter-0-0, type-parameter-0-1, false>::__value\u0000$ï¿½\u000estatic const bool std::__is_memcmp_ordered_with<type-parameter-0-0, type-parameter-0-1, false>::__value = false\u0000\u0000\u0000ï¿½\b\u0005\u0002\u0001ï¿½\u0007\u00020ï¿½\u0007\u0002>ï¿½\u0001\u0004\u0001ï¿½\u0007\u0002\fï¿½\u0007\u0002N\u0000ï¿½tï¿½LgÂ³ï¿½static const bool std::__is_memcmp_ordered::__value\u0000$X\u000estatic const bool std::__is_memcmp_ordered::__value = _Tp(-1) > _Tp(1)\u0000is unsigned\u0000\u0000ï¿½\b\u0017\u0002\u0001ï¿½\u00010ï¿½\u0001>ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001d\u0002ï¿½\u0000\u0002xï¿½\u0000\u0002ï¿½\u0004\u0001ï¿½\u0001\u0002<ï¿½\u0001\u0002J\u0004\u0001ï¿½.;ï¿½^dï¿½std::__memcmpable::__value = 0\u0000\u0000&\u000e\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00010ï¿½\u001dï¿½\"ï¿½\u0016\u0017\u0000\u0000\u0000ï¿½Ê\tï¿½std::__memcpyable::__value = 0\u0000\u0000&\u000e\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00010ï¿½F?ï¿½P8\u0005\u0016\u0017\u0000\u0000\u0000ï¿½[.`ï¿½Rï¿½static const bool std::__is_memcmp_ordered_with::__value\u0000$b\u000estatic const bool std::__is_memcmp_ordered_with::__value = __is_memcmp_ordered<_Tp>::__value\n\t&& __is_memcmp_ordered<_Up>::__value\u0000\u0000\u0000ï¿½\b\u0017\u0002\u0001ï¿½\u0000\u00020ï¿½\u0000\u0002>ï¿½\u0001\u0004\u0001ï¿½\u0000\u0002\fï¿½\u0001\u0002J\u0000ï¿½\u0004\u0003n\u0006\u0004ï¿½Þstd::__is_nonvolatile_trivially_copyable::__value = __is_trivially_copyable(_Tp)\u0000\u0000T\u000e\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u0001fï¿½Oï¿½\u001dÓ§ï¿½\u0016\u0017\u0000\u0000\u0000ï¿½Vï¿½{xï¿½\u001aï¿½std::__is_byte<signed char>::__value = 1\u0000\u0000:\u000e\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00010ï¿½~ï¿½ã_ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½Gï¿½\u0013std::__is_byte<unsigned char>::__value = 1\u0000\u0000>\u000e\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00010ï¿½c\u0010ï¿½|\t\u0016\u0005\u0000\u0000\u0000ï¿½aÐ¾ï¿½zGastd::__is_byte<char>::__value = 1\u0000\u0000,\u000e\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00010ï¿½<\u0016Cï¿½&\u0006ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½>ï¿½7 cï¿½std::__is_char<wchar_t>::__value = 1\u0000\u00002\u000e\u0000\u0000\u0001ï¿½q\u0001\u001aï¿½q\u0001(ï¿½\u0002\u0004\u0001ï¿½q\u0001\u001aï¿½q\u00010ï¿½Óªï¿½Êï¿½i\u0016\u0005\u0000\u0000\u0000ï¿½Pï¿½aï¿½jstd::__is_char::__value = 0\u0000\u0000 \u000e\u0000\u0000\u0001ï¿½b\u0001\u001aï¿½b\u0001(ï¿½\u0002\u0004\u0001ï¿½b\u0001\u001aï¿½b\u00010ï¿½\u0018ï¿½'ï¿½\u0003ï¿½\u0016\u0017\u0000\u0000\u0000ï¿½haï¿½)std::__is_pointer<type-parameter-0-0 *>::__value = 1\u0000\u0000R\u000e\u0000\u0000\u0001ï¿½H\u0001\u001aï¿½H\u0001(ï¿½\u0002\u0004\u0001ï¿½H\u0001\u001aï¿½H\u00010ï¿½\u000eï¿½Qï¿½\u0006ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½\u0018s>ï¿½std::__is_floating<long double>::__value = 1\u0000\u0000B\u000e\u0000\u0000\u0001ï¿½7\u0001\u001aï¿½7\u0001(ï¿½\u0002\u0004\u0001ï¿½7\u0001\u001aï¿½7\u00010ï¿½s\u001bOï¿½i<ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½ r\u0001ï¿½/ï¿½std::__is_floating<float>::__value = 1\u0000\u00006\u000e\u0000\u0000\u0001ï¿½)\u0001\u001aï¿½)\u0001(ï¿½\u0002\u0004\u0001ï¿½)\u0001\u001aï¿½)\u00010ï¿½)\u001dï¿½~ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½-g\u001fNiÔï¿½bool std::__is_memcmp_ordered::_TreatAsBytes = __is_byte<_Tp>::__value\u0000\n>\u001a\u0000\u0000\u0000ï¿½\u0017\u0000\u0001ï¿½\u0001<ï¿½\u0001Vï¿½\u0001\u0004\u0001ï¿½\u00012ï¿½\u00010\u0000ï¿½Ogtï¿½std::__is_floating::__value = 0\u0000\u0000(\u000e\u0000\u0000\u0001ï¿½!\u0001\u001aï¿½!\u0001(ï¿½\u0002\u0004\u0001ï¿½!\u0001\u001aï¿½!\u00010ï¿½\u001eÅï¿½\u0013ï¿½\u0016\u0017\u0000\u0000\u0000ï¿½`Ã¦kï¿½Zstd::__is_integer<__int128>::__value = 1\u0000\u0000:\u000e\u0000\u0000\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>ï¿½\u0002\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001\u000eï¿½5ï¿½=ï¿½Î(\u0016\u0005\u0000\u0000\u0001ï¿½\u0002\u0001\u001aï¿½\u0002\u0001(@\u0000ï¿½uï¿½\u0001\u0000\u0016ï¿½std::__is_integer<long long>::__value = 1\u0000\u0000<\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½9ï¿½\u0017^\u0007\u0016\u0005\u0000\u0000\u0000ï¿½\u0011;ï¿½`Eï¿½{ï¿½static const bool std::__is_memcmp_ordered<type-parameter-0-0, false>::__value\u0000$ï¿½\u000estatic const bool std::__is_memcmp_ordered<type-parameter-0-0, false>::__value = false\u0000\u0000\u0000ï¿½\b\u0005\u0002\u0001ï¿½\u00010ï¿½\u0001>ï¿½\u0001\u0004\u0001ï¿½\u0001\fï¿½\u0001N\u0000ï¿½K~ï¿½|ï¿½\u0004m\u001astd::__are_same<type-parameter-0-0, type-parameter-0-0>::__value = 1\u0000\u0000r\u000e\u0000\u0000\u0001g\u001ag(ï¿½\u0002\u0004\u0001g\u001ag0ï¿½|Æ©t\f\"Ø\u0016\u0005\u0000\u0000\u0000ï¿½\u0011ï¿½)ï¿½$qstd::__is_void<void>::__value = 1\u0000\u0000,\u000e\u0000\u0000\u0001v\u001av(ï¿½\u0002\u0004\u0001v\u001av0ï¿½FÍ¦ï¿½\u0017ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½\u000bï¿½y=Bï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003ï¿½\bï¿½\u001e@\u0001ï¿½\u0001\bï¿½\u0001\u001e@\u0001ï¿½\n\u0002\bï¿½\n\u0002\u001e@\u0001ï¿½gï¿½@rï¿½\u0005std::__are_same::__value = 0\u0000\u0000\"\u000e\u0000\u0000\u0001`\u001a`(ï¿½\u0002\u0004\u0001`\u001a`0ï¿½oï¿½\"ï¿½N\u0005ï¿½\u0016\u0017\u0000\u0000\u0000ï¿½Uï¿½Hï¿½Vï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½2\u0002\u0000ï¿½2\u0002<@\u0001ï¿½\u0013ï¿½\u001cï¿½std::__is_integer<signed char>::__value = 1\u0000\u0000@\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½{ï¿½\bjï¿½\u001b\u0016\u0005\u0000\u0000\u0000ï¿½OKï¿½uï¿½std::__is_pointer::__value = 0\u0000\u0000&\u000e\u0000\u0000\u0001ï¿½A\u0001\u001aï¿½A\u0001(ï¿½\u0002\u0004\u0001ï¿½A\u0001\u001aï¿½A\u00010ï¿½\u0013jï¿½1+`]\u0016\u0017\u0000\u0000\u0000ï¿½/ï¿½!v{ï¿½std::__is_integer<long>::__value = 1\u0000\u00002\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½cï¿½f\nuï¿½\u0016\u0005\u0000\u0000\u0000ï¿½Ãï¿½v_$ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\r\u0001\u0010ï¿½\r\u0001<@\u0001ï¿½\u000b\u0013ï¿½`ï¿½__INT_N\u0000\u0000\u0000\u000e#define __INT_N\u0000\u0000\u0001ï¿½\u0000\u0010ï¿½\u0000\u001e\u0002\u0001ï¿½\u0000\u0010ï¿½\n\u0001\f\u0000ï¿½\u0001\u0000\u0000\u0002ï¿½\r\u0001\u0000ï¿½\r\u0001\u000e@\u0001ï¿½\u0019\u0001\u000eï¿½\u0019\u0001\u001c@\u0001ï¿½)ï¿½j\u0006tï¿½eG\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0001\bï¿½\u0001$@\u0001ï¿½+ï¿½[vÉ·ï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001F\u0000F@@\u0001ï¿½\u0010ï¿½Eï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001D\u001cDB@\u0001ï¿½}_v?\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½-\u0002\bï¿½-\u00020@\u0001ï¿½-uï¿½\u0013Iï¿½7_CPP_TYPE_TRAITS_H\u0000\u0000\u0000$#define _CPP_TYPE_TRAITS_H 1\u0000\u0000\u0001 \u0010 4\u0002\u0001 \u0010 8\u0000ï¿½\u0001\u0000\u0000\u0000ï¿½\u0010ï¿½x.cstd::__is_char<char>::__value = 1\u0000\u0000,\u000e\u0000\u0000\u0001ï¿½i\u0001\u001aï¿½i\u0001(ï¿½\u0002\u0004\u0001ï¿½i\u0001\u001aï¿½i\u00010ï¿½sï¿½\"ï¿½2\u0016\u0005\u0000\u0000\u0000ï¿½2*sï¿½w\u001dstd::__is_floating<double>::__value = 1\u0000\u00008\u000e\u0000\u0000\u0001ï¿½0\u0001\u001aï¿½0\u0001(ï¿½\u0002\u0004\u0001ï¿½0\u0001\u001aï¿½0\u00010ï¿½fAï¿½\b8ï¿½R\u0016\u0005\u0000\u0000\u0000ï¿½<ï¿½Co[ï¿½std::__is_integer<unsigned char>::__value = 1\u0000\u0000D\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½N\u0015\u0006ï¿½Ï«ï¿½_\u0016\u0005\u0000\u0000\u0000ï¿½nrï¿½\u000f Üï¿½std::__is_void::__value = 0\u0000\u0000 \u000e\u0000\u0000\u0001o\u001ao(ï¿½\u0002\u0004\u0001o\u001ao0ï¿½\u000e4\u0016\u0017\u0000\u0000\u0000ï¿½<ï¿½Astd::__is_byte::__value = 0\u0000\u0000 \u000e\u0000\u0000\u0001ï¿½y\u0001\u001aï¿½y\u0001(ï¿½\u0002\u0004\u0001ï¿½y\u0001\u001aï¿½y\u00010ï¿½'ï¿½\tï¿½1_\u0001\u0016\u0017\u0000\u0000\u0001ï¿½\u0001\"ï¿½\u00010\u0004\u0001ï¿½Wï¿½8S>ï¿½std::__traitor::__value = bool(_Sp::__value) || bool(_Tp::__value)\u0000\u0000 \u000e\u0000\u0000\u0001X\u001aX(ï¿½\u0002\u0004\u0001X\u001aX~ï¿½;ï¿½.yï¿½_ï¿½\u0016\u0017\u0000\u0000\u0001YHYV\u0004\u0001ï¿½'\f,ï¿½Gstd::__is_integer::__value = 0\u0000\u0000&\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½\b\u000fï¿½\u0018v5ï¿½B\u0016\u0017\u0000\u0000\u0000ï¿½7Kï¿½Mï¿½std::__is_move_iterator::__value = 0\u0000\u00002\u000e\u0000\u0000\u0001ï¿½&\u0002\u001aï¿½&\u0002(ï¿½\u0002\u0004\u0001ï¿½&\u0002\u001aï¿½&\u00020ï¿½.ï¿½]ï¿½Ø\u0000\u0016\u0017\u0000\u0000\u0000ï¿½\\\u0011ï¿½neï¿½std::__is_integer<unsigned long>::__value = 1\u0000\u0000D\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½gï¿½Xï¿½\u0016\u0005\u0000\u0000\u0000ï¿½&ï¿½\u0005w\u0013\u001eï¿½std::__is_integer<wchar_t>::__value = 1\u0000\u00008\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½]ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½S3ï¿½\u0014ï¿½$std::__is_nonvolatile_trivially_copyable<volatile type-parameter-0-0>::__value = 0\u0000\u0000ï¿½\u000e\u0000\u0000\u0001ï¿½\u0001\u001aï¿½\u0001(ï¿½\u0002\u0004\u0001ï¿½\u0001\u001aï¿½\u00010ï¿½i.ï¿½ÈKï¿½\u0016\u0005\u0000\u0000\u0000ï¿½|ï¿½s]ï¿½std::__is_integer<char32_t>::__value = 1\u0000\u0000:\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½>ï¿½zï¿½2ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½Kï¿½\u000eï¿½Estd::__is_integer<bool>::__value = 1\u0000\u00002\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½QC\u0004Rï¿½\u0005\u001a\u0016\u0005\u0000\u0000\u0000ï¿½y\rï¿½Nï¿½Fï¿½\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001ï¿½\u0001,ï¿½\u0001T@\u0001ï¿½Öï¿½\u000fstd::__is_integer<char>::__value = 1\u0000\u00002\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½cï¿½v\u0011ï¿½\u0005\u0016\u0005\u0000\u0000\u0000ï¿½yV\u0012ï¿½3ï¿½std::__is_integer<char16_t>::__value = 1\u0000\u0000:\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½1ï¿½[u[w^ï¿½\u0016\u0005\u0000\u0000\u0000ï¿½6\u0007Cï¿½lï¿½std::__is_integer<unsigned __int128>::__value = 1\u0000\u0000L\u000e\u0000\u0000\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001>ï¿½\u0002\u0004\u0001ï¿½\r\u0001\u0000ï¿½\r\u0001\u000eï¿½!ï¿½&rÝ\u0016\u0005\u0000\u0000\u0001ï¿½\b\u0001\u001aï¿½\b\u0001(@\u0000ï¿½;?ï¿½\u0004\u0006ï¿½ustd::__is_integer<unsigned long long>::__value = 1\u0000\u0000N\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½NfTuh}ï¿½>\u0016\u0005\u0000\u0000\u0000ï¿½\"ï¿½'0\u001astd::__is_integer<short>::__value = 1\u0000\u00004\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½cdï¿½v\u0016\u0005\u0000\u0000\u0000ï¿½\"Ù¥\u0010ï¿½6@\u001dstd::__is_integer<unsigned short>::__value = 1\u0000\u0000F\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½uï¿½\fï¿½lÞï¿½\u0016\u0005\u0000\u0000\u0000ï¿½Pï¿½Z97ï¿½Yï¿½std::__is_integer<int>::__value = 1\u0000\u00000\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½&ï¿½=z+K\u0006l\u0016\u0005\u0000\u0000\u0000ï¿½Dï¿½\fï¿½std::__is_integer<unsigned int>::__value = 1\u0000\u0000B\u000e\u0000\u0000\u0001ï¿½\u001aï¿½(ï¿½\u0002\u0004\u0001ï¿½\u001aï¿½0ï¿½|\u0002_`ï¿½B|\u0016\u0005\u0000\u0000\u0000"}],"crc32":2813460863,"timestamp":1702397466,"tsString":"2024-01-02 16:52:28.0 +00:00:00","version":1}]